{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/lib/firebase.js"],"sourcesContent":["// lib/firebase-admin.js\r\nimport admin from 'firebase-admin';\r\nimport serviceAccount from '../backend/firebasePrivateKey.json'; // Rename your JSON file accordingly\r\n\r\nif (!admin.apps.length) {\r\n  admin.initializeApp({\r\n    credential: admin.credential.cert(serviceAccount),\r\n    projectId: serviceAccount.project_id,\r\n  });\r\n}\r\n\r\nexport const auth = admin.auth();\r\nexport default admin;\r\n"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AACxB;;;;;;;;AAGA,IAAI,CAAC,2HAAA,CAAA,UAAK,CAAC,IAAI,CAAC,MAAM,EAAE;IACtB,2HAAA,CAAA,UAAK,CAAC,aAAa,CAAC;QAClB,YAAY,2HAAA,CAAA,UAAK,CAAC,UAAU,CAAC,IAAI,CAAC;QAClC,WAAW,eAAe,UAAU;IACtC;AACF;AAEO,MAAM,OAAO,2HAAA,CAAA,UAAK,CAAC,IAAI;uCACf,2HAAA,CAAA,UAAK","debugId":null}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/app/context/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  ReactNode,\r\n} from \"react\";\r\nimport { auth } from \"@/lib/firebase\";\r\nimport { onAuthStateChanged, User } from \"firebase/auth\";\r\n\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  loading: boolean;\r\n  token: string | null;\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  loading: true,\r\n  token: null,\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        const token = await firebaseUser.getIdToken();\r\n        setUser(firebaseUser);\r\n        setToken(token);\r\n      } else {\r\n        setUser(null);\r\n        setToken(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAOA;AACA;AAAA;AAVA;;;;;AAkBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AAEjC,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,+GAAA,CAAA,OAAI,EAAE,OAAO;YAClD,IAAI,cAAc;gBAChB,MAAM,QAAQ,MAAM,aAAa,UAAU;gBAC3C,QAAQ;gBACR,SAAS;YACX,OAAO;gBACL,QAAQ;gBACR,SAAS;YACX;YACA,WAAW;QACb;QAEA,OAAO,IAAM;IACf,GAAG,EAAE;IAEL,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;QAAQ;kBACjD;;;;;;AAGP","debugId":null}}]
}