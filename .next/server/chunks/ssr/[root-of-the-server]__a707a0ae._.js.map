{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/lib/firebase.js"],"sourcesContent":["\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { GoogleAuthProvider } from \"firebase/auth/web-extension\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyApIfWzATuu3aYegudNeu0-3rxXMlgASPo\",\r\n  authDomain: \"firba-2780f.firebaseapp.com\",\r\n  projectId: \"firba-2780f\",\r\n  storageBucket: \"firba-2780f.firebasestorage.app\",\r\n  messagingSenderId: \"765595891719\",\r\n  appId: \"1:765595891719:web:16d4d26135151bb69fd2a2\",\r\n  measurementId: \"G-FGN0KZEDR8\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\nexport const auth = getAuth(app);\r\nexport const googleProvider = new GoogleAuthProvider();"],"names":[],"mappings":"AACA,uDAAuD;;;;;AACvD;AAAA;AACA;AAAA;AACA;AAAA;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAGnB,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,iBAAiB,IAAI,4OAAA,CAAA,qBAAkB","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/app/context/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  createContext,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  ReactNode,\r\n} from \"react\";\r\nimport { auth } from \"@/lib/firebase\";\r\nimport { onAuthStateChanged, User } from \"firebase/auth\";\r\n\r\ntype AuthContextType = {\r\n  user: User | null;\r\n  loading: boolean;\r\n  token: string | null;\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  loading: true,\r\n  token: null,\r\n});\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        const token = await firebaseUser.getIdToken();\r\n        setUser(firebaseUser);\r\n        setToken(token);\r\n      } else {\r\n        setUser(null);\r\n        setToken(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAOA;AACA;AAAA;AAVA;;;;;AAkBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AAEjC,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,+GAAA,CAAA,OAAI,EAAE,OAAO;YAClD,IAAI,cAAc;gBAChB,MAAM,QAAQ,MAAM,aAAa,UAAU;gBAC3C,QAAQ;gBACR,SAAS;YACX,OAAO;gBACL,QAAQ;gBACR,SAAS;YACX;YACA,WAAW;QACb;QAEA,OAAO,IAAM;IACf,GAAG,EAAE;IAEL,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;QAAQ;kBACjD;;;;;;AAGP","debugId":null}}]
}