{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/node_modules/%40tiptap/core/dist/index.js"],"sourcesContent":["import { Plugin, PluginKey, TextSelection, Selection, AllSelection, NodeSelection, EditorState } from '@tiptap/pm/state';\nimport { EditorView } from '@tiptap/pm/view';\nimport { keymap } from '@tiptap/pm/keymap';\nimport { Schema, DOMSerializer, Fragment, Node as Node$1, DOMParser, Slice } from '@tiptap/pm/model';\nimport { liftTarget, ReplaceStep, ReplaceAroundStep, joinPoint, Transform, canSplit, canJoin, findWrapping } from '@tiptap/pm/transform';\nimport { createParagraphNear as createParagraphNear$1, deleteSelection as deleteSelection$1, exitCode as exitCode$1, joinUp as joinUp$1, joinDown as joinDown$1, joinBackward as joinBackward$1, joinForward as joinForward$1, joinTextblockBackward as joinTextblockBackward$1, joinTextblockForward as joinTextblockForward$1, lift as lift$1, liftEmptyBlock as liftEmptyBlock$1, newlineInCode as newlineInCode$1, selectNodeBackward as selectNodeBackward$1, selectNodeForward as selectNodeForward$1, selectParentNode as selectParentNode$1, selectTextblockEnd as selectTextblockEnd$1, selectTextblockStart as selectTextblockStart$1, setBlockType, wrapIn as wrapIn$1 } from '@tiptap/pm/commands';\nimport { liftListItem as liftListItem$1, sinkListItem as sinkListItem$1, wrapInList as wrapInList$1 } from '@tiptap/pm/schema-list';\n\n/**\n * Takes a Transaction & Editor State and turns it into a chainable state object\n * @param config The transaction and state to create the chainable state from\n * @returns A chainable Editor state object\n */\nfunction createChainableState(config) {\n    const { state, transaction } = config;\n    let { selection } = transaction;\n    let { doc } = transaction;\n    let { storedMarks } = transaction;\n    return {\n        ...state,\n        apply: state.apply.bind(state),\n        applyTransaction: state.applyTransaction.bind(state),\n        plugins: state.plugins,\n        schema: state.schema,\n        reconfigure: state.reconfigure.bind(state),\n        toJSON: state.toJSON.bind(state),\n        get storedMarks() {\n            return storedMarks;\n        },\n        get selection() {\n            return selection;\n        },\n        get doc() {\n            return doc;\n        },\n        get tr() {\n            selection = transaction.selection;\n            doc = transaction.doc;\n            storedMarks = transaction.storedMarks;\n            return transaction;\n        },\n    };\n}\n\nclass CommandManager {\n    constructor(props) {\n        this.editor = props.editor;\n        this.rawCommands = this.editor.extensionManager.commands;\n        this.customState = props.state;\n    }\n    get hasCustomState() {\n        return !!this.customState;\n    }\n    get state() {\n        return this.customState || this.editor.state;\n    }\n    get commands() {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const { tr } = state;\n        const props = this.buildProps(tr);\n        return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n            const method = (...args) => {\n                const callback = command(...args)(props);\n                if (!tr.getMeta('preventDispatch') && !this.hasCustomState) {\n                    view.dispatch(tr);\n                }\n                return callback;\n            };\n            return [name, method];\n        }));\n    }\n    get chain() {\n        return () => this.createChain();\n    }\n    get can() {\n        return () => this.createCan();\n    }\n    createChain(startTr, shouldDispatch = true) {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const callbacks = [];\n        const hasStartTransaction = !!startTr;\n        const tr = startTr || state.tr;\n        const run = () => {\n            if (!hasStartTransaction\n                && shouldDispatch\n                && !tr.getMeta('preventDispatch')\n                && !this.hasCustomState) {\n                view.dispatch(tr);\n            }\n            return callbacks.every(callback => callback === true);\n        };\n        const chain = {\n            ...Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n                const chainedCommand = (...args) => {\n                    const props = this.buildProps(tr, shouldDispatch);\n                    const callback = command(...args)(props);\n                    callbacks.push(callback);\n                    return chain;\n                };\n                return [name, chainedCommand];\n            })),\n            run,\n        };\n        return chain;\n    }\n    createCan(startTr) {\n        const { rawCommands, state } = this;\n        const dispatch = false;\n        const tr = startTr || state.tr;\n        const props = this.buildProps(tr, dispatch);\n        const formattedCommands = Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n            return [name, (...args) => command(...args)({ ...props, dispatch: undefined })];\n        }));\n        return {\n            ...formattedCommands,\n            chain: () => this.createChain(tr, dispatch),\n        };\n    }\n    buildProps(tr, shouldDispatch = true) {\n        const { rawCommands, editor, state } = this;\n        const { view } = editor;\n        const props = {\n            tr,\n            editor,\n            view,\n            state: createChainableState({\n                state,\n                transaction: tr,\n            }),\n            dispatch: shouldDispatch ? () => undefined : undefined,\n            chain: () => this.createChain(tr, shouldDispatch),\n            can: () => this.createCan(tr),\n            get commands() {\n                return Object.fromEntries(Object.entries(rawCommands).map(([name, command]) => {\n                    return [name, (...args) => command(...args)(props)];\n                }));\n            },\n        };\n        return props;\n    }\n}\n\nclass EventEmitter {\n    constructor() {\n        this.callbacks = {};\n    }\n    on(event, fn) {\n        if (!this.callbacks[event]) {\n            this.callbacks[event] = [];\n        }\n        this.callbacks[event].push(fn);\n        return this;\n    }\n    emit(event, ...args) {\n        const callbacks = this.callbacks[event];\n        if (callbacks) {\n            callbacks.forEach(callback => callback.apply(this, args));\n        }\n        return this;\n    }\n    off(event, fn) {\n        const callbacks = this.callbacks[event];\n        if (callbacks) {\n            if (fn) {\n                this.callbacks[event] = callbacks.filter(callback => callback !== fn);\n            }\n            else {\n                delete this.callbacks[event];\n            }\n        }\n        return this;\n    }\n    once(event, fn) {\n        const onceFn = (...args) => {\n            this.off(event, onceFn);\n            fn.apply(this, args);\n        };\n        return this.on(event, onceFn);\n    }\n    removeAllListeners() {\n        this.callbacks = {};\n    }\n}\n\n/**\n * Returns a field from an extension\n * @param extension The Tiptap extension\n * @param field The field, for example `renderHTML` or `priority`\n * @param context The context object that should be passed as `this` into the function\n * @returns The field value\n */\nfunction getExtensionField(extension, field, context) {\n    if (extension.config[field] === undefined && extension.parent) {\n        return getExtensionField(extension.parent, field, context);\n    }\n    if (typeof extension.config[field] === 'function') {\n        const value = extension.config[field].bind({\n            ...context,\n            parent: extension.parent\n                ? getExtensionField(extension.parent, field, context)\n                : null,\n        });\n        return value;\n    }\n    return extension.config[field];\n}\n\nfunction splitExtensions(extensions) {\n    const baseExtensions = extensions.filter(extension => extension.type === 'extension');\n    const nodeExtensions = extensions.filter(extension => extension.type === 'node');\n    const markExtensions = extensions.filter(extension => extension.type === 'mark');\n    return {\n        baseExtensions,\n        nodeExtensions,\n        markExtensions,\n    };\n}\n\n/**\n * Get a list of all extension attributes defined in `addAttribute` and `addGlobalAttribute`.\n * @param extensions List of extensions\n */\nfunction getAttributesFromExtensions(extensions) {\n    const extensionAttributes = [];\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\n    const nodeAndMarkExtensions = [...nodeExtensions, ...markExtensions];\n    const defaultAttribute = {\n        default: null,\n        rendered: true,\n        renderHTML: null,\n        parseHTML: null,\n        keepOnSplit: true,\n        isRequired: false,\n    };\n    extensions.forEach(extension => {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            extensions: nodeAndMarkExtensions,\n        };\n        const addGlobalAttributes = getExtensionField(extension, 'addGlobalAttributes', context);\n        if (!addGlobalAttributes) {\n            return;\n        }\n        const globalAttributes = addGlobalAttributes();\n        globalAttributes.forEach(globalAttribute => {\n            globalAttribute.types.forEach(type => {\n                Object\n                    .entries(globalAttribute.attributes)\n                    .forEach(([name, attribute]) => {\n                    extensionAttributes.push({\n                        type,\n                        name,\n                        attribute: {\n                            ...defaultAttribute,\n                            ...attribute,\n                        },\n                    });\n                });\n            });\n        });\n    });\n    nodeAndMarkExtensions.forEach(extension => {\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n        };\n        const addAttributes = getExtensionField(extension, 'addAttributes', context);\n        if (!addAttributes) {\n            return;\n        }\n        // TODO: remove `as Attributes`\n        const attributes = addAttributes();\n        Object\n            .entries(attributes)\n            .forEach(([name, attribute]) => {\n            const mergedAttr = {\n                ...defaultAttribute,\n                ...attribute,\n            };\n            if (typeof (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === 'function') {\n                mergedAttr.default = mergedAttr.default();\n            }\n            if ((mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.isRequired) && (mergedAttr === null || mergedAttr === void 0 ? void 0 : mergedAttr.default) === undefined) {\n                delete mergedAttr.default;\n            }\n            extensionAttributes.push({\n                type: extension.name,\n                name,\n                attribute: mergedAttr,\n            });\n        });\n    });\n    return extensionAttributes;\n}\n\nfunction getNodeType(nameOrType, schema) {\n    if (typeof nameOrType === 'string') {\n        if (!schema.nodes[nameOrType]) {\n            throw Error(`There is no node type named '${nameOrType}'. Maybe you forgot to add the extension?`);\n        }\n        return schema.nodes[nameOrType];\n    }\n    return nameOrType;\n}\n\nfunction mergeAttributes(...objects) {\n    return objects\n        .filter(item => !!item)\n        .reduce((items, item) => {\n        const mergedAttributes = { ...items };\n        Object.entries(item).forEach(([key, value]) => {\n            const exists = mergedAttributes[key];\n            if (!exists) {\n                mergedAttributes[key] = value;\n                return;\n            }\n            if (key === 'class') {\n                const valueClasses = value ? String(value).split(' ') : [];\n                const existingClasses = mergedAttributes[key] ? mergedAttributes[key].split(' ') : [];\n                const insertClasses = valueClasses.filter(valueClass => !existingClasses.includes(valueClass));\n                mergedAttributes[key] = [...existingClasses, ...insertClasses].join(' ');\n            }\n            else if (key === 'style') {\n                const newStyles = value ? value.split(';').map((style) => style.trim()).filter(Boolean) : [];\n                const existingStyles = mergedAttributes[key] ? mergedAttributes[key].split(';').map((style) => style.trim()).filter(Boolean) : [];\n                const styleMap = new Map();\n                existingStyles.forEach(style => {\n                    const [property, val] = style.split(':').map(part => part.trim());\n                    styleMap.set(property, val);\n                });\n                newStyles.forEach(style => {\n                    const [property, val] = style.split(':').map(part => part.trim());\n                    styleMap.set(property, val);\n                });\n                mergedAttributes[key] = Array.from(styleMap.entries()).map(([property, val]) => `${property}: ${val}`).join('; ');\n            }\n            else {\n                mergedAttributes[key] = value;\n            }\n        });\n        return mergedAttributes;\n    }, {});\n}\n\nfunction getRenderedAttributes(nodeOrMark, extensionAttributes) {\n    return extensionAttributes\n        .filter(attribute => attribute.type === nodeOrMark.type.name)\n        .filter(item => item.attribute.rendered)\n        .map(item => {\n        if (!item.attribute.renderHTML) {\n            return {\n                [item.name]: nodeOrMark.attrs[item.name],\n            };\n        }\n        return item.attribute.renderHTML(nodeOrMark.attrs) || {};\n    })\n        .reduce((attributes, attribute) => mergeAttributes(attributes, attribute), {});\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\n/**\n * Optionally calls `value` as a function.\n * Otherwise it is returned directly.\n * @param value Function or any value.\n * @param context Optional context to bind to function.\n * @param props Optional props to pass to function.\n */\nfunction callOrReturn(value, context = undefined, ...props) {\n    if (isFunction(value)) {\n        if (context) {\n            return value.bind(context)(...props);\n        }\n        return value(...props);\n    }\n    return value;\n}\n\nfunction isEmptyObject(value = {}) {\n    return Object.keys(value).length === 0 && value.constructor === Object;\n}\n\nfunction fromString(value) {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    if (value.match(/^[+-]?(?:\\d*\\.)?\\d+$/)) {\n        return Number(value);\n    }\n    if (value === 'true') {\n        return true;\n    }\n    if (value === 'false') {\n        return false;\n    }\n    return value;\n}\n\n/**\n * This function merges extension attributes into parserule attributes (`attrs` or `getAttrs`).\n * Cancels when `getAttrs` returned `false`.\n * @param parseRule ProseMirror ParseRule\n * @param extensionAttributes List of attributes to inject\n */\nfunction injectExtensionAttributesToParseRule(parseRule, extensionAttributes) {\n    if ('style' in parseRule) {\n        return parseRule;\n    }\n    return {\n        ...parseRule,\n        getAttrs: (node) => {\n            const oldAttributes = parseRule.getAttrs ? parseRule.getAttrs(node) : parseRule.attrs;\n            if (oldAttributes === false) {\n                return false;\n            }\n            const newAttributes = extensionAttributes.reduce((items, item) => {\n                const value = item.attribute.parseHTML\n                    ? item.attribute.parseHTML(node)\n                    : fromString((node).getAttribute(item.name));\n                if (value === null || value === undefined) {\n                    return items;\n                }\n                return {\n                    ...items,\n                    [item.name]: value,\n                };\n            }, {});\n            return { ...oldAttributes, ...newAttributes };\n        },\n    };\n}\n\nfunction cleanUpSchemaItem(data) {\n    return Object.fromEntries(\n    // @ts-ignore\n    Object.entries(data).filter(([key, value]) => {\n        if (key === 'attrs' && isEmptyObject(value)) {\n            return false;\n        }\n        return value !== null && value !== undefined;\n    }));\n}\n/**\n * Creates a new Prosemirror schema based on the given extensions.\n * @param extensions An array of Tiptap extensions\n * @param editor The editor instance\n * @returns A Prosemirror schema\n */\nfunction getSchemaByResolvedExtensions(extensions, editor) {\n    var _a;\n    const allAttributes = getAttributesFromExtensions(extensions);\n    const { nodeExtensions, markExtensions } = splitExtensions(extensions);\n    const topNode = (_a = nodeExtensions.find(extension => getExtensionField(extension, 'topNode'))) === null || _a === void 0 ? void 0 : _a.name;\n    const nodes = Object.fromEntries(nodeExtensions.map(extension => {\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n        };\n        const extraNodeFields = extensions.reduce((fields, e) => {\n            const extendNodeSchema = getExtensionField(e, 'extendNodeSchema', context);\n            return {\n                ...fields,\n                ...(extendNodeSchema ? extendNodeSchema(extension) : {}),\n            };\n        }, {});\n        const schema = cleanUpSchemaItem({\n            ...extraNodeFields,\n            content: callOrReturn(getExtensionField(extension, 'content', context)),\n            marks: callOrReturn(getExtensionField(extension, 'marks', context)),\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\n            inline: callOrReturn(getExtensionField(extension, 'inline', context)),\n            atom: callOrReturn(getExtensionField(extension, 'atom', context)),\n            selectable: callOrReturn(getExtensionField(extension, 'selectable', context)),\n            draggable: callOrReturn(getExtensionField(extension, 'draggable', context)),\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\n            whitespace: callOrReturn(getExtensionField(extension, 'whitespace', context)),\n            linebreakReplacement: callOrReturn(getExtensionField(extension, 'linebreakReplacement', context)),\n            defining: callOrReturn(getExtensionField(extension, 'defining', context)),\n            isolating: callOrReturn(getExtensionField(extension, 'isolating', context)),\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\n                var _a;\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\n            })),\n        });\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\n        if (parseHTML) {\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\n        }\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\n        if (renderHTML) {\n            schema.toDOM = node => renderHTML({\n                node,\n                HTMLAttributes: getRenderedAttributes(node, extensionAttributes),\n            });\n        }\n        const renderText = getExtensionField(extension, 'renderText', context);\n        if (renderText) {\n            schema.toText = renderText;\n        }\n        return [extension.name, schema];\n    }));\n    const marks = Object.fromEntries(markExtensions.map(extension => {\n        const extensionAttributes = allAttributes.filter(attribute => attribute.type === extension.name);\n        const context = {\n            name: extension.name,\n            options: extension.options,\n            storage: extension.storage,\n            editor,\n        };\n        const extraMarkFields = extensions.reduce((fields, e) => {\n            const extendMarkSchema = getExtensionField(e, 'extendMarkSchema', context);\n            return {\n                ...fields,\n                ...(extendMarkSchema ? extendMarkSchema(extension) : {}),\n            };\n        }, {});\n        const schema = cleanUpSchemaItem({\n            ...extraMarkFields,\n            inclusive: callOrReturn(getExtensionField(extension, 'inclusive', context)),\n            excludes: callOrReturn(getExtensionField(extension, 'excludes', context)),\n            group: callOrReturn(getExtensionField(extension, 'group', context)),\n            spanning: callOrReturn(getExtensionField(extension, 'spanning', context)),\n            code: callOrReturn(getExtensionField(extension, 'code', context)),\n            attrs: Object.fromEntries(extensionAttributes.map(extensionAttribute => {\n                var _a;\n                return [extensionAttribute.name, { default: (_a = extensionAttribute === null || extensionAttribute === void 0 ? void 0 : extensionAttribute.attribute) === null || _a === void 0 ? void 0 : _a.default }];\n            })),\n        });\n        const parseHTML = callOrReturn(getExtensionField(extension, 'parseHTML', context));\n        if (parseHTML) {\n            schema.parseDOM = parseHTML.map(parseRule => injectExtensionAttributesToParseRule(parseRule, extensionAttributes));\n        }\n        const renderHTML = getExtensionField(extension, 'renderHTML', context);\n        if (renderHTML) {\n            schema.toDOM = mark => renderHTML({\n                mark,\n                HTMLAttributes: getRenderedAttributes(mark, extensionAttributes),\n            });\n        }\n        return [extension.name, schema];\n    }));\n    return new Schema({\n        topNode,\n        nodes,\n        marks,\n    });\n}\n\n/**\n * Tries to get a node or mark type by its name.\n * @param name The name of the node or mark type\n * @param schema The Prosemiror schema to search in\n * @returns The node or mark type, or null if it doesn't exist\n */\nfunction getSchemaTypeByName(name, schema) {\n    return schema.nodes[name] || schema.marks[name] || null;\n}\n\nfunction isExtensionRulesEnabled(extension, enabled) {\n    if (Array.isArray(enabled)) {\n        return enabled.some(enabledExtension => {\n            const name = typeof enabledExtension === 'string'\n                ? enabledExtension\n                : enabledExtension.name;\n            return name === extension.name;\n        });\n    }\n    return enabled;\n}\n\nfunction getHTMLFromFragment(fragment, schema) {\n    const documentFragment = DOMSerializer.fromSchema(schema).serializeFragment(fragment);\n    const temporaryDocument = document.implementation.createHTMLDocument();\n    const container = temporaryDocument.createElement('div');\n    container.appendChild(documentFragment);\n    return container.innerHTML;\n}\n\n/**\n * Returns the text content of a resolved prosemirror position\n * @param $from The resolved position to get the text content from\n * @param maxMatch The maximum number of characters to match\n * @returns The text content\n */\nconst getTextContentFromNodes = ($from, maxMatch = 500) => {\n    let textBefore = '';\n    const sliceEndPos = $from.parentOffset;\n    $from.parent.nodesBetween(Math.max(0, sliceEndPos - maxMatch), sliceEndPos, (node, pos, parent, index) => {\n        var _a, _b;\n        const chunk = ((_b = (_a = node.type.spec).toText) === null || _b === void 0 ? void 0 : _b.call(_a, {\n            node,\n            pos,\n            parent,\n            index,\n        }))\n            || node.textContent\n            || '%leaf%';\n        textBefore += node.isAtom && !node.isText ? chunk : chunk.slice(0, Math.max(0, sliceEndPos - pos));\n    });\n    return textBefore;\n};\n\nfunction isRegExp(value) {\n    return Object.prototype.toString.call(value) === '[object RegExp]';\n}\n\nclass InputRule {\n    constructor(config) {\n        this.find = config.find;\n        this.handler = config.handler;\n    }\n}\nconst inputRuleMatcherHandler = (text, find) => {\n    if (isRegExp(find)) {\n        return find.exec(text);\n    }\n    const inputRuleMatch = find(text);\n    if (!inputRuleMatch) {\n        return null;\n    }\n    const result = [inputRuleMatch.text];\n    result.index = inputRuleMatch.index;\n    result.input = text;\n    result.data = inputRuleMatch.data;\n    if (inputRuleMatch.replaceWith) {\n        if (!inputRuleMatch.text.includes(inputRuleMatch.replaceWith)) {\n            console.warn('[tiptap warn]: \"inputRuleMatch.replaceWith\" must be part of \"inputRuleMatch.text\".');\n        }\n        result.push(inputRuleMatch.replaceWith);\n    }\n    return result;\n};\nfunction run$1(config) {\n    var _a;\n    const { editor, from, to, text, rules, plugin, } = config;\n    const { view } = editor;\n    if (view.composing) {\n        return false;\n    }\n    const $from = view.state.doc.resolve(from);\n    if (\n    // check for code node\n    $from.parent.type.spec.code\n        // check for code mark\n        || !!((_a = ($from.nodeBefore || $from.nodeAfter)) === null || _a === void 0 ? void 0 : _a.marks.find(mark => mark.type.spec.code))) {\n        return false;\n    }\n    let matched = false;\n    const textBefore = getTextContentFromNodes($from) + text;\n    rules.forEach(rule => {\n        if (matched) {\n            return;\n        }\n        const match = inputRuleMatcherHandler(textBefore, rule.find);\n        if (!match) {\n            return;\n        }\n        const tr = view.state.tr;\n        const state = createChainableState({\n            state: view.state,\n            transaction: tr,\n        });\n        const range = {\n            from: from - (match[0].length - text.length),\n            to,\n        };\n        const { commands, chain, can } = new CommandManager({\n            editor,\n            state,\n        });\n        const handler = rule.handler({\n            state,\n            range,\n            match,\n            commands,\n            chain,\n            can,\n        });\n        // stop if there are no changes\n        if (handler === null || !tr.steps.length) {\n            return;\n        }\n        // store transform as meta data\n        // so we can undo input rules within the `undoInputRules` command\n        tr.setMeta(plugin, {\n            transform: tr,\n            from,\n            to,\n            text,\n        });\n        view.dispatch(tr);\n        matched = true;\n    });\n    return matched;\n}\n/**\n * Create an input rules plugin. When enabled, it will cause text\n * input that matches any of the given rules to trigger the rule’s\n * action.\n */\nfunction inputRulesPlugin(props) {\n    const { editor, rules } = props;\n    const plugin = new Plugin({\n        state: {\n            init() {\n                return null;\n            },\n            apply(tr, prev, state) {\n                const stored = tr.getMeta(plugin);\n                if (stored) {\n                    return stored;\n                }\n                // if InputRule is triggered by insertContent()\n                const simulatedInputMeta = tr.getMeta('applyInputRules');\n                const isSimulatedInput = !!simulatedInputMeta;\n                if (isSimulatedInput) {\n                    setTimeout(() => {\n                        let { text } = simulatedInputMeta;\n                        if (typeof text === 'string') {\n                            text = text;\n                        }\n                        else {\n                            text = getHTMLFromFragment(Fragment.from(text), state.schema);\n                        }\n                        const { from } = simulatedInputMeta;\n                        const to = from + text.length;\n                        run$1({\n                            editor,\n                            from,\n                            to,\n                            text,\n                            rules,\n                            plugin,\n                        });\n                    });\n                }\n                return tr.selectionSet || tr.docChanged ? null : prev;\n            },\n        },\n        props: {\n            handleTextInput(view, from, to, text) {\n                return run$1({\n                    editor,\n                    from,\n                    to,\n                    text,\n                    rules,\n                    plugin,\n                });\n            },\n            handleDOMEvents: {\n                compositionend: view => {\n                    setTimeout(() => {\n                        const { $cursor } = view.state.selection;\n                        if ($cursor) {\n                            run$1({\n                                editor,\n                                from: $cursor.pos,\n                                to: $cursor.pos,\n                                text: '',\n                                rules,\n                                plugin,\n                            });\n                        }\n                    });\n                    return false;\n                },\n            },\n            // add support for input rules to trigger on enter\n            // this is useful for example for code blocks\n            handleKeyDown(view, event) {\n                if (event.key !== 'Enter') {\n                    return false;\n                }\n                const { $cursor } = view.state.selection;\n                if ($cursor) {\n                    return run$1({\n                        editor,\n                        from: $cursor.pos,\n                        to: $cursor.pos,\n                        text: '\\n',\n                        rules,\n                        plugin,\n                    });\n                }\n                return false;\n            },\n        },\n        // @ts-ignore\n        isInputRules: true,\n    });\n    return plugin;\n}\n\n// see: https://github.com/mesqueeb/is-what/blob/88d6e4ca92fb2baab6003c54e02eedf4e729e5ab/src/index.ts\nfunction getType(value) {\n    return Object.prototype.toString.call(value).slice(8, -1);\n}\nfunction isPlainObject(value) {\n    if (getType(value) !== 'Object') {\n        return false;\n    }\n    return value.constructor === Object && Object.getPrototypeOf(value) === Object.prototype;\n}\n\nfunction mergeDeep(target, source) {\n    const output = { ...target };\n    if (isPlainObject(target) && isPlainObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (isPlainObject(source[key]) && isPlainObject(target[key])) {\n                output[key] = mergeDeep(target[key], source[key]);\n            }\n            else {\n                output[key] = source[key];\n            }\n        });\n    }\n    return output;\n}\n\n/**\n * The Mark class is used to create custom mark extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Mark {\n    constructor(config = {}) {\n        this.type = 'mark';\n        this.name = 'mark';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Mark(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Mark(extendedConfig);\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n    static handleExit({ editor, mark }) {\n        const { tr } = editor.state;\n        const currentPos = editor.state.selection.$from;\n        const isAtEnd = currentPos.pos === currentPos.end();\n        if (isAtEnd) {\n            const currentMarks = currentPos.marks();\n            const isInMark = !!currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\n            if (!isInMark) {\n                return false;\n            }\n            const removeMark = currentMarks.find(m => (m === null || m === void 0 ? void 0 : m.type.name) === mark.name);\n            if (removeMark) {\n                tr.removeStoredMark(removeMark);\n            }\n            tr.insertText(' ', currentPos.pos);\n            editor.view.dispatch(tr);\n            return true;\n        }\n        return false;\n    }\n}\n\nfunction isNumber(value) {\n    return typeof value === 'number';\n}\n\n/**\n * Paste rules are used to react to pasted content.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nclass PasteRule {\n    constructor(config) {\n        this.find = config.find;\n        this.handler = config.handler;\n    }\n}\nconst pasteRuleMatcherHandler = (text, find, event) => {\n    if (isRegExp(find)) {\n        return [...text.matchAll(find)];\n    }\n    const matches = find(text, event);\n    if (!matches) {\n        return [];\n    }\n    return matches.map(pasteRuleMatch => {\n        const result = [pasteRuleMatch.text];\n        result.index = pasteRuleMatch.index;\n        result.input = text;\n        result.data = pasteRuleMatch.data;\n        if (pasteRuleMatch.replaceWith) {\n            if (!pasteRuleMatch.text.includes(pasteRuleMatch.replaceWith)) {\n                console.warn('[tiptap warn]: \"pasteRuleMatch.replaceWith\" must be part of \"pasteRuleMatch.text\".');\n            }\n            result.push(pasteRuleMatch.replaceWith);\n        }\n        return result;\n    });\n};\nfunction run(config) {\n    const { editor, state, from, to, rule, pasteEvent, dropEvent, } = config;\n    const { commands, chain, can } = new CommandManager({\n        editor,\n        state,\n    });\n    const handlers = [];\n    state.doc.nodesBetween(from, to, (node, pos) => {\n        if (!node.isTextblock || node.type.spec.code) {\n            return;\n        }\n        const resolvedFrom = Math.max(from, pos);\n        const resolvedTo = Math.min(to, pos + node.content.size);\n        const textToMatch = node.textBetween(resolvedFrom - pos, resolvedTo - pos, undefined, '\\ufffc');\n        const matches = pasteRuleMatcherHandler(textToMatch, rule.find, pasteEvent);\n        matches.forEach(match => {\n            if (match.index === undefined) {\n                return;\n            }\n            const start = resolvedFrom + match.index + 1;\n            const end = start + match[0].length;\n            const range = {\n                from: state.tr.mapping.map(start),\n                to: state.tr.mapping.map(end),\n            };\n            const handler = rule.handler({\n                state,\n                range,\n                match,\n                commands,\n                chain,\n                can,\n                pasteEvent,\n                dropEvent,\n            });\n            handlers.push(handler);\n        });\n    });\n    const success = handlers.every(handler => handler !== null);\n    return success;\n}\n// When dragging across editors, must get another editor instance to delete selection content.\nlet tiptapDragFromOtherEditor = null;\nconst createClipboardPasteEvent = (text) => {\n    var _a;\n    const event = new ClipboardEvent('paste', {\n        clipboardData: new DataTransfer(),\n    });\n    (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.setData('text/html', text);\n    return event;\n};\n/**\n * Create an paste rules plugin. When enabled, it will cause pasted\n * text that matches any of the given rules to trigger the rule’s\n * action.\n */\nfunction pasteRulesPlugin(props) {\n    const { editor, rules } = props;\n    let dragSourceElement = null;\n    let isPastedFromProseMirror = false;\n    let isDroppedFromProseMirror = false;\n    let pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null;\n    let dropEvent;\n    try {\n        dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null;\n    }\n    catch {\n        dropEvent = null;\n    }\n    const processEvent = ({ state, from, to, rule, pasteEvt, }) => {\n        const tr = state.tr;\n        const chainableState = createChainableState({\n            state,\n            transaction: tr,\n        });\n        const handler = run({\n            editor,\n            state: chainableState,\n            from: Math.max(from - 1, 0),\n            to: to.b - 1,\n            rule,\n            pasteEvent: pasteEvt,\n            dropEvent,\n        });\n        if (!handler || !tr.steps.length) {\n            return;\n        }\n        try {\n            dropEvent = typeof DragEvent !== 'undefined' ? new DragEvent('drop') : null;\n        }\n        catch {\n            dropEvent = null;\n        }\n        pasteEvent = typeof ClipboardEvent !== 'undefined' ? new ClipboardEvent('paste') : null;\n        return tr;\n    };\n    const plugins = rules.map(rule => {\n        return new Plugin({\n            // we register a global drag handler to track the current drag source element\n            view(view) {\n                const handleDragstart = (event) => {\n                    var _a;\n                    dragSourceElement = ((_a = view.dom.parentElement) === null || _a === void 0 ? void 0 : _a.contains(event.target))\n                        ? view.dom.parentElement\n                        : null;\n                    if (dragSourceElement) {\n                        tiptapDragFromOtherEditor = editor;\n                    }\n                };\n                const handleDragend = () => {\n                    if (tiptapDragFromOtherEditor) {\n                        tiptapDragFromOtherEditor = null;\n                    }\n                };\n                window.addEventListener('dragstart', handleDragstart);\n                window.addEventListener('dragend', handleDragend);\n                return {\n                    destroy() {\n                        window.removeEventListener('dragstart', handleDragstart);\n                        window.removeEventListener('dragend', handleDragend);\n                    },\n                };\n            },\n            props: {\n                handleDOMEvents: {\n                    drop: (view, event) => {\n                        isDroppedFromProseMirror = dragSourceElement === view.dom.parentElement;\n                        dropEvent = event;\n                        if (!isDroppedFromProseMirror) {\n                            const dragFromOtherEditor = tiptapDragFromOtherEditor;\n                            if (dragFromOtherEditor === null || dragFromOtherEditor === void 0 ? void 0 : dragFromOtherEditor.isEditable) {\n                                // setTimeout to avoid the wrong content after drop, timeout arg can't be empty or 0\n                                setTimeout(() => {\n                                    const selection = dragFromOtherEditor.state.selection;\n                                    if (selection) {\n                                        dragFromOtherEditor.commands.deleteRange({ from: selection.from, to: selection.to });\n                                    }\n                                }, 10);\n                            }\n                        }\n                        return false;\n                    },\n                    paste: (_view, event) => {\n                        var _a;\n                        const html = (_a = event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text/html');\n                        pasteEvent = event;\n                        isPastedFromProseMirror = !!(html === null || html === void 0 ? void 0 : html.includes('data-pm-slice'));\n                        return false;\n                    },\n                },\n            },\n            appendTransaction: (transactions, oldState, state) => {\n                const transaction = transactions[0];\n                const isPaste = transaction.getMeta('uiEvent') === 'paste' && !isPastedFromProseMirror;\n                const isDrop = transaction.getMeta('uiEvent') === 'drop' && !isDroppedFromProseMirror;\n                // if PasteRule is triggered by insertContent()\n                const simulatedPasteMeta = transaction.getMeta('applyPasteRules');\n                const isSimulatedPaste = !!simulatedPasteMeta;\n                if (!isPaste && !isDrop && !isSimulatedPaste) {\n                    return;\n                }\n                // Handle simulated paste\n                if (isSimulatedPaste) {\n                    let { text } = simulatedPasteMeta;\n                    if (typeof text === 'string') {\n                        text = text;\n                    }\n                    else {\n                        text = getHTMLFromFragment(Fragment.from(text), state.schema);\n                    }\n                    const { from } = simulatedPasteMeta;\n                    const to = from + text.length;\n                    const pasteEvt = createClipboardPasteEvent(text);\n                    return processEvent({\n                        rule,\n                        state,\n                        from,\n                        to: { b: to },\n                        pasteEvt,\n                    });\n                }\n                // handle actual paste/drop\n                const from = oldState.doc.content.findDiffStart(state.doc.content);\n                const to = oldState.doc.content.findDiffEnd(state.doc.content);\n                // stop if there is no changed range\n                if (!isNumber(from) || !to || from === to.b) {\n                    return;\n                }\n                return processEvent({\n                    rule,\n                    state,\n                    from,\n                    to,\n                    pasteEvt: pasteEvent,\n                });\n            },\n        });\n    });\n    return plugins;\n}\n\nfunction findDuplicates(items) {\n    const filtered = items.filter((el, index) => items.indexOf(el) !== index);\n    return Array.from(new Set(filtered));\n}\n\nclass ExtensionManager {\n    constructor(extensions, editor) {\n        this.splittableMarks = [];\n        this.editor = editor;\n        this.extensions = ExtensionManager.resolve(extensions);\n        this.schema = getSchemaByResolvedExtensions(this.extensions, editor);\n        this.setupExtensions();\n    }\n    /**\n     * Returns a flattened and sorted extension list while\n     * also checking for duplicated extensions and warns the user.\n     * @param extensions An array of Tiptap extensions\n     * @returns An flattened and sorted array of Tiptap extensions\n     */\n    static resolve(extensions) {\n        const resolvedExtensions = ExtensionManager.sort(ExtensionManager.flatten(extensions));\n        const duplicatedNames = findDuplicates(resolvedExtensions.map(extension => extension.name));\n        if (duplicatedNames.length) {\n            console.warn(`[tiptap warn]: Duplicate extension names found: [${duplicatedNames\n                .map(item => `'${item}'`)\n                .join(', ')}]. This can lead to issues.`);\n        }\n        return resolvedExtensions;\n    }\n    /**\n     * Create a flattened array of extensions by traversing the `addExtensions` field.\n     * @param extensions An array of Tiptap extensions\n     * @returns A flattened array of Tiptap extensions\n     */\n    static flatten(extensions) {\n        return (extensions\n            .map(extension => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n            };\n            const addExtensions = getExtensionField(extension, 'addExtensions', context);\n            if (addExtensions) {\n                return [extension, ...this.flatten(addExtensions())];\n            }\n            return extension;\n        })\n            // `Infinity` will break TypeScript so we set a number that is probably high enough\n            .flat(10));\n    }\n    /**\n     * Sort extensions by priority.\n     * @param extensions An array of Tiptap extensions\n     * @returns A sorted array of Tiptap extensions by priority\n     */\n    static sort(extensions) {\n        const defaultPriority = 100;\n        return extensions.sort((a, b) => {\n            const priorityA = getExtensionField(a, 'priority') || defaultPriority;\n            const priorityB = getExtensionField(b, 'priority') || defaultPriority;\n            if (priorityA > priorityB) {\n                return -1;\n            }\n            if (priorityA < priorityB) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n    /**\n     * Get all commands from the extensions.\n     * @returns An object with all commands where the key is the command name and the value is the command function\n     */\n    get commands() {\n        return this.extensions.reduce((commands, extension) => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor: this.editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            const addCommands = getExtensionField(extension, 'addCommands', context);\n            if (!addCommands) {\n                return commands;\n            }\n            return {\n                ...commands,\n                ...addCommands(),\n            };\n        }, {});\n    }\n    /**\n     * Get all registered Prosemirror plugins from the extensions.\n     * @returns An array of Prosemirror plugins\n     */\n    get plugins() {\n        const { editor } = this;\n        // With ProseMirror, first plugins within an array are executed first.\n        // In Tiptap, we provide the ability to override plugins,\n        // so it feels more natural to run plugins at the end of an array first.\n        // That’s why we have to reverse the `extensions` array and sort again\n        // based on the `priority` option.\n        const extensions = ExtensionManager.sort([...this.extensions].reverse());\n        const inputRules = [];\n        const pasteRules = [];\n        const allPlugins = extensions\n            .map(extension => {\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            const plugins = [];\n            const addKeyboardShortcuts = getExtensionField(extension, 'addKeyboardShortcuts', context);\n            let defaultBindings = {};\n            // bind exit handling\n            if (extension.type === 'mark' && getExtensionField(extension, 'exitable', context)) {\n                defaultBindings.ArrowRight = () => Mark.handleExit({ editor, mark: extension });\n            }\n            if (addKeyboardShortcuts) {\n                const bindings = Object.fromEntries(Object.entries(addKeyboardShortcuts()).map(([shortcut, method]) => {\n                    return [shortcut, () => method({ editor })];\n                }));\n                defaultBindings = { ...defaultBindings, ...bindings };\n            }\n            const keyMapPlugin = keymap(defaultBindings);\n            plugins.push(keyMapPlugin);\n            const addInputRules = getExtensionField(extension, 'addInputRules', context);\n            if (isExtensionRulesEnabled(extension, editor.options.enableInputRules) && addInputRules) {\n                inputRules.push(...addInputRules());\n            }\n            const addPasteRules = getExtensionField(extension, 'addPasteRules', context);\n            if (isExtensionRulesEnabled(extension, editor.options.enablePasteRules) && addPasteRules) {\n                pasteRules.push(...addPasteRules());\n            }\n            const addProseMirrorPlugins = getExtensionField(extension, 'addProseMirrorPlugins', context);\n            if (addProseMirrorPlugins) {\n                const proseMirrorPlugins = addProseMirrorPlugins();\n                plugins.push(...proseMirrorPlugins);\n            }\n            return plugins;\n        })\n            .flat();\n        return [\n            inputRulesPlugin({\n                editor,\n                rules: inputRules,\n            }),\n            ...pasteRulesPlugin({\n                editor,\n                rules: pasteRules,\n            }),\n            ...allPlugins,\n        ];\n    }\n    /**\n     * Get all attributes from the extensions.\n     * @returns An array of attributes\n     */\n    get attributes() {\n        return getAttributesFromExtensions(this.extensions);\n    }\n    /**\n     * Get all node views from the extensions.\n     * @returns An object with all node views where the key is the node name and the value is the node view function\n     */\n    get nodeViews() {\n        const { editor } = this;\n        const { nodeExtensions } = splitExtensions(this.extensions);\n        return Object.fromEntries(nodeExtensions\n            .filter(extension => !!getExtensionField(extension, 'addNodeView'))\n            .map(extension => {\n            const extensionAttributes = this.attributes.filter(attribute => attribute.type === extension.name);\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor,\n                type: getNodeType(extension.name, this.schema),\n            };\n            const addNodeView = getExtensionField(extension, 'addNodeView', context);\n            if (!addNodeView) {\n                return [];\n            }\n            const nodeview = (node, view, getPos, decorations, innerDecorations) => {\n                const HTMLAttributes = getRenderedAttributes(node, extensionAttributes);\n                return addNodeView()({\n                    // pass-through\n                    node,\n                    view,\n                    getPos: getPos,\n                    decorations,\n                    innerDecorations,\n                    // tiptap-specific\n                    editor,\n                    extension,\n                    HTMLAttributes,\n                });\n            };\n            return [extension.name, nodeview];\n        }));\n    }\n    /**\n     * Go through all extensions, create extension storages & setup marks\n     * & bind editor event listener.\n     */\n    setupExtensions() {\n        this.extensions.forEach(extension => {\n            var _a;\n            // store extension storage in editor\n            this.editor.extensionStorage[extension.name] = extension.storage;\n            const context = {\n                name: extension.name,\n                options: extension.options,\n                storage: extension.storage,\n                editor: this.editor,\n                type: getSchemaTypeByName(extension.name, this.schema),\n            };\n            if (extension.type === 'mark') {\n                const keepOnSplit = (_a = callOrReturn(getExtensionField(extension, 'keepOnSplit', context))) !== null && _a !== void 0 ? _a : true;\n                if (keepOnSplit) {\n                    this.splittableMarks.push(extension.name);\n                }\n            }\n            const onBeforeCreate = getExtensionField(extension, 'onBeforeCreate', context);\n            const onCreate = getExtensionField(extension, 'onCreate', context);\n            const onUpdate = getExtensionField(extension, 'onUpdate', context);\n            const onSelectionUpdate = getExtensionField(extension, 'onSelectionUpdate', context);\n            const onTransaction = getExtensionField(extension, 'onTransaction', context);\n            const onFocus = getExtensionField(extension, 'onFocus', context);\n            const onBlur = getExtensionField(extension, 'onBlur', context);\n            const onDestroy = getExtensionField(extension, 'onDestroy', context);\n            if (onBeforeCreate) {\n                this.editor.on('beforeCreate', onBeforeCreate);\n            }\n            if (onCreate) {\n                this.editor.on('create', onCreate);\n            }\n            if (onUpdate) {\n                this.editor.on('update', onUpdate);\n            }\n            if (onSelectionUpdate) {\n                this.editor.on('selectionUpdate', onSelectionUpdate);\n            }\n            if (onTransaction) {\n                this.editor.on('transaction', onTransaction);\n            }\n            if (onFocus) {\n                this.editor.on('focus', onFocus);\n            }\n            if (onBlur) {\n                this.editor.on('blur', onBlur);\n            }\n            if (onDestroy) {\n                this.editor.on('destroy', onDestroy);\n            }\n        });\n    }\n}\n\n/**\n * The Extension class is the base class for all extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Extension {\n    constructor(config = {}) {\n        this.type = 'extension';\n        this.name = 'extension';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Extension(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Extension({ ...this.config, ...extendedConfig });\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n}\n\n/**\n * Gets the text between two positions in a Prosemirror node\n * and serializes it using the given text serializers and block separator (see getText)\n * @param startNode The Prosemirror node to start from\n * @param range The range of the text to get\n * @param options Options for the text serializer & block separator\n * @returns The text between the two positions\n */\nfunction getTextBetween(startNode, range, options) {\n    const { from, to } = range;\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n    let text = '';\n    startNode.nodesBetween(from, to, (node, pos, parent, index) => {\n        var _a;\n        if (node.isBlock && pos > from) {\n            text += blockSeparator;\n        }\n        const textSerializer = textSerializers === null || textSerializers === void 0 ? void 0 : textSerializers[node.type.name];\n        if (textSerializer) {\n            if (parent) {\n                text += textSerializer({\n                    node,\n                    pos,\n                    parent,\n                    index,\n                    range,\n                });\n            }\n            // do not descend into child nodes when there exists a serializer\n            return false;\n        }\n        if (node.isText) {\n            text += (_a = node === null || node === void 0 ? void 0 : node.text) === null || _a === void 0 ? void 0 : _a.slice(Math.max(from, pos) - pos, to - pos); // eslint-disable-line\n        }\n    });\n    return text;\n}\n\n/**\n * Find text serializers `toText` in a Prosemirror schema\n * @param schema The Prosemirror schema to search in\n * @returns A record of text serializers by node name\n */\nfunction getTextSerializersFromSchema(schema) {\n    return Object.fromEntries(Object.entries(schema.nodes)\n        .filter(([, node]) => node.spec.toText)\n        .map(([name, node]) => [name, node.spec.toText]));\n}\n\nconst ClipboardTextSerializer = Extension.create({\n    name: 'clipboardTextSerializer',\n    addOptions() {\n        return {\n            blockSeparator: undefined,\n        };\n    },\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('clipboardTextSerializer'),\n                props: {\n                    clipboardTextSerializer: () => {\n                        const { editor } = this;\n                        const { state, schema } = editor;\n                        const { doc, selection } = state;\n                        const { ranges } = selection;\n                        const from = Math.min(...ranges.map(range => range.$from.pos));\n                        const to = Math.max(...ranges.map(range => range.$to.pos));\n                        const textSerializers = getTextSerializersFromSchema(schema);\n                        const range = { from, to };\n                        return getTextBetween(doc, range, {\n                            ...(this.options.blockSeparator !== undefined\n                                ? { blockSeparator: this.options.blockSeparator }\n                                : {}),\n                            textSerializers,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst blur = () => ({ editor, view }) => {\n    requestAnimationFrame(() => {\n        var _a;\n        if (!editor.isDestroyed) {\n            view.dom.blur();\n            // Browsers should remove the caret on blur but safari does not.\n            // See: https://github.com/ueberdosis/tiptap/issues/2405\n            (_a = window === null || window === void 0 ? void 0 : window.getSelection()) === null || _a === void 0 ? void 0 : _a.removeAllRanges();\n        }\n    });\n    return true;\n};\n\nconst clearContent = (emitUpdate = false) => ({ commands }) => {\n    return commands.setContent('', emitUpdate);\n};\n\nconst clearNodes = () => ({ state, tr, dispatch }) => {\n    const { selection } = tr;\n    const { ranges } = selection;\n    if (!dispatch) {\n        return true;\n    }\n    ranges.forEach(({ $from, $to }) => {\n        state.doc.nodesBetween($from.pos, $to.pos, (node, pos) => {\n            if (node.type.isText) {\n                return;\n            }\n            const { doc, mapping } = tr;\n            const $mappedFrom = doc.resolve(mapping.map(pos));\n            const $mappedTo = doc.resolve(mapping.map(pos + node.nodeSize));\n            const nodeRange = $mappedFrom.blockRange($mappedTo);\n            if (!nodeRange) {\n                return;\n            }\n            const targetLiftDepth = liftTarget(nodeRange);\n            if (node.type.isTextblock) {\n                const { defaultType } = $mappedFrom.parent.contentMatchAt($mappedFrom.index());\n                tr.setNodeMarkup(nodeRange.start, defaultType);\n            }\n            if (targetLiftDepth || targetLiftDepth === 0) {\n                tr.lift(nodeRange, targetLiftDepth);\n            }\n        });\n    });\n    return true;\n};\n\nconst command = fn => props => {\n    return fn(props);\n};\n\nconst createParagraphNear = () => ({ state, dispatch }) => {\n    return createParagraphNear$1(state, dispatch);\n};\n\nconst cut = (originRange, targetPos) => ({ editor, tr }) => {\n    const { state } = editor;\n    const contentSlice = state.doc.slice(originRange.from, originRange.to);\n    tr.deleteRange(originRange.from, originRange.to);\n    const newPos = tr.mapping.map(targetPos);\n    tr.insert(newPos, contentSlice.content);\n    tr.setSelection(new TextSelection(tr.doc.resolve(newPos - 1)));\n    return true;\n};\n\nconst deleteCurrentNode = () => ({ tr, dispatch }) => {\n    const { selection } = tr;\n    const currentNode = selection.$anchor.node();\n    // if there is content inside the current node, break out of this command\n    if (currentNode.content.size > 0) {\n        return false;\n    }\n    const $pos = tr.selection.$anchor;\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n        const node = $pos.node(depth);\n        if (node.type === currentNode.type) {\n            if (dispatch) {\n                const from = $pos.before(depth);\n                const to = $pos.after(depth);\n                tr.delete(from, to).scrollIntoView();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst deleteNode = typeOrName => ({ tr, state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const $pos = tr.selection.$anchor;\n    for (let depth = $pos.depth; depth > 0; depth -= 1) {\n        const node = $pos.node(depth);\n        if (node.type === type) {\n            if (dispatch) {\n                const from = $pos.before(depth);\n                const to = $pos.after(depth);\n                tr.delete(from, to).scrollIntoView();\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst deleteRange = range => ({ tr, dispatch }) => {\n    const { from, to } = range;\n    if (dispatch) {\n        tr.delete(from, to);\n    }\n    return true;\n};\n\nconst deleteSelection = () => ({ state, dispatch }) => {\n    return deleteSelection$1(state, dispatch);\n};\n\nconst enter = () => ({ commands }) => {\n    return commands.keyboardShortcut('Enter');\n};\n\nconst exitCode = () => ({ state, dispatch }) => {\n    return exitCode$1(state, dispatch);\n};\n\n/**\n * Check if object1 includes object2\n * @param object1 Object\n * @param object2 Object\n */\nfunction objectIncludes(object1, object2, options = { strict: true }) {\n    const keys = Object.keys(object2);\n    if (!keys.length) {\n        return true;\n    }\n    return keys.every(key => {\n        if (options.strict) {\n            return object2[key] === object1[key];\n        }\n        if (isRegExp(object2[key])) {\n            return object2[key].test(object1[key]);\n        }\n        return object2[key] === object1[key];\n    });\n}\n\nfunction findMarkInSet(marks, type, attributes = {}) {\n    return marks.find(item => {\n        return (item.type === type\n            && objectIncludes(\n            // Only check equality for the attributes that are provided\n            Object.fromEntries(Object.keys(attributes).map(k => [k, item.attrs[k]])), attributes));\n    });\n}\nfunction isMarkInSet(marks, type, attributes = {}) {\n    return !!findMarkInSet(marks, type, attributes);\n}\n/**\n * Get the range of a mark at a resolved position.\n */\nfunction getMarkRange(\n/**\n * The position to get the mark range for.\n */\n$pos, \n/**\n * The mark type to get the range for.\n */\ntype, \n/**\n * The attributes to match against.\n * If not provided, only the first mark at the position will be matched.\n */\nattributes) {\n    var _a;\n    if (!$pos || !type) {\n        return;\n    }\n    let start = $pos.parent.childAfter($pos.parentOffset);\n    // If the cursor is at the start of a text node that does not have the mark, look backward\n    if (!start.node || !start.node.marks.some(mark => mark.type === type)) {\n        start = $pos.parent.childBefore($pos.parentOffset);\n    }\n    // If there is no text node with the mark even backward, return undefined\n    if (!start.node || !start.node.marks.some(mark => mark.type === type)) {\n        return;\n    }\n    // Default to only matching against the first mark's attributes\n    attributes = attributes || ((_a = start.node.marks[0]) === null || _a === void 0 ? void 0 : _a.attrs);\n    // We now know that the cursor is either at the start, middle or end of a text node with the specified mark\n    // so we can look it up on the targeted mark\n    const mark = findMarkInSet([...start.node.marks], type, attributes);\n    if (!mark) {\n        return;\n    }\n    let startIndex = start.index;\n    let startPos = $pos.start() + start.offset;\n    let endIndex = startIndex + 1;\n    let endPos = startPos + start.node.nodeSize;\n    while (startIndex > 0\n        && isMarkInSet([...$pos.parent.child(startIndex - 1).marks], type, attributes)) {\n        startIndex -= 1;\n        startPos -= $pos.parent.child(startIndex).nodeSize;\n    }\n    while (endIndex < $pos.parent.childCount\n        && isMarkInSet([...$pos.parent.child(endIndex).marks], type, attributes)) {\n        endPos += $pos.parent.child(endIndex).nodeSize;\n        endIndex += 1;\n    }\n    return {\n        from: startPos,\n        to: endPos,\n    };\n}\n\nfunction getMarkType(nameOrType, schema) {\n    if (typeof nameOrType === 'string') {\n        if (!schema.marks[nameOrType]) {\n            throw Error(`There is no mark type named '${nameOrType}'. Maybe you forgot to add the extension?`);\n        }\n        return schema.marks[nameOrType];\n    }\n    return nameOrType;\n}\n\nconst extendMarkRange = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    const type = getMarkType(typeOrName, state.schema);\n    const { doc, selection } = tr;\n    const { $from, from, to } = selection;\n    if (dispatch) {\n        const range = getMarkRange($from, type, attributes);\n        if (range && range.from <= from && range.to >= to) {\n            const newSelection = TextSelection.create(doc, range.from, range.to);\n            tr.setSelection(newSelection);\n        }\n    }\n    return true;\n};\n\nconst first = commands => props => {\n    const items = typeof commands === 'function'\n        ? commands(props)\n        : commands;\n    for (let i = 0; i < items.length; i += 1) {\n        if (items[i](props)) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction isTextSelection(value) {\n    return value instanceof TextSelection;\n}\n\nfunction minMax(value = 0, min = 0, max = 0) {\n    return Math.min(Math.max(value, min), max);\n}\n\nfunction resolveFocusPosition(doc, position = null) {\n    if (!position) {\n        return null;\n    }\n    const selectionAtStart = Selection.atStart(doc);\n    const selectionAtEnd = Selection.atEnd(doc);\n    if (position === 'start' || position === true) {\n        return selectionAtStart;\n    }\n    if (position === 'end') {\n        return selectionAtEnd;\n    }\n    const minPos = selectionAtStart.from;\n    const maxPos = selectionAtEnd.to;\n    if (position === 'all') {\n        return TextSelection.create(doc, minMax(0, minPos, maxPos), minMax(doc.content.size, minPos, maxPos));\n    }\n    return TextSelection.create(doc, minMax(position, minPos, maxPos), minMax(position, minPos, maxPos));\n}\n\nfunction isAndroid() {\n    return navigator.platform === 'Android' || /android/i.test(navigator.userAgent);\n}\n\nfunction isiOS() {\n    return [\n        'iPad Simulator',\n        'iPhone Simulator',\n        'iPod Simulator',\n        'iPad',\n        'iPhone',\n        'iPod',\n    ].includes(navigator.platform)\n        // iPad on iOS 13 detection\n        || (navigator.userAgent.includes('Mac') && 'ontouchend' in document);\n}\n\nconst focus = (position = null, options = {}) => ({ editor, view, tr, dispatch, }) => {\n    options = {\n        scrollIntoView: true,\n        ...options,\n    };\n    const delayedFocus = () => {\n        // focus within `requestAnimationFrame` breaks focus on iOS and Android\n        // so we have to call this\n        if (isiOS() || isAndroid()) {\n            view.dom.focus();\n        }\n        // For React we have to focus asynchronously. Otherwise wild things happen.\n        // see: https://github.com/ueberdosis/tiptap/issues/1520\n        requestAnimationFrame(() => {\n            if (!editor.isDestroyed) {\n                view.focus();\n                if (options === null || options === void 0 ? void 0 : options.scrollIntoView) {\n                    editor.commands.scrollIntoView();\n                }\n            }\n        });\n    };\n    if ((view.hasFocus() && position === null) || position === false) {\n        return true;\n    }\n    // we don’t try to resolve a NodeSelection or CellSelection\n    if (dispatch && position === null && !isTextSelection(editor.state.selection)) {\n        delayedFocus();\n        return true;\n    }\n    // pass through tr.doc instead of editor.state.doc\n    // since transactions could change the editors state before this command has been run\n    const selection = resolveFocusPosition(tr.doc, position) || editor.state.selection;\n    const isSameSelection = editor.state.selection.eq(selection);\n    if (dispatch) {\n        if (!isSameSelection) {\n            tr.setSelection(selection);\n        }\n        // `tr.setSelection` resets the stored marks\n        // so we’ll restore them if the selection is the same as before\n        if (isSameSelection && tr.storedMarks) {\n            tr.setStoredMarks(tr.storedMarks);\n        }\n        delayedFocus();\n    }\n    return true;\n};\n\nconst forEach = (items, fn) => props => {\n    return items.every((item, index) => fn(item, { ...props, index }));\n};\n\nconst insertContent = (value, options) => ({ tr, commands }) => {\n    return commands.insertContentAt({ from: tr.selection.from, to: tr.selection.to }, value, options);\n};\n\nconst removeWhitespaces = (node) => {\n    const children = node.childNodes;\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n        const child = children[i];\n        if (child.nodeType === 3 && child.nodeValue && /^(\\n\\s\\s|\\n)$/.test(child.nodeValue)) {\n            node.removeChild(child);\n        }\n        else if (child.nodeType === 1) {\n            removeWhitespaces(child);\n        }\n    }\n    return node;\n};\nfunction elementFromString(value) {\n    // add a wrapper to preserve leading and trailing whitespace\n    const wrappedValue = `<body>${value}</body>`;\n    const html = new window.DOMParser().parseFromString(wrappedValue, 'text/html').body;\n    return removeWhitespaces(html);\n}\n\n/**\n * Takes a JSON or HTML content and creates a Prosemirror node or fragment from it.\n * @param content The JSON or HTML content to create the node from\n * @param schema The Prosemirror schema to use for the node\n * @param options Options for the parser\n * @returns The created Prosemirror node or fragment\n */\nfunction createNodeFromContent(content, schema, options) {\n    if (content instanceof Node$1 || content instanceof Fragment) {\n        return content;\n    }\n    options = {\n        slice: true,\n        parseOptions: {},\n        ...options,\n    };\n    const isJSONContent = typeof content === 'object' && content !== null;\n    const isTextContent = typeof content === 'string';\n    if (isJSONContent) {\n        try {\n            const isArrayContent = Array.isArray(content) && content.length > 0;\n            // if the JSON Content is an array of nodes, create a fragment for each node\n            if (isArrayContent) {\n                return Fragment.fromArray(content.map(item => schema.nodeFromJSON(item)));\n            }\n            const node = schema.nodeFromJSON(content);\n            if (options.errorOnInvalidContent) {\n                node.check();\n            }\n            return node;\n        }\n        catch (error) {\n            if (options.errorOnInvalidContent) {\n                throw new Error('[tiptap error]: Invalid JSON content', { cause: error });\n            }\n            console.warn('[tiptap warn]: Invalid content.', 'Passed value:', content, 'Error:', error);\n            return createNodeFromContent('', schema, options);\n        }\n    }\n    if (isTextContent) {\n        // Check for invalid content\n        if (options.errorOnInvalidContent) {\n            let hasInvalidContent = false;\n            let invalidContent = '';\n            // A copy of the current schema with a catch-all node at the end\n            const contentCheckSchema = new Schema({\n                topNode: schema.spec.topNode,\n                marks: schema.spec.marks,\n                // Prosemirror's schemas are executed such that: the last to execute, matches last\n                // This means that we can add a catch-all node at the end of the schema to catch any content that we don't know how to handle\n                nodes: schema.spec.nodes.append({\n                    __tiptap__private__unknown__catch__all__node: {\n                        content: 'inline*',\n                        group: 'block',\n                        parseDOM: [\n                            {\n                                tag: '*',\n                                getAttrs: e => {\n                                    // If this is ever called, we know that the content has something that we don't know how to handle in the schema\n                                    hasInvalidContent = true;\n                                    // Try to stringify the element for a more helpful error message\n                                    invalidContent = typeof e === 'string' ? e : e.outerHTML;\n                                    return null;\n                                },\n                            },\n                        ],\n                    },\n                }),\n            });\n            if (options.slice) {\n                DOMParser.fromSchema(contentCheckSchema).parseSlice(elementFromString(content), options.parseOptions);\n            }\n            else {\n                DOMParser.fromSchema(contentCheckSchema).parse(elementFromString(content), options.parseOptions);\n            }\n            if (options.errorOnInvalidContent && hasInvalidContent) {\n                throw new Error('[tiptap error]: Invalid HTML content', { cause: new Error(`Invalid element found: ${invalidContent}`) });\n            }\n        }\n        const parser = DOMParser.fromSchema(schema);\n        if (options.slice) {\n            return parser.parseSlice(elementFromString(content), options.parseOptions).content;\n        }\n        return parser.parse(elementFromString(content), options.parseOptions);\n    }\n    return createNodeFromContent('', schema, options);\n}\n\n// source: https://github.com/ProseMirror/prosemirror-state/blob/master/src/selection.js#L466\nfunction selectionToInsertionEnd(tr, startLen, bias) {\n    const last = tr.steps.length - 1;\n    if (last < startLen) {\n        return;\n    }\n    const step = tr.steps[last];\n    if (!(step instanceof ReplaceStep || step instanceof ReplaceAroundStep)) {\n        return;\n    }\n    const map = tr.mapping.maps[last];\n    let end = 0;\n    map.forEach((_from, _to, _newFrom, newTo) => {\n        if (end === 0) {\n            end = newTo;\n        }\n    });\n    tr.setSelection(Selection.near(tr.doc.resolve(end), bias));\n}\n\nconst isFragment = (nodeOrFragment) => {\n    return !('type' in nodeOrFragment);\n};\nconst insertContentAt = (position, value, options) => ({ tr, dispatch, editor }) => {\n    var _a;\n    if (dispatch) {\n        options = {\n            parseOptions: editor.options.parseOptions,\n            updateSelection: true,\n            applyInputRules: false,\n            applyPasteRules: false,\n            ...options,\n        };\n        let content;\n        const emitContentError = (error) => {\n            editor.emit('contentError', {\n                editor,\n                error,\n                disableCollaboration: () => {\n                    if (editor.storage.collaboration) {\n                        editor.storage.collaboration.isDisabled = true;\n                    }\n                },\n            });\n        };\n        const parseOptions = {\n            preserveWhitespace: 'full',\n            ...options.parseOptions,\n        };\n        // If `emitContentError` is enabled, we want to check the content for errors\n        // but ignore them (do not remove the invalid content from the document)\n        if (!options.errorOnInvalidContent && !editor.options.enableContentCheck && editor.options.emitContentError) {\n            try {\n                createNodeFromContent(value, editor.schema, {\n                    parseOptions,\n                    errorOnInvalidContent: true,\n                });\n            }\n            catch (e) {\n                emitContentError(e);\n            }\n        }\n        try {\n            content = createNodeFromContent(value, editor.schema, {\n                parseOptions,\n                errorOnInvalidContent: (_a = options.errorOnInvalidContent) !== null && _a !== void 0 ? _a : editor.options.enableContentCheck,\n            });\n        }\n        catch (e) {\n            emitContentError(e);\n            return false;\n        }\n        let { from, to } = typeof position === 'number' ? { from: position, to: position } : { from: position.from, to: position.to };\n        let isOnlyTextContent = true;\n        let isOnlyBlockContent = true;\n        const nodes = isFragment(content) ? content : [content];\n        nodes.forEach(node => {\n            // check if added node is valid\n            node.check();\n            isOnlyTextContent = isOnlyTextContent ? node.isText && node.marks.length === 0 : false;\n            isOnlyBlockContent = isOnlyBlockContent ? node.isBlock : false;\n        });\n        // check if we can replace the wrapping node by\n        // the newly inserted content\n        // example:\n        // replace an empty paragraph by an inserted image\n        // instead of inserting the image below the paragraph\n        if (from === to && isOnlyBlockContent) {\n            const { parent } = tr.doc.resolve(from);\n            const isEmptyTextBlock = parent.isTextblock && !parent.type.spec.code && !parent.childCount;\n            if (isEmptyTextBlock) {\n                from -= 1;\n                to += 1;\n            }\n        }\n        let newContent;\n        // if there is only plain text we have to use `insertText`\n        // because this will keep the current marks\n        if (isOnlyTextContent) {\n            // if value is string, we can use it directly\n            // otherwise if it is an array, we have to join it\n            if (Array.isArray(value)) {\n                newContent = value.map(v => v.text || '').join('');\n            }\n            else if (value instanceof Fragment) {\n                let text = '';\n                value.forEach(node => {\n                    if (node.text) {\n                        text += node.text;\n                    }\n                });\n                newContent = text;\n            }\n            else if (typeof value === 'object' && !!value && !!value.text) {\n                newContent = value.text;\n            }\n            else {\n                newContent = value;\n            }\n            tr.insertText(newContent, from, to);\n        }\n        else {\n            newContent = content;\n            tr.replaceWith(from, to, newContent);\n        }\n        // set cursor at end of inserted content\n        if (options.updateSelection) {\n            selectionToInsertionEnd(tr, tr.steps.length - 1, -1);\n        }\n        if (options.applyInputRules) {\n            tr.setMeta('applyInputRules', { from, text: newContent });\n        }\n        if (options.applyPasteRules) {\n            tr.setMeta('applyPasteRules', { from, text: newContent });\n        }\n    }\n    return true;\n};\n\nconst joinUp = () => ({ state, dispatch }) => {\n    return joinUp$1(state, dispatch);\n};\nconst joinDown = () => ({ state, dispatch }) => {\n    return joinDown$1(state, dispatch);\n};\nconst joinBackward = () => ({ state, dispatch }) => {\n    return joinBackward$1(state, dispatch);\n};\nconst joinForward = () => ({ state, dispatch }) => {\n    return joinForward$1(state, dispatch);\n};\n\nconst joinItemBackward = () => ({ state, dispatch, tr, }) => {\n    try {\n        const point = joinPoint(state.doc, state.selection.$from.pos, -1);\n        if (point === null || point === undefined) {\n            return false;\n        }\n        tr.join(point, 2);\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n\nconst joinItemForward = () => ({ state, dispatch, tr, }) => {\n    try {\n        const point = joinPoint(state.doc, state.selection.$from.pos, +1);\n        if (point === null || point === undefined) {\n            return false;\n        }\n        tr.join(point, 2);\n        if (dispatch) {\n            dispatch(tr);\n        }\n        return true;\n    }\n    catch {\n        return false;\n    }\n};\n\nconst joinTextblockBackward = () => ({ state, dispatch }) => {\n    return joinTextblockBackward$1(state, dispatch);\n};\n\nconst joinTextblockForward = () => ({ state, dispatch }) => {\n    return joinTextblockForward$1(state, dispatch);\n};\n\nfunction isMacOS() {\n    return typeof navigator !== 'undefined'\n        ? /Mac/.test(navigator.platform)\n        : false;\n}\n\nfunction normalizeKeyName(name) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result === 'Space') {\n        result = ' ';\n    }\n    let alt;\n    let ctrl;\n    let shift;\n    let meta;\n    for (let i = 0; i < parts.length - 1; i += 1) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod)) {\n            meta = true;\n        }\n        else if (/^a(lt)?$/i.test(mod)) {\n            alt = true;\n        }\n        else if (/^(c|ctrl|control)$/i.test(mod)) {\n            ctrl = true;\n        }\n        else if (/^s(hift)?$/i.test(mod)) {\n            shift = true;\n        }\n        else if (/^mod$/i.test(mod)) {\n            if (isiOS() || isMacOS()) {\n                meta = true;\n            }\n            else {\n                ctrl = true;\n            }\n        }\n        else {\n            throw new Error(`Unrecognized modifier name: ${mod}`);\n        }\n    }\n    if (alt) {\n        result = `Alt-${result}`;\n    }\n    if (ctrl) {\n        result = `Ctrl-${result}`;\n    }\n    if (meta) {\n        result = `Meta-${result}`;\n    }\n    if (shift) {\n        result = `Shift-${result}`;\n    }\n    return result;\n}\nconst keyboardShortcut = name => ({ editor, view, tr, dispatch, }) => {\n    const keys = normalizeKeyName(name).split(/-(?!$)/);\n    const key = keys.find(item => !['Alt', 'Ctrl', 'Meta', 'Shift'].includes(item));\n    const event = new KeyboardEvent('keydown', {\n        key: key === 'Space'\n            ? ' '\n            : key,\n        altKey: keys.includes('Alt'),\n        ctrlKey: keys.includes('Ctrl'),\n        metaKey: keys.includes('Meta'),\n        shiftKey: keys.includes('Shift'),\n        bubbles: true,\n        cancelable: true,\n    });\n    const capturedTransaction = editor.captureTransaction(() => {\n        view.someProp('handleKeyDown', f => f(view, event));\n    });\n    capturedTransaction === null || capturedTransaction === void 0 ? void 0 : capturedTransaction.steps.forEach(step => {\n        const newStep = step.map(tr.mapping);\n        if (newStep && dispatch) {\n            tr.maybeStep(newStep);\n        }\n    });\n    return true;\n};\n\nfunction isNodeActive(state, typeOrName, attributes = {}) {\n    const { from, to, empty } = state.selection;\n    const type = typeOrName ? getNodeType(typeOrName, state.schema) : null;\n    const nodeRanges = [];\n    state.doc.nodesBetween(from, to, (node, pos) => {\n        if (node.isText) {\n            return;\n        }\n        const relativeFrom = Math.max(from, pos);\n        const relativeTo = Math.min(to, pos + node.nodeSize);\n        nodeRanges.push({\n            node,\n            from: relativeFrom,\n            to: relativeTo,\n        });\n    });\n    const selectionRange = to - from;\n    const matchedNodeRanges = nodeRanges\n        .filter(nodeRange => {\n        if (!type) {\n            return true;\n        }\n        return type.name === nodeRange.node.type.name;\n    })\n        .filter(nodeRange => objectIncludes(nodeRange.node.attrs, attributes, { strict: false }));\n    if (empty) {\n        return !!matchedNodeRanges.length;\n    }\n    const range = matchedNodeRanges.reduce((sum, nodeRange) => sum + nodeRange.to - nodeRange.from, 0);\n    return range >= selectionRange;\n}\n\nconst lift = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    if (!isActive) {\n        return false;\n    }\n    return lift$1(state, dispatch);\n};\n\nconst liftEmptyBlock = () => ({ state, dispatch }) => {\n    return liftEmptyBlock$1(state, dispatch);\n};\n\nconst liftListItem = typeOrName => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return liftListItem$1(type)(state, dispatch);\n};\n\nconst newlineInCode = () => ({ state, dispatch }) => {\n    return newlineInCode$1(state, dispatch);\n};\n\n/**\n * Get the type of a schema item by its name.\n * @param name The name of the schema item\n * @param schema The Prosemiror schema to search in\n * @returns The type of the schema item (`node` or `mark`), or null if it doesn't exist\n */\nfunction getSchemaTypeNameByName(name, schema) {\n    if (schema.nodes[name]) {\n        return 'node';\n    }\n    if (schema.marks[name]) {\n        return 'mark';\n    }\n    return null;\n}\n\n/**\n * Remove a property or an array of properties from an object\n * @param obj Object\n * @param key Key to remove\n */\nfunction deleteProps(obj, propOrProps) {\n    const props = typeof propOrProps === 'string'\n        ? [propOrProps]\n        : propOrProps;\n    return Object\n        .keys(obj)\n        .reduce((newObj, prop) => {\n        if (!props.includes(prop)) {\n            newObj[prop] = obj[prop];\n        }\n        return newObj;\n    }, {});\n}\n\nconst resetAttributes = (typeOrName, attributes) => ({ tr, state, dispatch }) => {\n    let nodeType = null;\n    let markType = null;\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (!schemaType) {\n        return false;\n    }\n    if (schemaType === 'node') {\n        nodeType = getNodeType(typeOrName, state.schema);\n    }\n    if (schemaType === 'mark') {\n        markType = getMarkType(typeOrName, state.schema);\n    }\n    if (dispatch) {\n        tr.selection.ranges.forEach(range => {\n            state.doc.nodesBetween(range.$from.pos, range.$to.pos, (node, pos) => {\n                if (nodeType && nodeType === node.type) {\n                    tr.setNodeMarkup(pos, undefined, deleteProps(node.attrs, attributes));\n                }\n                if (markType && node.marks.length) {\n                    node.marks.forEach(mark => {\n                        if (markType === mark.type) {\n                            tr.addMark(pos, pos + node.nodeSize, markType.create(deleteProps(mark.attrs, attributes)));\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return true;\n};\n\nconst scrollIntoView = () => ({ tr, dispatch }) => {\n    if (dispatch) {\n        tr.scrollIntoView();\n    }\n    return true;\n};\n\nconst selectAll = () => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const selection = new AllSelection(tr.doc);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst selectNodeBackward = () => ({ state, dispatch }) => {\n    return selectNodeBackward$1(state, dispatch);\n};\n\nconst selectNodeForward = () => ({ state, dispatch }) => {\n    return selectNodeForward$1(state, dispatch);\n};\n\nconst selectParentNode = () => ({ state, dispatch }) => {\n    return selectParentNode$1(state, dispatch);\n};\n\n// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nconst selectTextblockEnd = () => ({ state, dispatch }) => {\n    return selectTextblockEnd$1(state, dispatch);\n};\n\n// @ts-ignore\n// TODO: add types to @types/prosemirror-commands\nconst selectTextblockStart = () => ({ state, dispatch }) => {\n    return selectTextblockStart$1(state, dispatch);\n};\n\n/**\n * Create a new Prosemirror document node from content.\n * @param content The JSON or HTML content to create the document from\n * @param schema The Prosemirror schema to use for the document\n * @param parseOptions Options for the parser\n * @returns The created Prosemirror document node\n */\nfunction createDocument(content, schema, parseOptions = {}, options = {}) {\n    return createNodeFromContent(content, schema, {\n        slice: false,\n        parseOptions,\n        errorOnInvalidContent: options.errorOnInvalidContent,\n    });\n}\n\nconst setContent = (content, emitUpdate = false, parseOptions = {}, options = {}) => ({ editor, tr, dispatch, commands, }) => {\n    var _a, _b;\n    const { doc } = tr;\n    // This is to keep backward compatibility with the previous behavior\n    // TODO remove this in the next major version\n    if (parseOptions.preserveWhitespace !== 'full') {\n        const document = createDocument(content, editor.schema, parseOptions, {\n            errorOnInvalidContent: (_a = options.errorOnInvalidContent) !== null && _a !== void 0 ? _a : editor.options.enableContentCheck,\n        });\n        if (dispatch) {\n            tr.replaceWith(0, doc.content.size, document).setMeta('preventUpdate', !emitUpdate);\n        }\n        return true;\n    }\n    if (dispatch) {\n        tr.setMeta('preventUpdate', !emitUpdate);\n    }\n    return commands.insertContentAt({ from: 0, to: doc.content.size }, content, {\n        parseOptions,\n        errorOnInvalidContent: (_b = options.errorOnInvalidContent) !== null && _b !== void 0 ? _b : editor.options.enableContentCheck,\n    });\n};\n\nfunction getMarkAttributes(state, typeOrName) {\n    const type = getMarkType(typeOrName, state.schema);\n    const { from, to, empty } = state.selection;\n    const marks = [];\n    if (empty) {\n        if (state.storedMarks) {\n            marks.push(...state.storedMarks);\n        }\n        marks.push(...state.selection.$head.marks());\n    }\n    else {\n        state.doc.nodesBetween(from, to, node => {\n            marks.push(...node.marks);\n        });\n    }\n    const mark = marks.find(markItem => markItem.type.name === type.name);\n    if (!mark) {\n        return {};\n    }\n    return { ...mark.attrs };\n}\n\n/**\n * Returns a new `Transform` based on all steps of the passed transactions.\n * @param oldDoc The Prosemirror node to start from\n * @param transactions The transactions to combine\n * @returns A new `Transform` with all steps of the passed transactions\n */\nfunction combineTransactionSteps(oldDoc, transactions) {\n    const transform = new Transform(oldDoc);\n    transactions.forEach(transaction => {\n        transaction.steps.forEach(step => {\n            transform.step(step);\n        });\n    });\n    return transform;\n}\n\n/**\n * Gets the default block type at a given match\n * @param match The content match to get the default block type from\n * @returns The default block type or null\n */\nfunction defaultBlockAt(match) {\n    for (let i = 0; i < match.edgeCount; i += 1) {\n        const { type } = match.edge(i);\n        if (type.isTextblock && !type.hasRequiredAttrs()) {\n            return type;\n        }\n    }\n    return null;\n}\n\n/**\n * Find children inside a Prosemirror node that match a predicate.\n * @param node The Prosemirror node to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nfunction findChildren(node, predicate) {\n    const nodesWithPos = [];\n    node.descendants((child, pos) => {\n        if (predicate(child)) {\n            nodesWithPos.push({\n                node: child,\n                pos,\n            });\n        }\n    });\n    return nodesWithPos;\n}\n\n/**\n * Same as `findChildren` but searches only within a `range`.\n * @param node The Prosemirror node to search in\n * @param range The range to search in\n * @param predicate The predicate to match\n * @returns An array of nodes with their positions\n */\nfunction findChildrenInRange(node, range, predicate) {\n    const nodesWithPos = [];\n    // if (range.from === range.to) {\n    //   const nodeAt = node.nodeAt(range.from)\n    //   if (nodeAt) {\n    //     nodesWithPos.push({\n    //       node: nodeAt,\n    //       pos: range.from,\n    //     })\n    //   }\n    // }\n    node.nodesBetween(range.from, range.to, (child, pos) => {\n        if (predicate(child)) {\n            nodesWithPos.push({\n                node: child,\n                pos,\n            });\n        }\n    });\n    return nodesWithPos;\n}\n\n/**\n * Finds the closest parent node to a resolved position that matches a predicate.\n * @param $pos The resolved position to search from\n * @param predicate The predicate to match\n * @returns The closest parent node to the resolved position that matches the predicate\n * @example ```js\n * findParentNodeClosestToPos($from, node => node.type.name === 'paragraph')\n * ```\n */\nfunction findParentNodeClosestToPos($pos, predicate) {\n    for (let i = $pos.depth; i > 0; i -= 1) {\n        const node = $pos.node(i);\n        if (predicate(node)) {\n            return {\n                pos: i > 0 ? $pos.before(i) : 0,\n                start: $pos.start(i),\n                depth: i,\n                node,\n            };\n        }\n    }\n}\n\n/**\n * Finds the closest parent node to the current selection that matches a predicate.\n * @param predicate The predicate to match\n * @returns A command that finds the closest parent node to the current selection that matches the predicate\n * @example ```js\n * findParentNode(node => node.type.name === 'paragraph')\n * ```\n */\nfunction findParentNode(predicate) {\n    return (selection) => findParentNodeClosestToPos(selection.$from, predicate);\n}\n\nfunction getSchema(extensions, editor) {\n    const resolvedExtensions = ExtensionManager.resolve(extensions);\n    return getSchemaByResolvedExtensions(resolvedExtensions, editor);\n}\n\n/**\n * Generate HTML from a JSONContent\n * @param doc The JSONContent to generate HTML from\n * @param extensions The extensions to use for the schema\n * @returns The generated HTML\n */\nfunction generateHTML(doc, extensions) {\n    const schema = getSchema(extensions);\n    const contentNode = Node$1.fromJSON(schema, doc);\n    return getHTMLFromFragment(contentNode.content, schema);\n}\n\n/**\n * Generate JSONContent from HTML\n * @param html The HTML to generate JSONContent from\n * @param extensions The extensions to use for the schema\n * @returns The generated JSONContent\n */\nfunction generateJSON(html, extensions) {\n    const schema = getSchema(extensions);\n    const dom = elementFromString(html);\n    return DOMParser.fromSchema(schema).parse(dom).toJSON();\n}\n\n/**\n * Gets the text of a Prosemirror node\n * @param node The Prosemirror node\n * @param options Options for the text serializer & block separator\n * @returns The text of the node\n * @example ```js\n * const text = getText(node, { blockSeparator: '\\n' })\n * ```\n */\nfunction getText(node, options) {\n    const range = {\n        from: 0,\n        to: node.content.size,\n    };\n    return getTextBetween(node, range, options);\n}\n\n/**\n * Generate raw text from a JSONContent\n * @param doc The JSONContent to generate text from\n * @param extensions The extensions to use for the schema\n * @param options Options for the text generation f.e. blockSeparator or textSerializers\n * @returns The generated text\n */\nfunction generateText(doc, extensions, options) {\n    const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n    const schema = getSchema(extensions);\n    const contentNode = Node$1.fromJSON(schema, doc);\n    return getText(contentNode, {\n        blockSeparator,\n        textSerializers: {\n            ...getTextSerializersFromSchema(schema),\n            ...textSerializers,\n        },\n    });\n}\n\nfunction getNodeAttributes(state, typeOrName) {\n    const type = getNodeType(typeOrName, state.schema);\n    const { from, to } = state.selection;\n    const nodes = [];\n    state.doc.nodesBetween(from, to, node => {\n        nodes.push(node);\n    });\n    const node = nodes.reverse().find(nodeItem => nodeItem.type.name === type.name);\n    if (!node) {\n        return {};\n    }\n    return { ...node.attrs };\n}\n\n/**\n * Get node or mark attributes by type or name on the current editor state\n * @param state The current editor state\n * @param typeOrName The node or mark type or name\n * @returns The attributes of the node or mark or an empty object\n */\nfunction getAttributes(state, typeOrName) {\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (schemaType === 'node') {\n        return getNodeAttributes(state, typeOrName);\n    }\n    if (schemaType === 'mark') {\n        return getMarkAttributes(state, typeOrName);\n    }\n    return {};\n}\n\n/**\n * Removes duplicated values within an array.\n * Supports numbers, strings and objects.\n */\nfunction removeDuplicates(array, by = JSON.stringify) {\n    const seen = {};\n    return array.filter(item => {\n        const key = by(item);\n        return Object.prototype.hasOwnProperty.call(seen, key)\n            ? false\n            : (seen[key] = true);\n    });\n}\n\n/**\n * Removes duplicated ranges and ranges that are\n * fully captured by other ranges.\n */\nfunction simplifyChangedRanges(changes) {\n    const uniqueChanges = removeDuplicates(changes);\n    return uniqueChanges.length === 1\n        ? uniqueChanges\n        : uniqueChanges.filter((change, index) => {\n            const rest = uniqueChanges.filter((_, i) => i !== index);\n            return !rest.some(otherChange => {\n                return change.oldRange.from >= otherChange.oldRange.from\n                    && change.oldRange.to <= otherChange.oldRange.to\n                    && change.newRange.from >= otherChange.newRange.from\n                    && change.newRange.to <= otherChange.newRange.to;\n            });\n        });\n}\n/**\n * Returns a list of changed ranges\n * based on the first and last state of all steps.\n */\nfunction getChangedRanges(transform) {\n    const { mapping, steps } = transform;\n    const changes = [];\n    mapping.maps.forEach((stepMap, index) => {\n        const ranges = [];\n        // This accounts for step changes where no range was actually altered\n        // e.g. when setting a mark, node attribute, etc.\n        // @ts-ignore\n        if (!stepMap.ranges.length) {\n            const { from, to } = steps[index];\n            if (from === undefined || to === undefined) {\n                return;\n            }\n            ranges.push({ from, to });\n        }\n        else {\n            stepMap.forEach((from, to) => {\n                ranges.push({ from, to });\n            });\n        }\n        ranges.forEach(({ from, to }) => {\n            const newStart = mapping.slice(index).map(from, -1);\n            const newEnd = mapping.slice(index).map(to);\n            const oldStart = mapping.invert().map(newStart, -1);\n            const oldEnd = mapping.invert().map(newEnd);\n            changes.push({\n                oldRange: {\n                    from: oldStart,\n                    to: oldEnd,\n                },\n                newRange: {\n                    from: newStart,\n                    to: newEnd,\n                },\n            });\n        });\n    });\n    return simplifyChangedRanges(changes);\n}\n\nfunction getDebugJSON(node, startOffset = 0) {\n    const isTopNode = node.type === node.type.schema.topNodeType;\n    const increment = isTopNode ? 0 : 1;\n    const from = startOffset;\n    const to = from + node.nodeSize;\n    const marks = node.marks.map(mark => {\n        const output = {\n            type: mark.type.name,\n        };\n        if (Object.keys(mark.attrs).length) {\n            output.attrs = { ...mark.attrs };\n        }\n        return output;\n    });\n    const attrs = { ...node.attrs };\n    const output = {\n        type: node.type.name,\n        from,\n        to,\n    };\n    if (Object.keys(attrs).length) {\n        output.attrs = attrs;\n    }\n    if (marks.length) {\n        output.marks = marks;\n    }\n    if (node.content.childCount) {\n        output.content = [];\n        node.forEach((child, offset) => {\n            var _a;\n            (_a = output.content) === null || _a === void 0 ? void 0 : _a.push(getDebugJSON(child, startOffset + offset + increment));\n        });\n    }\n    if (node.text) {\n        output.text = node.text;\n    }\n    return output;\n}\n\nfunction getMarksBetween(from, to, doc) {\n    const marks = [];\n    // get all inclusive marks on empty selection\n    if (from === to) {\n        doc\n            .resolve(from)\n            .marks()\n            .forEach(mark => {\n            const $pos = doc.resolve(from);\n            const range = getMarkRange($pos, mark.type);\n            if (!range) {\n                return;\n            }\n            marks.push({\n                mark,\n                ...range,\n            });\n        });\n    }\n    else {\n        doc.nodesBetween(from, to, (node, pos) => {\n            if (!node || (node === null || node === void 0 ? void 0 : node.nodeSize) === undefined) {\n                return;\n            }\n            marks.push(...node.marks.map(mark => ({\n                from: pos,\n                to: pos + node.nodeSize,\n                mark,\n            })));\n        });\n    }\n    return marks;\n}\n\n/**\n * Finds the first node of a given type or name in the current selection.\n * @param state The editor state.\n * @param typeOrName The node type or name.\n * @param pos The position to start searching from.\n * @param maxDepth The maximum depth to search.\n * @returns The node and the depth as an array.\n */\nconst getNodeAtPosition = (state, typeOrName, pos, maxDepth = 20) => {\n    const $pos = state.doc.resolve(pos);\n    let currentDepth = maxDepth;\n    let node = null;\n    while (currentDepth > 0 && node === null) {\n        const currentNode = $pos.node(currentDepth);\n        if ((currentNode === null || currentNode === void 0 ? void 0 : currentNode.type.name) === typeOrName) {\n            node = currentNode;\n        }\n        else {\n            currentDepth -= 1;\n        }\n    }\n    return [node, currentDepth];\n};\n\n/**\n * Return attributes of an extension that should be splitted by keepOnSplit flag\n * @param extensionAttributes Array of extension attributes\n * @param typeName The type of the extension\n * @param attributes The attributes of the extension\n * @returns The splitted attributes\n */\nfunction getSplittedAttributes(extensionAttributes, typeName, attributes) {\n    return Object.fromEntries(Object\n        .entries(attributes)\n        .filter(([name]) => {\n        const extensionAttribute = extensionAttributes.find(item => {\n            return item.type === typeName && item.name === name;\n        });\n        if (!extensionAttribute) {\n            return false;\n        }\n        return extensionAttribute.attribute.keepOnSplit;\n    }));\n}\n\nfunction isMarkActive(state, typeOrName, attributes = {}) {\n    const { empty, ranges } = state.selection;\n    const type = typeOrName ? getMarkType(typeOrName, state.schema) : null;\n    if (empty) {\n        return !!(state.storedMarks || state.selection.$from.marks())\n            .filter(mark => {\n            if (!type) {\n                return true;\n            }\n            return type.name === mark.type.name;\n        })\n            .find(mark => objectIncludes(mark.attrs, attributes, { strict: false }));\n    }\n    let selectionRange = 0;\n    const markRanges = [];\n    ranges.forEach(({ $from, $to }) => {\n        const from = $from.pos;\n        const to = $to.pos;\n        state.doc.nodesBetween(from, to, (node, pos) => {\n            if (!node.isText && !node.marks.length) {\n                return;\n            }\n            const relativeFrom = Math.max(from, pos);\n            const relativeTo = Math.min(to, pos + node.nodeSize);\n            const range = relativeTo - relativeFrom;\n            selectionRange += range;\n            markRanges.push(...node.marks.map(mark => ({\n                mark,\n                from: relativeFrom,\n                to: relativeTo,\n            })));\n        });\n    });\n    if (selectionRange === 0) {\n        return false;\n    }\n    // calculate range of matched mark\n    const matchedRange = markRanges\n        .filter(markRange => {\n        if (!type) {\n            return true;\n        }\n        return type.name === markRange.mark.type.name;\n    })\n        .filter(markRange => objectIncludes(markRange.mark.attrs, attributes, { strict: false }))\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\n    // calculate range of marks that excludes the searched mark\n    // for example `code` doesn’t allow any other marks\n    const excludedRange = markRanges\n        .filter(markRange => {\n        if (!type) {\n            return true;\n        }\n        return markRange.mark.type !== type && markRange.mark.type.excludes(type);\n    })\n        .reduce((sum, markRange) => sum + markRange.to - markRange.from, 0);\n    // we only include the result of `excludedRange`\n    // if there is a match at all\n    const range = matchedRange > 0 ? matchedRange + excludedRange : matchedRange;\n    return range >= selectionRange;\n}\n\nfunction isActive(state, name, attributes = {}) {\n    if (!name) {\n        return isNodeActive(state, null, attributes) || isMarkActive(state, null, attributes);\n    }\n    const schemaType = getSchemaTypeNameByName(name, state.schema);\n    if (schemaType === 'node') {\n        return isNodeActive(state, name, attributes);\n    }\n    if (schemaType === 'mark') {\n        return isMarkActive(state, name, attributes);\n    }\n    return false;\n}\n\nconst isAtEndOfNode = (state, nodeType) => {\n    const { $from, $to, $anchor } = state.selection;\n    if (nodeType) {\n        const parentNode = findParentNode(node => node.type.name === nodeType)(state.selection);\n        if (!parentNode) {\n            return false;\n        }\n        const $parentPos = state.doc.resolve(parentNode.pos + 1);\n        if ($anchor.pos + 1 === $parentPos.end()) {\n            return true;\n        }\n        return false;\n    }\n    if ($to.parentOffset < $to.parent.nodeSize - 2 || $from.pos !== $to.pos) {\n        return false;\n    }\n    return true;\n};\n\nconst isAtStartOfNode = (state) => {\n    const { $from, $to } = state.selection;\n    if ($from.parentOffset > 0 || $from.pos !== $to.pos) {\n        return false;\n    }\n    return true;\n};\n\nfunction isList(name, extensions) {\n    const { nodeExtensions } = splitExtensions(extensions);\n    const extension = nodeExtensions.find(item => item.name === name);\n    if (!extension) {\n        return false;\n    }\n    const context = {\n        name: extension.name,\n        options: extension.options,\n        storage: extension.storage,\n    };\n    const group = callOrReturn(getExtensionField(extension, 'group', context));\n    if (typeof group !== 'string') {\n        return false;\n    }\n    return group.split(' ').includes('list');\n}\n\n/**\n * Returns true if the given prosemirror node is empty.\n */\nfunction isNodeEmpty(node, { checkChildren = true, ignoreWhitespace = false, } = {}) {\n    var _a;\n    if (ignoreWhitespace) {\n        if (node.type.name === 'hardBreak') {\n            // Hard breaks are considered empty\n            return true;\n        }\n        if (node.isText) {\n            return /^\\s*$/m.test((_a = node.text) !== null && _a !== void 0 ? _a : '');\n        }\n    }\n    if (node.isText) {\n        return !node.text;\n    }\n    if (node.isAtom || node.isLeaf) {\n        return false;\n    }\n    if (node.content.childCount === 0) {\n        return true;\n    }\n    if (checkChildren) {\n        let isContentEmpty = true;\n        node.content.forEach(childNode => {\n            if (isContentEmpty === false) {\n                // Exit early for perf\n                return;\n            }\n            if (!isNodeEmpty(childNode, { ignoreWhitespace, checkChildren })) {\n                isContentEmpty = false;\n            }\n        });\n        return isContentEmpty;\n    }\n    return false;\n}\n\nfunction isNodeSelection(value) {\n    return value instanceof NodeSelection;\n}\n\nfunction posToDOMRect(view, from, to) {\n    const minPos = 0;\n    const maxPos = view.state.doc.content.size;\n    const resolvedFrom = minMax(from, minPos, maxPos);\n    const resolvedEnd = minMax(to, minPos, maxPos);\n    const start = view.coordsAtPos(resolvedFrom);\n    const end = view.coordsAtPos(resolvedEnd, -1);\n    const top = Math.min(start.top, end.top);\n    const bottom = Math.max(start.bottom, end.bottom);\n    const left = Math.min(start.left, end.left);\n    const right = Math.max(start.right, end.right);\n    const width = right - left;\n    const height = bottom - top;\n    const x = left;\n    const y = top;\n    const data = {\n        top,\n        bottom,\n        left,\n        right,\n        width,\n        height,\n        x,\n        y,\n    };\n    return {\n        ...data,\n        toJSON: () => data,\n    };\n}\n\n/**\n * The actual implementation of the rewriteUnknownContent function\n */\nfunction rewriteUnknownContentInner({ json, validMarks, validNodes, options, rewrittenContent = [], }) {\n    if (json.marks && Array.isArray(json.marks)) {\n        json.marks = json.marks.filter(mark => {\n            const name = typeof mark === 'string' ? mark : mark.type;\n            if (validMarks.has(name)) {\n                return true;\n            }\n            rewrittenContent.push({\n                original: JSON.parse(JSON.stringify(mark)),\n                unsupported: name,\n            });\n            // Just ignore any unknown marks\n            return false;\n        });\n    }\n    if (json.content && Array.isArray(json.content)) {\n        json.content = json.content\n            .map(value => rewriteUnknownContentInner({\n            json: value,\n            validMarks,\n            validNodes,\n            options,\n            rewrittenContent,\n        }).json)\n            .filter(a => a !== null && a !== undefined);\n    }\n    if (json.type && !validNodes.has(json.type)) {\n        rewrittenContent.push({\n            original: JSON.parse(JSON.stringify(json)),\n            unsupported: json.type,\n        });\n        if (json.content && Array.isArray(json.content) && ((options === null || options === void 0 ? void 0 : options.fallbackToParagraph) !== false)) {\n            // Just treat it like a paragraph and hope for the best\n            json.type = 'paragraph';\n            return {\n                json,\n                rewrittenContent,\n            };\n        }\n        // or just omit it entirely\n        return {\n            json: null,\n            rewrittenContent,\n        };\n    }\n    return { json, rewrittenContent };\n}\n/**\n * Rewrite unknown nodes and marks within JSON content\n * Allowing for user within the editor\n */\nfunction rewriteUnknownContent(\n/**\n * The JSON content to clean of unknown nodes and marks\n */\njson, \n/**\n * The schema to use for validation\n */\nschema, \n/**\n * Options for the cleaning process\n */\noptions) {\n    return rewriteUnknownContentInner({\n        json,\n        validNodes: new Set(Object.keys(schema.nodes)),\n        validMarks: new Set(Object.keys(schema.marks)),\n        options,\n    });\n}\n\nfunction canSetMark(state, tr, newMarkType) {\n    var _a;\n    const { selection } = tr;\n    let cursor = null;\n    if (isTextSelection(selection)) {\n        cursor = selection.$cursor;\n    }\n    if (cursor) {\n        const currentMarks = (_a = state.storedMarks) !== null && _a !== void 0 ? _a : cursor.marks();\n        // There can be no current marks that exclude the new mark\n        return (!!newMarkType.isInSet(currentMarks)\n            || !currentMarks.some(mark => mark.type.excludes(newMarkType)));\n    }\n    const { ranges } = selection;\n    return ranges.some(({ $from, $to }) => {\n        let someNodeSupportsMark = $from.depth === 0\n            ? state.doc.inlineContent && state.doc.type.allowsMarkType(newMarkType)\n            : false;\n        state.doc.nodesBetween($from.pos, $to.pos, (node, _pos, parent) => {\n            // If we already found a mark that we can enable, return false to bypass the remaining search\n            if (someNodeSupportsMark) {\n                return false;\n            }\n            if (node.isInline) {\n                const parentAllowsMarkType = !parent || parent.type.allowsMarkType(newMarkType);\n                const currentMarksAllowMarkType = !!newMarkType.isInSet(node.marks)\n                    || !node.marks.some(otherMark => otherMark.type.excludes(newMarkType));\n                someNodeSupportsMark = parentAllowsMarkType && currentMarksAllowMarkType;\n            }\n            return !someNodeSupportsMark;\n        });\n        return someNodeSupportsMark;\n    });\n}\nconst setMark = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    const { selection } = tr;\n    const { empty, ranges } = selection;\n    const type = getMarkType(typeOrName, state.schema);\n    if (dispatch) {\n        if (empty) {\n            const oldAttributes = getMarkAttributes(state, type);\n            tr.addStoredMark(type.create({\n                ...oldAttributes,\n                ...attributes,\n            }));\n        }\n        else {\n            ranges.forEach(range => {\n                const from = range.$from.pos;\n                const to = range.$to.pos;\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    const trimmedFrom = Math.max(pos, from);\n                    const trimmedTo = Math.min(pos + node.nodeSize, to);\n                    const someHasMark = node.marks.find(mark => mark.type === type);\n                    // if there is already a mark of this type\n                    // we know that we have to merge its attributes\n                    // otherwise we add a fresh new mark\n                    if (someHasMark) {\n                        node.marks.forEach(mark => {\n                            if (type === mark.type) {\n                                tr.addMark(trimmedFrom, trimmedTo, type.create({\n                                    ...mark.attrs,\n                                    ...attributes,\n                                }));\n                            }\n                        });\n                    }\n                    else {\n                        tr.addMark(trimmedFrom, trimmedTo, type.create(attributes));\n                    }\n                });\n            });\n        }\n    }\n    return canSetMark(state, tr, type);\n};\n\nconst setMeta = (key, value) => ({ tr }) => {\n    tr.setMeta(key, value);\n    return true;\n};\n\nconst setNode = (typeOrName, attributes = {}) => ({ state, dispatch, chain }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    let attributesToCopy;\n    if (state.selection.$anchor.sameParent(state.selection.$head)) {\n        // only copy attributes if the selection is pointing to a node of the same type\n        attributesToCopy = state.selection.$anchor.parent.attrs;\n    }\n    // TODO: use a fallback like insertContent?\n    if (!type.isTextblock) {\n        console.warn('[tiptap warn]: Currently \"setNode()\" only supports text block nodes.');\n        return false;\n    }\n    return (chain()\n        // try to convert node to default node if needed\n        .command(({ commands }) => {\n        const canSetBlock = setBlockType(type, { ...attributesToCopy, ...attributes })(state);\n        if (canSetBlock) {\n            return true;\n        }\n        return commands.clearNodes();\n    })\n        .command(({ state: updatedState }) => {\n        return setBlockType(type, { ...attributesToCopy, ...attributes })(updatedState, dispatch);\n    })\n        .run());\n};\n\nconst setNodeSelection = position => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const { doc } = tr;\n        const from = minMax(position, 0, doc.content.size);\n        const selection = NodeSelection.create(doc, from);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst setTextSelection = position => ({ tr, dispatch }) => {\n    if (dispatch) {\n        const { doc } = tr;\n        const { from, to } = typeof position === 'number' ? { from: position, to: position } : position;\n        const minPos = TextSelection.atStart(doc).from;\n        const maxPos = TextSelection.atEnd(doc).to;\n        const resolvedFrom = minMax(from, minPos, maxPos);\n        const resolvedEnd = minMax(to, minPos, maxPos);\n        const selection = TextSelection.create(doc, resolvedFrom, resolvedEnd);\n        tr.setSelection(selection);\n    }\n    return true;\n};\n\nconst sinkListItem = typeOrName => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return sinkListItem$1(type)(state, dispatch);\n};\n\nfunction ensureMarks(state, splittableMarks) {\n    const marks = state.storedMarks || (state.selection.$to.parentOffset && state.selection.$from.marks());\n    if (marks) {\n        const filteredMarks = marks.filter(mark => splittableMarks === null || splittableMarks === void 0 ? void 0 : splittableMarks.includes(mark.type.name));\n        state.tr.ensureMarks(filteredMarks);\n    }\n}\nconst splitBlock = ({ keepMarks = true } = {}) => ({ tr, state, dispatch, editor, }) => {\n    const { selection, doc } = tr;\n    const { $from, $to } = selection;\n    const extensionAttributes = editor.extensionManager.attributes;\n    const newAttributes = getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs);\n    if (selection instanceof NodeSelection && selection.node.isBlock) {\n        if (!$from.parentOffset || !canSplit(doc, $from.pos)) {\n            return false;\n        }\n        if (dispatch) {\n            if (keepMarks) {\n                ensureMarks(state, editor.extensionManager.splittableMarks);\n            }\n            tr.split($from.pos).scrollIntoView();\n        }\n        return true;\n    }\n    if (!$from.parent.isBlock) {\n        return false;\n    }\n    const atEnd = $to.parentOffset === $to.parent.content.size;\n    const deflt = $from.depth === 0\n        ? undefined\n        : defaultBlockAt($from.node(-1).contentMatchAt($from.indexAfter(-1)));\n    let types = atEnd && deflt\n        ? [\n            {\n                type: deflt,\n                attrs: newAttributes,\n            },\n        ]\n        : undefined;\n    let can = canSplit(tr.doc, tr.mapping.map($from.pos), 1, types);\n    if (!types\n        && !can\n        && canSplit(tr.doc, tr.mapping.map($from.pos), 1, deflt ? [{ type: deflt }] : undefined)) {\n        can = true;\n        types = deflt\n            ? [\n                {\n                    type: deflt,\n                    attrs: newAttributes,\n                },\n            ]\n            : undefined;\n    }\n    if (dispatch) {\n        if (can) {\n            if (selection instanceof TextSelection) {\n                tr.deleteSelection();\n            }\n            tr.split(tr.mapping.map($from.pos), 1, types);\n            if (deflt && !atEnd && !$from.parentOffset && $from.parent.type !== deflt) {\n                const first = tr.mapping.map($from.before());\n                const $first = tr.doc.resolve(first);\n                if ($from.node(-1).canReplaceWith($first.index(), $first.index() + 1, deflt)) {\n                    tr.setNodeMarkup(tr.mapping.map($from.before()), deflt);\n                }\n            }\n        }\n        if (keepMarks) {\n            ensureMarks(state, editor.extensionManager.splittableMarks);\n        }\n        tr.scrollIntoView();\n    }\n    return can;\n};\n\nconst splitListItem = (typeOrName, overrideAttrs = {}) => ({ tr, state, dispatch, editor, }) => {\n    var _a;\n    const type = getNodeType(typeOrName, state.schema);\n    const { $from, $to } = state.selection;\n    // @ts-ignore\n    // eslint-disable-next-line\n    const node = state.selection.node;\n    if ((node && node.isBlock) || $from.depth < 2 || !$from.sameParent($to)) {\n        return false;\n    }\n    const grandParent = $from.node(-1);\n    if (grandParent.type !== type) {\n        return false;\n    }\n    const extensionAttributes = editor.extensionManager.attributes;\n    if ($from.parent.content.size === 0 && $from.node(-1).childCount === $from.indexAfter(-1)) {\n        // In an empty block. If this is a nested list, the wrapping\n        // list item should be split. Otherwise, bail out and let next\n        // command handle lifting.\n        if ($from.depth === 2\n            || $from.node(-3).type !== type\n            || $from.index(-2) !== $from.node(-2).childCount - 1) {\n            return false;\n        }\n        if (dispatch) {\n            let wrap = Fragment.empty;\n            // eslint-disable-next-line\n            const depthBefore = $from.index(-1) ? 1 : $from.index(-2) ? 2 : 3;\n            // Build a fragment containing empty versions of the structure\n            // from the outer list item to the parent node of the cursor\n            for (let d = $from.depth - depthBefore; d >= $from.depth - 3; d -= 1) {\n                wrap = Fragment.from($from.node(d).copy(wrap));\n            }\n            // eslint-disable-next-line\n            const depthAfter = $from.indexAfter(-1) < $from.node(-2).childCount ? 1 : $from.indexAfter(-2) < $from.node(-3).childCount ? 2 : 3;\n            // Add a second list item with an empty default start node\n            const newNextTypeAttributes = {\n                ...getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs),\n                ...overrideAttrs,\n            };\n            const nextType = ((_a = type.contentMatch.defaultType) === null || _a === void 0 ? void 0 : _a.createAndFill(newNextTypeAttributes)) || undefined;\n            wrap = wrap.append(Fragment.from(type.createAndFill(null, nextType) || undefined));\n            const start = $from.before($from.depth - (depthBefore - 1));\n            tr.replace(start, $from.after(-depthAfter), new Slice(wrap, 4 - depthBefore, 0));\n            let sel = -1;\n            tr.doc.nodesBetween(start, tr.doc.content.size, (n, pos) => {\n                if (sel > -1) {\n                    return false;\n                }\n                if (n.isTextblock && n.content.size === 0) {\n                    sel = pos + 1;\n                }\n            });\n            if (sel > -1) {\n                tr.setSelection(TextSelection.near(tr.doc.resolve(sel)));\n            }\n            tr.scrollIntoView();\n        }\n        return true;\n    }\n    const nextType = $to.pos === $from.end() ? grandParent.contentMatchAt(0).defaultType : null;\n    const newTypeAttributes = {\n        ...getSplittedAttributes(extensionAttributes, grandParent.type.name, grandParent.attrs),\n        ...overrideAttrs,\n    };\n    const newNextTypeAttributes = {\n        ...getSplittedAttributes(extensionAttributes, $from.node().type.name, $from.node().attrs),\n        ...overrideAttrs,\n    };\n    tr.delete($from.pos, $to.pos);\n    const types = nextType\n        ? [\n            { type, attrs: newTypeAttributes },\n            { type: nextType, attrs: newNextTypeAttributes },\n        ]\n        : [{ type, attrs: newTypeAttributes }];\n    if (!canSplit(tr.doc, $from.pos, 2)) {\n        return false;\n    }\n    if (dispatch) {\n        const { selection, storedMarks } = state;\n        const { splittableMarks } = editor.extensionManager;\n        const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n        tr.split($from.pos, 2, types).scrollIntoView();\n        if (!marks || !dispatch) {\n            return true;\n        }\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n        tr.ensureMarks(filteredMarks);\n    }\n    return true;\n};\n\nconst joinListBackwards = (tr, listType) => {\n    const list = findParentNode(node => node.type === listType)(tr.selection);\n    if (!list) {\n        return true;\n    }\n    const before = tr.doc.resolve(Math.max(0, list.pos - 1)).before(list.depth);\n    if (before === undefined) {\n        return true;\n    }\n    const nodeBefore = tr.doc.nodeAt(before);\n    const canJoinBackwards = list.node.type === (nodeBefore === null || nodeBefore === void 0 ? void 0 : nodeBefore.type) && canJoin(tr.doc, list.pos);\n    if (!canJoinBackwards) {\n        return true;\n    }\n    tr.join(list.pos);\n    return true;\n};\nconst joinListForwards = (tr, listType) => {\n    const list = findParentNode(node => node.type === listType)(tr.selection);\n    if (!list) {\n        return true;\n    }\n    const after = tr.doc.resolve(list.start).after(list.depth);\n    if (after === undefined) {\n        return true;\n    }\n    const nodeAfter = tr.doc.nodeAt(after);\n    const canJoinForwards = list.node.type === (nodeAfter === null || nodeAfter === void 0 ? void 0 : nodeAfter.type) && canJoin(tr.doc, after);\n    if (!canJoinForwards) {\n        return true;\n    }\n    tr.join(after);\n    return true;\n};\nconst toggleList = (listTypeOrName, itemTypeOrName, keepMarks, attributes = {}) => ({ editor, tr, state, dispatch, chain, commands, can, }) => {\n    const { extensions, splittableMarks } = editor.extensionManager;\n    const listType = getNodeType(listTypeOrName, state.schema);\n    const itemType = getNodeType(itemTypeOrName, state.schema);\n    const { selection, storedMarks } = state;\n    const { $from, $to } = selection;\n    const range = $from.blockRange($to);\n    const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n    if (!range) {\n        return false;\n    }\n    const parentList = findParentNode(node => isList(node.type.name, extensions))(selection);\n    if (range.depth >= 1 && parentList && range.depth - parentList.depth <= 1) {\n        // remove list\n        if (parentList.node.type === listType) {\n            return commands.liftListItem(itemType);\n        }\n        // change list type\n        if (isList(parentList.node.type.name, extensions)\n            && listType.validContent(parentList.node.content)\n            && dispatch) {\n            return chain()\n                .command(() => {\n                tr.setNodeMarkup(parentList.pos, listType);\n                return true;\n            })\n                .command(() => joinListBackwards(tr, listType))\n                .command(() => joinListForwards(tr, listType))\n                .run();\n        }\n    }\n    if (!keepMarks || !marks || !dispatch) {\n        return chain()\n            // try to convert node to default node if needed\n            .command(() => {\n            const canWrapInList = can().wrapInList(listType, attributes);\n            if (canWrapInList) {\n                return true;\n            }\n            return commands.clearNodes();\n        })\n            .wrapInList(listType, attributes)\n            .command(() => joinListBackwards(tr, listType))\n            .command(() => joinListForwards(tr, listType))\n            .run();\n    }\n    return (chain()\n        // try to convert node to default node if needed\n        .command(() => {\n        const canWrapInList = can().wrapInList(listType, attributes);\n        const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n        tr.ensureMarks(filteredMarks);\n        if (canWrapInList) {\n            return true;\n        }\n        return commands.clearNodes();\n    })\n        .wrapInList(listType, attributes)\n        .command(() => joinListBackwards(tr, listType))\n        .command(() => joinListForwards(tr, listType))\n        .run());\n};\n\nconst toggleMark = (typeOrName, attributes = {}, options = {}) => ({ state, commands }) => {\n    const { extendEmptyMarkRange = false } = options;\n    const type = getMarkType(typeOrName, state.schema);\n    const isActive = isMarkActive(state, type, attributes);\n    if (isActive) {\n        return commands.unsetMark(type, { extendEmptyMarkRange });\n    }\n    return commands.setMark(type, attributes);\n};\n\nconst toggleNode = (typeOrName, toggleTypeOrName, attributes = {}) => ({ state, commands }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const toggleType = getNodeType(toggleTypeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    let attributesToCopy;\n    if (state.selection.$anchor.sameParent(state.selection.$head)) {\n        // only copy attributes if the selection is pointing to a node of the same type\n        attributesToCopy = state.selection.$anchor.parent.attrs;\n    }\n    if (isActive) {\n        return commands.setNode(toggleType, attributesToCopy);\n    }\n    // If the node is not active, we want to set the new node type with the given attributes\n    // Copying over the attributes from the current node if the selection is pointing to a node of the same type\n    return commands.setNode(type, { ...attributesToCopy, ...attributes });\n};\n\nconst toggleWrap = (typeOrName, attributes = {}) => ({ state, commands }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    const isActive = isNodeActive(state, type, attributes);\n    if (isActive) {\n        return commands.lift(type);\n    }\n    return commands.wrapIn(type, attributes);\n};\n\nconst undoInputRule = () => ({ state, dispatch }) => {\n    const plugins = state.plugins;\n    for (let i = 0; i < plugins.length; i += 1) {\n        const plugin = plugins[i];\n        let undoable;\n        // @ts-ignore\n        // eslint-disable-next-line\n        if (plugin.spec.isInputRules && (undoable = plugin.getState(state))) {\n            if (dispatch) {\n                const tr = state.tr;\n                const toUndo = undoable.transform;\n                for (let j = toUndo.steps.length - 1; j >= 0; j -= 1) {\n                    tr.step(toUndo.steps[j].invert(toUndo.docs[j]));\n                }\n                if (undoable.text) {\n                    const marks = tr.doc.resolve(undoable.from).marks();\n                    tr.replaceWith(undoable.from, undoable.to, state.schema.text(undoable.text, marks));\n                }\n                else {\n                    tr.delete(undoable.from, undoable.to);\n                }\n            }\n            return true;\n        }\n    }\n    return false;\n};\n\nconst unsetAllMarks = () => ({ tr, dispatch }) => {\n    const { selection } = tr;\n    const { empty, ranges } = selection;\n    if (empty) {\n        return true;\n    }\n    if (dispatch) {\n        ranges.forEach(range => {\n            tr.removeMark(range.$from.pos, range.$to.pos);\n        });\n    }\n    return true;\n};\n\nconst unsetMark = (typeOrName, options = {}) => ({ tr, state, dispatch }) => {\n    var _a;\n    const { extendEmptyMarkRange = false } = options;\n    const { selection } = tr;\n    const type = getMarkType(typeOrName, state.schema);\n    const { $from, empty, ranges } = selection;\n    if (!dispatch) {\n        return true;\n    }\n    if (empty && extendEmptyMarkRange) {\n        let { from, to } = selection;\n        const attrs = (_a = $from.marks().find(mark => mark.type === type)) === null || _a === void 0 ? void 0 : _a.attrs;\n        const range = getMarkRange($from, type, attrs);\n        if (range) {\n            from = range.from;\n            to = range.to;\n        }\n        tr.removeMark(from, to, type);\n    }\n    else {\n        ranges.forEach(range => {\n            tr.removeMark(range.$from.pos, range.$to.pos, type);\n        });\n    }\n    tr.removeStoredMark(type);\n    return true;\n};\n\nconst updateAttributes = (typeOrName, attributes = {}) => ({ tr, state, dispatch }) => {\n    let nodeType = null;\n    let markType = null;\n    const schemaType = getSchemaTypeNameByName(typeof typeOrName === 'string' ? typeOrName : typeOrName.name, state.schema);\n    if (!schemaType) {\n        return false;\n    }\n    if (schemaType === 'node') {\n        nodeType = getNodeType(typeOrName, state.schema);\n    }\n    if (schemaType === 'mark') {\n        markType = getMarkType(typeOrName, state.schema);\n    }\n    if (dispatch) {\n        tr.selection.ranges.forEach((range) => {\n            const from = range.$from.pos;\n            const to = range.$to.pos;\n            let lastPos;\n            let lastNode;\n            let trimmedFrom;\n            let trimmedTo;\n            if (tr.selection.empty) {\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    if (nodeType && nodeType === node.type) {\n                        trimmedFrom = Math.max(pos, from);\n                        trimmedTo = Math.min(pos + node.nodeSize, to);\n                        lastPos = pos;\n                        lastNode = node;\n                    }\n                });\n            }\n            else {\n                state.doc.nodesBetween(from, to, (node, pos) => {\n                    if (pos < from && nodeType && nodeType === node.type) {\n                        trimmedFrom = Math.max(pos, from);\n                        trimmedTo = Math.min(pos + node.nodeSize, to);\n                        lastPos = pos;\n                        lastNode = node;\n                    }\n                    if (pos >= from && pos <= to) {\n                        if (nodeType && nodeType === node.type) {\n                            tr.setNodeMarkup(pos, undefined, {\n                                ...node.attrs,\n                                ...attributes,\n                            });\n                        }\n                        if (markType && node.marks.length) {\n                            node.marks.forEach((mark) => {\n                                if (markType === mark.type) {\n                                    const trimmedFrom2 = Math.max(pos, from);\n                                    const trimmedTo2 = Math.min(pos + node.nodeSize, to);\n                                    tr.addMark(trimmedFrom2, trimmedTo2, markType.create({\n                                        ...mark.attrs,\n                                        ...attributes,\n                                    }));\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n            if (lastNode) {\n                if (lastPos !== undefined) {\n                    tr.setNodeMarkup(lastPos, undefined, {\n                        ...lastNode.attrs,\n                        ...attributes,\n                    });\n                }\n                if (markType && lastNode.marks.length) {\n                    lastNode.marks.forEach((mark) => {\n                        if (markType === mark.type) {\n                            tr.addMark(trimmedFrom, trimmedTo, markType.create({\n                                ...mark.attrs,\n                                ...attributes,\n                            }));\n                        }\n                    });\n                }\n            }\n        });\n    }\n    return true;\n};\n\nconst wrapIn = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return wrapIn$1(type, attributes)(state, dispatch);\n};\n\nconst wrapInList = (typeOrName, attributes = {}) => ({ state, dispatch }) => {\n    const type = getNodeType(typeOrName, state.schema);\n    return wrapInList$1(type, attributes)(state, dispatch);\n};\n\nvar commands = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  blur: blur,\n  clearContent: clearContent,\n  clearNodes: clearNodes,\n  command: command,\n  createParagraphNear: createParagraphNear,\n  cut: cut,\n  deleteCurrentNode: deleteCurrentNode,\n  deleteNode: deleteNode,\n  deleteRange: deleteRange,\n  deleteSelection: deleteSelection,\n  enter: enter,\n  exitCode: exitCode,\n  extendMarkRange: extendMarkRange,\n  first: first,\n  focus: focus,\n  forEach: forEach,\n  insertContent: insertContent,\n  insertContentAt: insertContentAt,\n  joinBackward: joinBackward,\n  joinDown: joinDown,\n  joinForward: joinForward,\n  joinItemBackward: joinItemBackward,\n  joinItemForward: joinItemForward,\n  joinTextblockBackward: joinTextblockBackward,\n  joinTextblockForward: joinTextblockForward,\n  joinUp: joinUp,\n  keyboardShortcut: keyboardShortcut,\n  lift: lift,\n  liftEmptyBlock: liftEmptyBlock,\n  liftListItem: liftListItem,\n  newlineInCode: newlineInCode,\n  resetAttributes: resetAttributes,\n  scrollIntoView: scrollIntoView,\n  selectAll: selectAll,\n  selectNodeBackward: selectNodeBackward,\n  selectNodeForward: selectNodeForward,\n  selectParentNode: selectParentNode,\n  selectTextblockEnd: selectTextblockEnd,\n  selectTextblockStart: selectTextblockStart,\n  setContent: setContent,\n  setMark: setMark,\n  setMeta: setMeta,\n  setNode: setNode,\n  setNodeSelection: setNodeSelection,\n  setTextSelection: setTextSelection,\n  sinkListItem: sinkListItem,\n  splitBlock: splitBlock,\n  splitListItem: splitListItem,\n  toggleList: toggleList,\n  toggleMark: toggleMark,\n  toggleNode: toggleNode,\n  toggleWrap: toggleWrap,\n  undoInputRule: undoInputRule,\n  unsetAllMarks: unsetAllMarks,\n  unsetMark: unsetMark,\n  updateAttributes: updateAttributes,\n  wrapIn: wrapIn,\n  wrapInList: wrapInList\n});\n\nconst Commands = Extension.create({\n    name: 'commands',\n    addCommands() {\n        return {\n            ...commands,\n        };\n    },\n});\n\nconst Drop = Extension.create({\n    name: 'drop',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tiptapDrop'),\n                props: {\n                    handleDrop: (_, e, slice, moved) => {\n                        this.editor.emit('drop', {\n                            editor: this.editor,\n                            event: e,\n                            slice,\n                            moved,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Editable = Extension.create({\n    name: 'editable',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('editable'),\n                props: {\n                    editable: () => this.editor.options.editable,\n                },\n            }),\n        ];\n    },\n});\n\nconst focusEventsPluginKey = new PluginKey('focusEvents');\nconst FocusEvents = Extension.create({\n    name: 'focusEvents',\n    addProseMirrorPlugins() {\n        const { editor } = this;\n        return [\n            new Plugin({\n                key: focusEventsPluginKey,\n                props: {\n                    handleDOMEvents: {\n                        focus: (view, event) => {\n                            editor.isFocused = true;\n                            const transaction = editor.state.tr\n                                .setMeta('focus', { event })\n                                .setMeta('addToHistory', false);\n                            view.dispatch(transaction);\n                            return false;\n                        },\n                        blur: (view, event) => {\n                            editor.isFocused = false;\n                            const transaction = editor.state.tr\n                                .setMeta('blur', { event })\n                                .setMeta('addToHistory', false);\n                            view.dispatch(transaction);\n                            return false;\n                        },\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Keymap = Extension.create({\n    name: 'keymap',\n    addKeyboardShortcuts() {\n        const handleBackspace = () => this.editor.commands.first(({ commands }) => [\n            () => commands.undoInputRule(),\n            // maybe convert first text block node to default node\n            () => commands.command(({ tr }) => {\n                const { selection, doc } = tr;\n                const { empty, $anchor } = selection;\n                const { pos, parent } = $anchor;\n                const $parentPos = $anchor.parent.isTextblock && pos > 0 ? tr.doc.resolve(pos - 1) : $anchor;\n                const parentIsIsolating = $parentPos.parent.type.spec.isolating;\n                const parentPos = $anchor.pos - $anchor.parentOffset;\n                const isAtStart = (parentIsIsolating && $parentPos.parent.childCount === 1)\n                    ? parentPos === $anchor.pos\n                    : Selection.atStart(doc).from === pos;\n                if (!empty\n                    || !parent.type.isTextblock\n                    || parent.textContent.length\n                    || !isAtStart\n                    || (isAtStart && $anchor.parent.type.name === 'paragraph') // prevent clearNodes when no nodes to clear, otherwise history stack is appended\n                ) {\n                    return false;\n                }\n                return commands.clearNodes();\n            }),\n            () => commands.deleteSelection(),\n            () => commands.joinBackward(),\n            () => commands.selectNodeBackward(),\n        ]);\n        const handleDelete = () => this.editor.commands.first(({ commands }) => [\n            () => commands.deleteSelection(),\n            () => commands.deleteCurrentNode(),\n            () => commands.joinForward(),\n            () => commands.selectNodeForward(),\n        ]);\n        const handleEnter = () => this.editor.commands.first(({ commands }) => [\n            () => commands.newlineInCode(),\n            () => commands.createParagraphNear(),\n            () => commands.liftEmptyBlock(),\n            () => commands.splitBlock(),\n        ]);\n        const baseKeymap = {\n            Enter: handleEnter,\n            'Mod-Enter': () => this.editor.commands.exitCode(),\n            Backspace: handleBackspace,\n            'Mod-Backspace': handleBackspace,\n            'Shift-Backspace': handleBackspace,\n            Delete: handleDelete,\n            'Mod-Delete': handleDelete,\n            'Mod-a': () => this.editor.commands.selectAll(),\n        };\n        const pcKeymap = {\n            ...baseKeymap,\n        };\n        const macKeymap = {\n            ...baseKeymap,\n            'Ctrl-h': handleBackspace,\n            'Alt-Backspace': handleBackspace,\n            'Ctrl-d': handleDelete,\n            'Ctrl-Alt-Backspace': handleDelete,\n            'Alt-Delete': handleDelete,\n            'Alt-d': handleDelete,\n            'Ctrl-a': () => this.editor.commands.selectTextblockStart(),\n            'Ctrl-e': () => this.editor.commands.selectTextblockEnd(),\n        };\n        if (isiOS() || isMacOS()) {\n            return macKeymap;\n        }\n        return pcKeymap;\n    },\n    addProseMirrorPlugins() {\n        return [\n            // With this plugin we check if the whole document was selected and deleted.\n            // In this case we will additionally call `clearNodes()` to convert e.g. a heading\n            // to a paragraph if necessary.\n            // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well\n            // with many other commands.\n            new Plugin({\n                key: new PluginKey('clearDocument'),\n                appendTransaction: (transactions, oldState, newState) => {\n                    if (transactions.some(tr => tr.getMeta('composition'))) {\n                        return;\n                    }\n                    const docChanges = transactions.some(transaction => transaction.docChanged)\n                        && !oldState.doc.eq(newState.doc);\n                    const ignoreTr = transactions.some(transaction => transaction.getMeta('preventClearDocument'));\n                    if (!docChanges || ignoreTr) {\n                        return;\n                    }\n                    const { empty, from, to } = oldState.selection;\n                    const allFrom = Selection.atStart(oldState.doc).from;\n                    const allEnd = Selection.atEnd(oldState.doc).to;\n                    const allWasSelected = from === allFrom && to === allEnd;\n                    if (empty || !allWasSelected) {\n                        return;\n                    }\n                    const isEmpty = isNodeEmpty(newState.doc);\n                    if (!isEmpty) {\n                        return;\n                    }\n                    const tr = newState.tr;\n                    const state = createChainableState({\n                        state: newState,\n                        transaction: tr,\n                    });\n                    const { commands } = new CommandManager({\n                        editor: this.editor,\n                        state,\n                    });\n                    commands.clearNodes();\n                    if (!tr.steps.length) {\n                        return;\n                    }\n                    return tr;\n                },\n            }),\n        ];\n    },\n});\n\nconst Paste = Extension.create({\n    name: 'paste',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tiptapPaste'),\n                props: {\n                    handlePaste: (_view, e, slice) => {\n                        this.editor.emit('paste', {\n                            editor: this.editor,\n                            event: e,\n                            slice,\n                        });\n                    },\n                },\n            }),\n        ];\n    },\n});\n\nconst Tabindex = Extension.create({\n    name: 'tabindex',\n    addProseMirrorPlugins() {\n        return [\n            new Plugin({\n                key: new PluginKey('tabindex'),\n                props: {\n                    attributes: () => (this.editor.isEditable ? { tabindex: '0' } : {}),\n                },\n            }),\n        ];\n    },\n});\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ClipboardTextSerializer: ClipboardTextSerializer,\n  Commands: Commands,\n  Drop: Drop,\n  Editable: Editable,\n  FocusEvents: FocusEvents,\n  Keymap: Keymap,\n  Paste: Paste,\n  Tabindex: Tabindex,\n  focusEventsPluginKey: focusEventsPluginKey\n});\n\nclass NodePos {\n    get name() {\n        return this.node.type.name;\n    }\n    constructor(pos, editor, isBlock = false, node = null) {\n        this.currentNode = null;\n        this.actualDepth = null;\n        this.isBlock = isBlock;\n        this.resolvedPos = pos;\n        this.editor = editor;\n        this.currentNode = node;\n    }\n    get node() {\n        return this.currentNode || this.resolvedPos.node();\n    }\n    get element() {\n        return this.editor.view.domAtPos(this.pos).node;\n    }\n    get depth() {\n        var _a;\n        return (_a = this.actualDepth) !== null && _a !== void 0 ? _a : this.resolvedPos.depth;\n    }\n    get pos() {\n        return this.resolvedPos.pos;\n    }\n    get content() {\n        return this.node.content;\n    }\n    set content(content) {\n        let from = this.from;\n        let to = this.to;\n        if (this.isBlock) {\n            if (this.content.size === 0) {\n                console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`);\n                return;\n            }\n            from = this.from + 1;\n            to = this.to - 1;\n        }\n        this.editor.commands.insertContentAt({ from, to }, content);\n    }\n    get attributes() {\n        return this.node.attrs;\n    }\n    get textContent() {\n        return this.node.textContent;\n    }\n    get size() {\n        return this.node.nodeSize;\n    }\n    get from() {\n        if (this.isBlock) {\n            return this.pos;\n        }\n        return this.resolvedPos.start(this.resolvedPos.depth);\n    }\n    get range() {\n        return {\n            from: this.from,\n            to: this.to,\n        };\n    }\n    get to() {\n        if (this.isBlock) {\n            return this.pos + this.size;\n        }\n        return this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1);\n    }\n    get parent() {\n        if (this.depth === 0) {\n            return null;\n        }\n        const parentPos = this.resolvedPos.start(this.resolvedPos.depth - 1);\n        const $pos = this.resolvedPos.doc.resolve(parentPos);\n        return new NodePos($pos, this.editor);\n    }\n    get before() {\n        let $pos = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2));\n        if ($pos.depth !== this.depth) {\n            $pos = this.resolvedPos.doc.resolve(this.from - 3);\n        }\n        return new NodePos($pos, this.editor);\n    }\n    get after() {\n        let $pos = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1));\n        if ($pos.depth !== this.depth) {\n            $pos = this.resolvedPos.doc.resolve(this.to + 3);\n        }\n        return new NodePos($pos, this.editor);\n    }\n    get children() {\n        const children = [];\n        this.node.content.forEach((node, offset) => {\n            const isBlock = node.isBlock && !node.isTextblock;\n            const isNonTextAtom = node.isAtom && !node.isText;\n            const targetPos = this.pos + offset + (isNonTextAtom ? 0 : 1);\n            // Check if targetPos is within valid document range\n            if (targetPos < 0 || targetPos > this.resolvedPos.doc.nodeSize - 2) {\n                return;\n            }\n            const $pos = this.resolvedPos.doc.resolve(targetPos);\n            if (!isBlock && $pos.depth <= this.depth) {\n                return;\n            }\n            const childNodePos = new NodePos($pos, this.editor, isBlock, isBlock ? node : null);\n            if (isBlock) {\n                childNodePos.actualDepth = this.depth + 1;\n            }\n            children.push(new NodePos($pos, this.editor, isBlock, isBlock ? node : null));\n        });\n        return children;\n    }\n    get firstChild() {\n        return this.children[0] || null;\n    }\n    get lastChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    closest(selector, attributes = {}) {\n        let node = null;\n        let currentNode = this.parent;\n        while (currentNode && !node) {\n            if (currentNode.node.type.name === selector) {\n                if (Object.keys(attributes).length > 0) {\n                    const nodeAttributes = currentNode.node.attrs;\n                    const attrKeys = Object.keys(attributes);\n                    for (let index = 0; index < attrKeys.length; index += 1) {\n                        const key = attrKeys[index];\n                        if (nodeAttributes[key] !== attributes[key]) {\n                            break;\n                        }\n                    }\n                }\n                else {\n                    node = currentNode;\n                }\n            }\n            currentNode = currentNode.parent;\n        }\n        return node;\n    }\n    querySelector(selector, attributes = {}) {\n        return this.querySelectorAll(selector, attributes, true)[0] || null;\n    }\n    querySelectorAll(selector, attributes = {}, firstItemOnly = false) {\n        let nodes = [];\n        if (!this.children || this.children.length === 0) {\n            return nodes;\n        }\n        const attrKeys = Object.keys(attributes);\n        /**\n         * Finds all children recursively that match the selector and attributes\n         * If firstItemOnly is true, it will return the first item found\n         */\n        this.children.forEach(childPos => {\n            // If we already found a node and we only want the first item, we dont need to keep going\n            if (firstItemOnly && nodes.length > 0) {\n                return;\n            }\n            if (childPos.node.type.name === selector) {\n                const doesAllAttributesMatch = attrKeys.every(key => attributes[key] === childPos.node.attrs[key]);\n                if (doesAllAttributesMatch) {\n                    nodes.push(childPos);\n                }\n            }\n            // If we already found a node and we only want the first item, we can stop here and skip the recursion\n            if (firstItemOnly && nodes.length > 0) {\n                return;\n            }\n            nodes = nodes.concat(childPos.querySelectorAll(selector, attributes, firstItemOnly));\n        });\n        return nodes;\n    }\n    setAttribute(attributes) {\n        const { tr } = this.editor.state;\n        tr.setNodeMarkup(this.from, undefined, {\n            ...this.node.attrs,\n            ...attributes,\n        });\n        this.editor.view.dispatch(tr);\n    }\n}\n\nconst style = `.ProseMirror {\n  position: relative;\n}\n\n.ProseMirror {\n  word-wrap: break-word;\n  white-space: pre-wrap;\n  white-space: break-spaces;\n  -webkit-font-variant-ligatures: none;\n  font-variant-ligatures: none;\n  font-feature-settings: \"liga\" 0; /* the above doesn't seem to work in Edge */\n}\n\n.ProseMirror [contenteditable=\"false\"] {\n  white-space: normal;\n}\n\n.ProseMirror [contenteditable=\"false\"] [contenteditable=\"true\"] {\n  white-space: pre-wrap;\n}\n\n.ProseMirror pre {\n  white-space: pre-wrap;\n}\n\nimg.ProseMirror-separator {\n  display: inline !important;\n  border: none !important;\n  margin: 0 !important;\n  width: 0 !important;\n  height: 0 !important;\n}\n\n.ProseMirror-gapcursor {\n  display: none;\n  pointer-events: none;\n  position: absolute;\n  margin: 0;\n}\n\n.ProseMirror-gapcursor:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  top: -2px;\n  width: 20px;\n  border-top: 1px solid black;\n  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;\n}\n\n@keyframes ProseMirror-cursor-blink {\n  to {\n    visibility: hidden;\n  }\n}\n\n.ProseMirror-hideselection *::selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection *::-moz-selection {\n  background: transparent;\n}\n\n.ProseMirror-hideselection * {\n  caret-color: transparent;\n}\n\n.ProseMirror-focused .ProseMirror-gapcursor {\n  display: block;\n}\n\n.tippy-box[data-animation=fade][data-state=hidden] {\n  opacity: 0\n}`;\n\nfunction createStyleTag(style, nonce, suffix) {\n    const tiptapStyleTag = document.querySelector(`style[data-tiptap-style${suffix ? `-${suffix}` : ''}]`);\n    if (tiptapStyleTag !== null) {\n        return tiptapStyleTag;\n    }\n    const styleNode = document.createElement('style');\n    if (nonce) {\n        styleNode.setAttribute('nonce', nonce);\n    }\n    styleNode.setAttribute(`data-tiptap-style${suffix ? `-${suffix}` : ''}`, '');\n    styleNode.innerHTML = style;\n    document.getElementsByTagName('head')[0].appendChild(styleNode);\n    return styleNode;\n}\n\nclass Editor extends EventEmitter {\n    constructor(options = {}) {\n        super();\n        this.isFocused = false;\n        /**\n         * The editor is considered initialized after the `create` event has been emitted.\n         */\n        this.isInitialized = false;\n        this.extensionStorage = {};\n        this.options = {\n            element: document.createElement('div'),\n            content: '',\n            injectCSS: true,\n            injectNonce: undefined,\n            extensions: [],\n            autofocus: false,\n            editable: true,\n            editorProps: {},\n            parseOptions: {},\n            coreExtensionOptions: {},\n            enableInputRules: true,\n            enablePasteRules: true,\n            enableCoreExtensions: true,\n            enableContentCheck: false,\n            emitContentError: false,\n            onBeforeCreate: () => null,\n            onCreate: () => null,\n            onUpdate: () => null,\n            onSelectionUpdate: () => null,\n            onTransaction: () => null,\n            onFocus: () => null,\n            onBlur: () => null,\n            onDestroy: () => null,\n            onContentError: ({ error }) => { throw error; },\n            onPaste: () => null,\n            onDrop: () => null,\n        };\n        this.isCapturingTransaction = false;\n        this.capturedTransaction = null;\n        this.setOptions(options);\n        this.createExtensionManager();\n        this.createCommandManager();\n        this.createSchema();\n        this.on('beforeCreate', this.options.onBeforeCreate);\n        this.emit('beforeCreate', { editor: this });\n        this.on('contentError', this.options.onContentError);\n        this.createView();\n        this.injectCSS();\n        this.on('create', this.options.onCreate);\n        this.on('update', this.options.onUpdate);\n        this.on('selectionUpdate', this.options.onSelectionUpdate);\n        this.on('transaction', this.options.onTransaction);\n        this.on('focus', this.options.onFocus);\n        this.on('blur', this.options.onBlur);\n        this.on('destroy', this.options.onDestroy);\n        this.on('drop', ({ event, slice, moved }) => this.options.onDrop(event, slice, moved));\n        this.on('paste', ({ event, slice }) => this.options.onPaste(event, slice));\n        window.setTimeout(() => {\n            if (this.isDestroyed) {\n                return;\n            }\n            this.commands.focus(this.options.autofocus);\n            this.emit('create', { editor: this });\n            this.isInitialized = true;\n        }, 0);\n    }\n    /**\n     * Returns the editor storage.\n     */\n    get storage() {\n        return this.extensionStorage;\n    }\n    /**\n     * An object of all registered commands.\n     */\n    get commands() {\n        return this.commandManager.commands;\n    }\n    /**\n     * Create a command chain to call multiple commands at once.\n     */\n    chain() {\n        return this.commandManager.chain();\n    }\n    /**\n     * Check if a command or a command chain can be executed. Without executing it.\n     */\n    can() {\n        return this.commandManager.can();\n    }\n    /**\n     * Inject CSS styles.\n     */\n    injectCSS() {\n        if (this.options.injectCSS && document) {\n            this.css = createStyleTag(style, this.options.injectNonce);\n        }\n    }\n    /**\n     * Update editor options.\n     *\n     * @param options A list of options\n     */\n    setOptions(options = {}) {\n        this.options = {\n            ...this.options,\n            ...options,\n        };\n        if (!this.view || !this.state || this.isDestroyed) {\n            return;\n        }\n        if (this.options.editorProps) {\n            this.view.setProps(this.options.editorProps);\n        }\n        this.view.updateState(this.state);\n    }\n    /**\n     * Update editable state of the editor.\n     */\n    setEditable(editable, emitUpdate = true) {\n        this.setOptions({ editable });\n        if (emitUpdate) {\n            this.emit('update', { editor: this, transaction: this.state.tr });\n        }\n    }\n    /**\n     * Returns whether the editor is editable.\n     */\n    get isEditable() {\n        // since plugins are applied after creating the view\n        // `editable` is always `true` for one tick.\n        // that’s why we also have to check for `options.editable`\n        return this.options.editable && this.view && this.view.editable;\n    }\n    /**\n     * Returns the editor state.\n     */\n    get state() {\n        return this.view.state;\n    }\n    /**\n     * Register a ProseMirror plugin.\n     *\n     * @param plugin A ProseMirror plugin\n     * @param handlePlugins Control how to merge the plugin into the existing plugins.\n     * @returns The new editor state\n     */\n    registerPlugin(plugin, handlePlugins) {\n        const plugins = isFunction(handlePlugins)\n            ? handlePlugins(plugin, [...this.state.plugins])\n            : [...this.state.plugins, plugin];\n        const state = this.state.reconfigure({ plugins });\n        this.view.updateState(state);\n        return state;\n    }\n    /**\n     * Unregister a ProseMirror plugin.\n     *\n     * @param nameOrPluginKeyToRemove The plugins name\n     * @returns The new editor state or undefined if the editor is destroyed\n     */\n    unregisterPlugin(nameOrPluginKeyToRemove) {\n        if (this.isDestroyed) {\n            return undefined;\n        }\n        const prevPlugins = this.state.plugins;\n        let plugins = prevPlugins;\n        [].concat(nameOrPluginKeyToRemove).forEach(nameOrPluginKey => {\n            // @ts-ignore\n            const name = typeof nameOrPluginKey === 'string' ? `${nameOrPluginKey}$` : nameOrPluginKey.key;\n            // @ts-ignore\n            plugins = plugins.filter(plugin => !plugin.key.startsWith(name));\n        });\n        if (prevPlugins.length === plugins.length) {\n            // No plugin was removed, so we don’t need to update the state\n            return undefined;\n        }\n        const state = this.state.reconfigure({\n            plugins,\n        });\n        this.view.updateState(state);\n        return state;\n    }\n    /**\n     * Creates an extension manager.\n     */\n    createExtensionManager() {\n        var _a, _b;\n        const coreExtensions = this.options.enableCoreExtensions ? [\n            Editable,\n            ClipboardTextSerializer.configure({\n                blockSeparator: (_b = (_a = this.options.coreExtensionOptions) === null || _a === void 0 ? void 0 : _a.clipboardTextSerializer) === null || _b === void 0 ? void 0 : _b.blockSeparator,\n            }),\n            Commands,\n            FocusEvents,\n            Keymap,\n            Tabindex,\n            Drop,\n            Paste,\n        ].filter(ext => {\n            if (typeof this.options.enableCoreExtensions === 'object') {\n                return this.options.enableCoreExtensions[ext.name] !== false;\n            }\n            return true;\n        }) : [];\n        const allExtensions = [...coreExtensions, ...this.options.extensions].filter(extension => {\n            return ['extension', 'node', 'mark'].includes(extension === null || extension === void 0 ? void 0 : extension.type);\n        });\n        this.extensionManager = new ExtensionManager(allExtensions, this);\n    }\n    /**\n     * Creates an command manager.\n     */\n    createCommandManager() {\n        this.commandManager = new CommandManager({\n            editor: this,\n        });\n    }\n    /**\n     * Creates a ProseMirror schema.\n     */\n    createSchema() {\n        this.schema = this.extensionManager.schema;\n    }\n    /**\n     * Creates a ProseMirror view.\n     */\n    createView() {\n        var _a;\n        let doc;\n        try {\n            doc = createDocument(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: this.options.enableContentCheck });\n        }\n        catch (e) {\n            if (!(e instanceof Error) || !['[tiptap error]: Invalid JSON content', '[tiptap error]: Invalid HTML content'].includes(e.message)) {\n                // Not the content error we were expecting\n                throw e;\n            }\n            this.emit('contentError', {\n                editor: this,\n                error: e,\n                disableCollaboration: () => {\n                    if (this.storage.collaboration) {\n                        this.storage.collaboration.isDisabled = true;\n                    }\n                    // To avoid syncing back invalid content, reinitialize the extensions without the collaboration extension\n                    this.options.extensions = this.options.extensions.filter(extension => extension.name !== 'collaboration');\n                    // Restart the initialization process by recreating the extension manager with the new set of extensions\n                    this.createExtensionManager();\n                },\n            });\n            // Content is invalid, but attempt to create it anyway, stripping out the invalid parts\n            doc = createDocument(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: false });\n        }\n        const selection = resolveFocusPosition(doc, this.options.autofocus);\n        this.view = new EditorView(this.options.element, {\n            ...this.options.editorProps,\n            attributes: {\n                // add `role=\"textbox\"` to the editor element\n                role: 'textbox',\n                ...(_a = this.options.editorProps) === null || _a === void 0 ? void 0 : _a.attributes,\n            },\n            dispatchTransaction: this.dispatchTransaction.bind(this),\n            state: EditorState.create({\n                doc,\n                selection: selection || undefined,\n            }),\n        });\n        // `editor.view` is not yet available at this time.\n        // Therefore we will add all plugins and node views directly afterwards.\n        const newState = this.state.reconfigure({\n            plugins: this.extensionManager.plugins,\n        });\n        this.view.updateState(newState);\n        this.createNodeViews();\n        this.prependClass();\n        // Let’s store the editor instance in the DOM element.\n        // So we’ll have access to it for tests.\n        // @ts-ignore\n        const dom = this.view.dom;\n        dom.editor = this;\n    }\n    /**\n     * Creates all node views.\n     */\n    createNodeViews() {\n        if (this.view.isDestroyed) {\n            return;\n        }\n        this.view.setProps({\n            nodeViews: this.extensionManager.nodeViews,\n        });\n    }\n    /**\n     * Prepend class name to element.\n     */\n    prependClass() {\n        this.view.dom.className = `tiptap ${this.view.dom.className}`;\n    }\n    captureTransaction(fn) {\n        this.isCapturingTransaction = true;\n        fn();\n        this.isCapturingTransaction = false;\n        const tr = this.capturedTransaction;\n        this.capturedTransaction = null;\n        return tr;\n    }\n    /**\n     * The callback over which to send transactions (state updates) produced by the view.\n     *\n     * @param transaction An editor state transaction\n     */\n    dispatchTransaction(transaction) {\n        // if the editor / the view of the editor was destroyed\n        // the transaction should not be dispatched as there is no view anymore.\n        if (this.view.isDestroyed) {\n            return;\n        }\n        if (this.isCapturingTransaction) {\n            if (!this.capturedTransaction) {\n                this.capturedTransaction = transaction;\n                return;\n            }\n            transaction.steps.forEach(step => { var _a; return (_a = this.capturedTransaction) === null || _a === void 0 ? void 0 : _a.step(step); });\n            return;\n        }\n        const state = this.state.apply(transaction);\n        const selectionHasChanged = !this.state.selection.eq(state.selection);\n        this.emit('beforeTransaction', {\n            editor: this,\n            transaction,\n            nextState: state,\n        });\n        this.view.updateState(state);\n        this.emit('transaction', {\n            editor: this,\n            transaction,\n        });\n        if (selectionHasChanged) {\n            this.emit('selectionUpdate', {\n                editor: this,\n                transaction,\n            });\n        }\n        const focus = transaction.getMeta('focus');\n        const blur = transaction.getMeta('blur');\n        if (focus) {\n            this.emit('focus', {\n                editor: this,\n                event: focus.event,\n                transaction,\n            });\n        }\n        if (blur) {\n            this.emit('blur', {\n                editor: this,\n                event: blur.event,\n                transaction,\n            });\n        }\n        if (!transaction.docChanged || transaction.getMeta('preventUpdate')) {\n            return;\n        }\n        this.emit('update', {\n            editor: this,\n            transaction,\n        });\n    }\n    /**\n     * Get attributes of the currently selected node or mark.\n     */\n    getAttributes(nameOrType) {\n        return getAttributes(this.state, nameOrType);\n    }\n    isActive(nameOrAttributes, attributesOrUndefined) {\n        const name = typeof nameOrAttributes === 'string' ? nameOrAttributes : null;\n        const attributes = typeof nameOrAttributes === 'string' ? attributesOrUndefined : nameOrAttributes;\n        return isActive(this.state, name, attributes);\n    }\n    /**\n     * Get the document as JSON.\n     */\n    getJSON() {\n        return this.state.doc.toJSON();\n    }\n    /**\n     * Get the document as HTML.\n     */\n    getHTML() {\n        return getHTMLFromFragment(this.state.doc.content, this.schema);\n    }\n    /**\n     * Get the document as text.\n     */\n    getText(options) {\n        const { blockSeparator = '\\n\\n', textSerializers = {} } = options || {};\n        return getText(this.state.doc, {\n            blockSeparator,\n            textSerializers: {\n                ...getTextSerializersFromSchema(this.schema),\n                ...textSerializers,\n            },\n        });\n    }\n    /**\n     * Check if there is no content.\n     */\n    get isEmpty() {\n        return isNodeEmpty(this.state.doc);\n    }\n    /**\n     * Get the number of characters for the current document.\n     *\n     * @deprecated\n     */\n    getCharacterCount() {\n        console.warn('[tiptap warn]: \"editor.getCharacterCount()\" is deprecated. Please use \"editor.storage.characterCount.characters()\" instead.');\n        return this.state.doc.content.size - 2;\n    }\n    /**\n     * Destroy the editor.\n     */\n    destroy() {\n        this.emit('destroy');\n        if (this.view) {\n            // Cleanup our reference to prevent circular references which caused memory leaks\n            // @ts-ignore\n            const dom = this.view.dom;\n            if (dom && dom.editor) {\n                delete dom.editor;\n            }\n            this.view.destroy();\n        }\n        this.removeAllListeners();\n    }\n    /**\n     * Check if the editor is already destroyed.\n     */\n    get isDestroyed() {\n        var _a;\n        // @ts-ignore\n        return !((_a = this.view) === null || _a === void 0 ? void 0 : _a.docView);\n    }\n    $node(selector, attributes) {\n        var _a;\n        return ((_a = this.$doc) === null || _a === void 0 ? void 0 : _a.querySelector(selector, attributes)) || null;\n    }\n    $nodes(selector, attributes) {\n        var _a;\n        return ((_a = this.$doc) === null || _a === void 0 ? void 0 : _a.querySelectorAll(selector, attributes)) || null;\n    }\n    $pos(pos) {\n        const $pos = this.state.doc.resolve(pos);\n        return new NodePos($pos, this);\n    }\n    get $doc() {\n        return this.$pos(0);\n    }\n}\n\n/**\n * Build an input rule that adds a mark when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction markInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const { tr } = state;\n            const captureGroup = match[match.length - 1];\n            const fullMatch = match[0];\n            if (captureGroup) {\n                const startSpaces = fullMatch.search(/\\S/);\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\n                const textEnd = textStart + captureGroup.length;\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n                    .filter(item => {\n                    // @ts-ignore\n                    const excluded = item.mark.type.excluded;\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\n                })\n                    .filter(item => item.to > textStart);\n                if (excludedMarks.length) {\n                    return null;\n                }\n                if (textEnd < range.to) {\n                    tr.delete(textEnd, range.to);\n                }\n                if (textStart > range.from) {\n                    tr.delete(range.from + startSpaces, textStart);\n                }\n                const markEnd = range.from + startSpaces + captureGroup.length;\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\n                tr.removeStoredMark(config.type);\n            }\n        },\n    });\n}\n\n/**\n * Build an input rule that adds a node when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction nodeInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            const { tr } = state;\n            const start = range.from;\n            let end = range.to;\n            const newNode = config.type.create(attributes);\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                let matchStart = start + offset;\n                if (matchStart > end) {\n                    matchStart = end;\n                }\n                else {\n                    end = matchStart + match[1].length;\n                }\n                // insert last typed character\n                const lastChar = match[0][match[0].length - 1];\n                tr.insertText(lastChar, start + match[0].length - 1);\n                // insert node from input rule\n                tr.replaceWith(matchStart, end, newNode);\n            }\n            else if (match[0]) {\n                const insertionStart = config.type.isInline ? start : start - 1;\n                tr.insert(insertionStart, config.type.create(attributes)).delete(tr.mapping.map(start), tr.mapping.map(end));\n            }\n            tr.scrollIntoView();\n        },\n    });\n}\n\n/**\n * Build an input rule that changes the type of a textblock when the\n * matched text is typed into it. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction textblockTypeInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            const $start = state.doc.resolve(range.from);\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            if (!$start.node(-1).canReplaceWith($start.index(-1), $start.indexAfter(-1), config.type)) {\n                return null;\n            }\n            state.tr\n                .delete(range.from, range.to)\n                .setBlockType(range.from, range.from, config.type, attributes);\n        },\n    });\n}\n\n/**\n * Build an input rule that replaces text when the\n * matched text is typed into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction textInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            let insert = config.replace;\n            let start = range.from;\n            const end = range.to;\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                insert += match[0].slice(offset + match[1].length);\n                start += offset;\n                const cutOff = start - end;\n                if (cutOff > 0) {\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\n                    start = end;\n                }\n            }\n            state.tr.insertText(insert, start, end);\n        },\n    });\n}\n\n/**\n * Build an input rule for automatically wrapping a textblock when a\n * given string is typed. When using a regular expresion you’ll\n * probably want the regexp to start with `^`, so that the pattern can\n * only occur at the start of a textblock.\n *\n * `type` is the type of node to wrap in.\n *\n * By default, if there’s a node with the same type above the newly\n * wrapped node, the rule will try to join those\n * two nodes. You can pass a join predicate, which takes a regular\n * expression match and the node before the wrapped node, and can\n * return a boolean to indicate whether a join should happen.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#input-rules\n */\nfunction wrappingInputRule(config) {\n    return new InputRule({\n        find: config.find,\n        handler: ({ state, range, match, chain, }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match) || {};\n            const tr = state.tr.delete(range.from, range.to);\n            const $start = tr.doc.resolve(range.from);\n            const blockRange = $start.blockRange();\n            const wrapping = blockRange && findWrapping(blockRange, config.type, attributes);\n            if (!wrapping) {\n                return null;\n            }\n            tr.wrap(blockRange, wrapping);\n            if (config.keepMarks && config.editor) {\n                const { selection, storedMarks } = state;\n                const { splittableMarks } = config.editor.extensionManager;\n                const marks = storedMarks || (selection.$to.parentOffset && selection.$from.marks());\n                if (marks) {\n                    const filteredMarks = marks.filter(mark => splittableMarks.includes(mark.type.name));\n                    tr.ensureMarks(filteredMarks);\n                }\n            }\n            if (config.keepAttributes) {\n                /** If the nodeType is `bulletList` or `orderedList` set the `nodeType` as `listItem` */\n                const nodeType = config.type.name === 'bulletList' || config.type.name === 'orderedList' ? 'listItem' : 'taskList';\n                chain().updateAttributes(nodeType, attributes).run();\n            }\n            const before = tr.doc.resolve(range.from - 1).nodeBefore;\n            if (before\n                && before.type === config.type\n                && canJoin(tr.doc, range.from - 1)\n                && (!config.joinPredicate || config.joinPredicate(match, before))) {\n                tr.join(range.from - 1);\n            }\n        },\n    });\n}\n\n/**\n * The Node class is used to create custom node extensions.\n * @see https://tiptap.dev/api/extensions#create-a-new-extension\n */\nclass Node {\n    constructor(config = {}) {\n        this.type = 'node';\n        this.name = 'node';\n        this.parent = null;\n        this.child = null;\n        this.config = {\n            name: this.name,\n            defaultOptions: {},\n        };\n        this.config = {\n            ...this.config,\n            ...config,\n        };\n        this.name = this.config.name;\n        if (config.defaultOptions && Object.keys(config.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${this.name}\".`);\n        }\n        // TODO: remove `addOptions` fallback\n        this.options = this.config.defaultOptions;\n        if (this.config.addOptions) {\n            this.options = callOrReturn(getExtensionField(this, 'addOptions', {\n                name: this.name,\n            }));\n        }\n        this.storage = callOrReturn(getExtensionField(this, 'addStorage', {\n            name: this.name,\n            options: this.options,\n        })) || {};\n    }\n    static create(config = {}) {\n        return new Node(config);\n    }\n    configure(options = {}) {\n        // return a new instance so we can use the same extension\n        // with different calls of `configure`\n        const extension = this.extend({\n            ...this.config,\n            addOptions: () => {\n                return mergeDeep(this.options, options);\n            },\n        });\n        // Always preserve the current name\n        extension.name = this.name;\n        // Set the parent to be our parent\n        extension.parent = this.parent;\n        return extension;\n    }\n    extend(extendedConfig = {}) {\n        const extension = new Node(extendedConfig);\n        extension.parent = this;\n        this.child = extension;\n        extension.name = extendedConfig.name ? extendedConfig.name : extension.parent.name;\n        if (extendedConfig.defaultOptions && Object.keys(extendedConfig.defaultOptions).length > 0) {\n            console.warn(`[tiptap warn]: BREAKING CHANGE: \"defaultOptions\" is deprecated. Please use \"addOptions\" instead. Found in extension: \"${extension.name}\".`);\n        }\n        extension.options = callOrReturn(getExtensionField(extension, 'addOptions', {\n            name: extension.name,\n        }));\n        extension.storage = callOrReturn(getExtensionField(extension, 'addStorage', {\n            name: extension.name,\n            options: extension.options,\n        }));\n        return extension;\n    }\n}\n\n/**\n * Node views are used to customize the rendered DOM structure of a node.\n * @see https://tiptap.dev/guide/node-views\n */\nclass NodeView {\n    constructor(component, props, options) {\n        this.isDragging = false;\n        this.component = component;\n        this.editor = props.editor;\n        this.options = {\n            stopEvent: null,\n            ignoreMutation: null,\n            ...options,\n        };\n        this.extension = props.extension;\n        this.node = props.node;\n        this.decorations = props.decorations;\n        this.innerDecorations = props.innerDecorations;\n        this.view = props.view;\n        this.HTMLAttributes = props.HTMLAttributes;\n        this.getPos = props.getPos;\n        this.mount();\n    }\n    mount() {\n        // eslint-disable-next-line\n        return;\n    }\n    get dom() {\n        return this.editor.view.dom;\n    }\n    get contentDOM() {\n        return null;\n    }\n    onDragStart(event) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const { view } = this.editor;\n        const target = event.target;\n        // get the drag handle element\n        // `closest` is not available for text nodes so we may have to use its parent\n        const dragHandle = target.nodeType === 3\n            ? (_a = target.parentElement) === null || _a === void 0 ? void 0 : _a.closest('[data-drag-handle]')\n            : target.closest('[data-drag-handle]');\n        if (!this.dom || ((_b = this.contentDOM) === null || _b === void 0 ? void 0 : _b.contains(target)) || !dragHandle) {\n            return;\n        }\n        let x = 0;\n        let y = 0;\n        // calculate offset for drag element if we use a different drag handle element\n        if (this.dom !== dragHandle) {\n            const domBox = this.dom.getBoundingClientRect();\n            const handleBox = dragHandle.getBoundingClientRect();\n            // In React, we have to go through nativeEvent to reach offsetX/offsetY.\n            const offsetX = (_c = event.offsetX) !== null && _c !== void 0 ? _c : (_d = event.nativeEvent) === null || _d === void 0 ? void 0 : _d.offsetX;\n            const offsetY = (_e = event.offsetY) !== null && _e !== void 0 ? _e : (_f = event.nativeEvent) === null || _f === void 0 ? void 0 : _f.offsetY;\n            x = handleBox.x - domBox.x + offsetX;\n            y = handleBox.y - domBox.y + offsetY;\n        }\n        const clonedNode = this.dom.cloneNode(true);\n        (_g = event.dataTransfer) === null || _g === void 0 ? void 0 : _g.setDragImage(clonedNode, x, y);\n        const pos = this.getPos();\n        if (typeof pos !== 'number') {\n            return;\n        }\n        // we need to tell ProseMirror that we want to move the whole node\n        // so we create a NodeSelection\n        const selection = NodeSelection.create(view.state.doc, pos);\n        const transaction = view.state.tr.setSelection(selection);\n        view.dispatch(transaction);\n    }\n    stopEvent(event) {\n        var _a;\n        if (!this.dom) {\n            return false;\n        }\n        if (typeof this.options.stopEvent === 'function') {\n            return this.options.stopEvent({ event });\n        }\n        const target = event.target;\n        const isInElement = this.dom.contains(target) && !((_a = this.contentDOM) === null || _a === void 0 ? void 0 : _a.contains(target));\n        // any event from child nodes should be handled by ProseMirror\n        if (!isInElement) {\n            return false;\n        }\n        const isDragEvent = event.type.startsWith('drag');\n        const isDropEvent = event.type === 'drop';\n        const isInput = ['INPUT', 'BUTTON', 'SELECT', 'TEXTAREA'].includes(target.tagName) || target.isContentEditable;\n        // any input event within node views should be ignored by ProseMirror\n        if (isInput && !isDropEvent && !isDragEvent) {\n            return true;\n        }\n        const { isEditable } = this.editor;\n        const { isDragging } = this;\n        const isDraggable = !!this.node.type.spec.draggable;\n        const isSelectable = NodeSelection.isSelectable(this.node);\n        const isCopyEvent = event.type === 'copy';\n        const isPasteEvent = event.type === 'paste';\n        const isCutEvent = event.type === 'cut';\n        const isClickEvent = event.type === 'mousedown';\n        // ProseMirror tries to drag selectable nodes\n        // even if `draggable` is set to `false`\n        // this fix prevents that\n        if (!isDraggable && isSelectable && isDragEvent && event.target === this.dom) {\n            event.preventDefault();\n        }\n        if (isDraggable && isDragEvent && !isDragging && event.target === this.dom) {\n            event.preventDefault();\n            return false;\n        }\n        // we have to store that dragging started\n        if (isDraggable && isEditable && !isDragging && isClickEvent) {\n            const dragHandle = target.closest('[data-drag-handle]');\n            const isValidDragHandle = dragHandle && (this.dom === dragHandle || this.dom.contains(dragHandle));\n            if (isValidDragHandle) {\n                this.isDragging = true;\n                document.addEventListener('dragend', () => {\n                    this.isDragging = false;\n                }, { once: true });\n                document.addEventListener('drop', () => {\n                    this.isDragging = false;\n                }, { once: true });\n                document.addEventListener('mouseup', () => {\n                    this.isDragging = false;\n                }, { once: true });\n            }\n        }\n        // these events are handled by prosemirror\n        if (isDragging\n            || isDropEvent\n            || isCopyEvent\n            || isPasteEvent\n            || isCutEvent\n            || (isClickEvent && isSelectable)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Called when a DOM [mutation](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver) or a selection change happens within the view.\n     * @return `false` if the editor should re-read the selection or re-parse the range around the mutation\n     * @return `true` if it can safely be ignored.\n     */\n    ignoreMutation(mutation) {\n        if (!this.dom || !this.contentDOM) {\n            return true;\n        }\n        if (typeof this.options.ignoreMutation === 'function') {\n            return this.options.ignoreMutation({ mutation });\n        }\n        // a leaf/atom node is like a black box for ProseMirror\n        // and should be fully handled by the node view\n        if (this.node.isLeaf || this.node.isAtom) {\n            return true;\n        }\n        // ProseMirror should handle any selections\n        if (mutation.type === 'selection') {\n            return false;\n        }\n        // try to prevent a bug on iOS and Android that will break node views on enter\n        // this is because ProseMirror can’t preventDispatch on enter\n        // this will lead to a re-render of the node view on enter\n        // see: https://github.com/ueberdosis/tiptap/issues/1214\n        // see: https://github.com/ueberdosis/tiptap/issues/2534\n        if (this.dom.contains(mutation.target)\n            && mutation.type === 'childList'\n            && (isiOS() || isAndroid())\n            && this.editor.isFocused) {\n            const changedNodes = [\n                ...Array.from(mutation.addedNodes),\n                ...Array.from(mutation.removedNodes),\n            ];\n            // we’ll check if every changed node is contentEditable\n            // to make sure it’s probably mutated by ProseMirror\n            if (changedNodes.every(node => node.isContentEditable)) {\n                return false;\n            }\n        }\n        // we will allow mutation contentDOM with attributes\n        // so we can for example adding classes within our node view\n        if (this.contentDOM === mutation.target && mutation.type === 'attributes') {\n            return true;\n        }\n        // ProseMirror should handle any changes within contentDOM\n        if (this.contentDOM.contains(mutation.target)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Update the attributes of the prosemirror node.\n     */\n    updateAttributes(attributes) {\n        this.editor.commands.command(({ tr }) => {\n            const pos = this.getPos();\n            if (typeof pos !== 'number') {\n                return false;\n            }\n            tr.setNodeMarkup(pos, undefined, {\n                ...this.node.attrs,\n                ...attributes,\n            });\n            return true;\n        });\n    }\n    /**\n     * Delete the node.\n     */\n    deleteNode() {\n        const from = this.getPos();\n        if (typeof from !== 'number') {\n            return;\n        }\n        const to = from + this.node.nodeSize;\n        this.editor.commands.deleteRange({ from, to });\n    }\n}\n\n/**\n * Build an paste rule that adds a mark when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction markPasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler: ({ state, range, match, pasteEvent, }) => {\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const { tr } = state;\n            const captureGroup = match[match.length - 1];\n            const fullMatch = match[0];\n            let markEnd = range.to;\n            if (captureGroup) {\n                const startSpaces = fullMatch.search(/\\S/);\n                const textStart = range.from + fullMatch.indexOf(captureGroup);\n                const textEnd = textStart + captureGroup.length;\n                const excludedMarks = getMarksBetween(range.from, range.to, state.doc)\n                    .filter(item => {\n                    // @ts-ignore\n                    const excluded = item.mark.type.excluded;\n                    return excluded.find(type => type === config.type && type !== item.mark.type);\n                })\n                    .filter(item => item.to > textStart);\n                if (excludedMarks.length) {\n                    return null;\n                }\n                if (textEnd < range.to) {\n                    tr.delete(textEnd, range.to);\n                }\n                if (textStart > range.from) {\n                    tr.delete(range.from + startSpaces, textStart);\n                }\n                markEnd = range.from + startSpaces + captureGroup.length;\n                tr.addMark(range.from + startSpaces, markEnd, config.type.create(attributes || {}));\n                tr.removeStoredMark(config.type);\n            }\n        },\n    });\n}\n\nfunction canInsertNode(state, nodeType) {\n    const { selection } = state;\n    const { $from } = selection;\n    // Special handling for NodeSelection\n    if (selection instanceof NodeSelection) {\n        const index = $from.index();\n        const parent = $from.parent;\n        // Can we replace the selected node with the horizontal rule?\n        return parent.canReplaceWith(index, index + 1, nodeType);\n    }\n    // Default: check if we can insert at the current position\n    let depth = $from.depth;\n    while (depth >= 0) {\n        const index = $from.index(depth);\n        const parent = $from.node(depth);\n        const match = parent.contentMatchAt(index);\n        if (match.matchType(nodeType)) {\n            return true;\n        }\n        depth -= 1;\n    }\n    return false;\n}\n\n// source: https://stackoverflow.com/a/6969486\nfunction escapeForRegEx(string) {\n    return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction isString(value) {\n    return typeof value === 'string';\n}\n\n/**\n * Build an paste rule that adds a node when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction nodePasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler({ match, chain, range, pasteEvent, }) {\n            const attributes = callOrReturn(config.getAttributes, undefined, match, pasteEvent);\n            const content = callOrReturn(config.getContent, undefined, attributes);\n            if (attributes === false || attributes === null) {\n                return null;\n            }\n            const node = { type: config.type.name, attrs: attributes };\n            if (content) {\n                node.content = content;\n            }\n            if (match.input) {\n                chain().deleteRange(range).insertContentAt(range.from, node);\n            }\n        },\n    });\n}\n\n/**\n * Build an paste rule that replaces text when the\n * matched text is pasted into it.\n * @see https://tiptap.dev/docs/editor/extensions/custom-extensions/extend-existing#paste-rules\n */\nfunction textPasteRule(config) {\n    return new PasteRule({\n        find: config.find,\n        handler: ({ state, range, match }) => {\n            let insert = config.replace;\n            let start = range.from;\n            const end = range.to;\n            if (match[1]) {\n                const offset = match[0].lastIndexOf(match[1]);\n                insert += match[0].slice(offset + match[1].length);\n                start += offset;\n                const cutOff = start - end;\n                if (cutOff > 0) {\n                    insert = match[0].slice(offset - cutOff, offset) + insert;\n                    start = end;\n                }\n            }\n            state.tr.insertText(insert, start, end);\n        },\n    });\n}\n\nclass Tracker {\n    constructor(transaction) {\n        this.transaction = transaction;\n        this.currentStep = this.transaction.steps.length;\n    }\n    map(position) {\n        let deleted = false;\n        const mappedPosition = this.transaction.steps\n            .slice(this.currentStep)\n            .reduce((newPosition, step) => {\n            const mapResult = step.getMap().mapResult(newPosition);\n            if (mapResult.deleted) {\n                deleted = true;\n            }\n            return mapResult.pos;\n        }, position);\n        return {\n            position: mappedPosition,\n            deleted,\n        };\n    }\n}\n\nexport { CommandManager, Editor, Extension, InputRule, Mark, Node, NodePos, NodeView, PasteRule, Tracker, callOrReturn, canInsertNode, combineTransactionSteps, createChainableState, createDocument, createNodeFromContent, createStyleTag, defaultBlockAt, deleteProps, elementFromString, escapeForRegEx, index as extensions, findChildren, findChildrenInRange, findDuplicates, findParentNode, findParentNodeClosestToPos, fromString, generateHTML, generateJSON, generateText, getAttributes, getAttributesFromExtensions, getChangedRanges, getDebugJSON, getExtensionField, getHTMLFromFragment, getMarkAttributes, getMarkRange, getMarkType, getMarksBetween, getNodeAtPosition, getNodeAttributes, getNodeType, getRenderedAttributes, getSchema, getSchemaByResolvedExtensions, getSchemaTypeByName, getSchemaTypeNameByName, getSplittedAttributes, getText, getTextBetween, getTextContentFromNodes, getTextSerializersFromSchema, injectExtensionAttributesToParseRule, inputRulesPlugin, isActive, isAtEndOfNode, isAtStartOfNode, isEmptyObject, isExtensionRulesEnabled, isFunction, isList, isMacOS, isMarkActive, isNodeActive, isNodeEmpty, isNodeSelection, isNumber, isPlainObject, isRegExp, isString, isTextSelection, isiOS, markInputRule, markPasteRule, mergeAttributes, mergeDeep, minMax, nodeInputRule, nodePasteRule, objectIncludes, pasteRulesPlugin, posToDOMRect, removeDuplicates, resolveFocusPosition, rewriteUnknownContent, selectionToInsertionEnd, splitExtensions, textInputRule, textPasteRule, textblockTypeInputRule, wrappingInputRule };\n//# sourceMappingURL=index.js.map\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5459, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-bubble-menu/src/bubble-menu-plugin.ts","file:///D:/editor/node_modules/%40tiptap/extension-bubble-menu/src/bubble-menu.ts"],"sourcesContent":["import {\n  Editor, isNodeSelection, isTextSelection, posToDOMRect,\n} from '@tiptap/core'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface BubbleMenuPluginProps {\n  /**\n   * The plugin key.\n   * @type {PluginKey | string}\n   * @default 'bubbleMenu'\n   */\n  pluginKey: PluginKey | string\n\n  /**\n   * The editor instance.\n   */\n  editor: Editor\n\n  /**\n   * The DOM element that contains your menu.\n   * @type {HTMLElement}\n   * @default null\n   */\n  element: HTMLElement\n\n  /**\n   * The options for the tippy.js instance.\n   * @see https://atomiks.github.io/tippyjs/v6/all-props/\n   */\n  tippyOptions?: Partial<Props>\n\n  /**\n   * The delay in milliseconds before the menu should be updated.\n   * This can be useful to prevent performance issues.\n   * @type {number}\n   * @default 250\n   */\n  updateDelay?: number\n\n  /**\n   * A function that determines whether the menu should be shown or not.\n   * If this function returns `false`, the menu will be hidden, otherwise it will be shown.\n   */\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        element: HTMLElement\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n        from: number\n        to: number\n      }) => boolean)\n    | null\n}\n\nexport type BubbleMenuViewProps = BubbleMenuPluginProps & {\n  view: EditorView\n}\n\nexport class BubbleMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  public updateDelay: number\n\n  private updateDebounceTimer: number | undefined\n\n  public shouldShow: Exclude<BubbleMenuPluginProps['shouldShow'], null> = ({\n    view,\n    state,\n    from,\n    to,\n  }) => {\n    const { doc, selection } = state\n    const { empty } = selection\n\n    // Sometime check for `empty` is not enough.\n    // Doubleclick an empty paragraph returns a node size of 2.\n    // So we check also for an empty text size.\n    const isEmptyTextBlock = !doc.textBetween(from, to).length && isTextSelection(state.selection)\n\n    // When clicking on a element inside the bubble menu the editor \"blur\" event\n    // is called and the bubble menu item is focussed. In this case we should\n    // consider the menu as part of the editor and keep showing the menu\n    const isChildOfMenu = this.element.contains(document.activeElement)\n\n    const hasEditorFocus = view.hasFocus() || isChildOfMenu\n\n    if (!hasEditorFocus || empty || isEmptyTextBlock || !this.editor.isEditable) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor,\n    element,\n    view,\n    tippyOptions = {},\n    updateDelay = 250,\n    shouldShow,\n  }: BubbleMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n    this.updateDelay = updateDelay\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.addEventListener('dragstart', this.dragstartHandler)\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  dragstartHandler = () => {\n    this.hide()\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    if (\n      event?.relatedTarget === this.editor.view.dom\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'top',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const hasValidSelection = state.selection.from !== state.selection.to\n\n    if (this.updateDelay > 0 && hasValidSelection) {\n      this.handleDebouncedUpdate(view, oldState)\n      return\n    }\n\n    const selectionChanged = !oldState?.selection.eq(view.state.selection)\n    const docChanged = !oldState?.doc.eq(view.state.doc)\n\n    this.updateHandler(view, selectionChanged, docChanged, oldState)\n  }\n\n  handleDebouncedUpdate = (view: EditorView, oldState?: EditorState) => {\n    const selectionChanged = !oldState?.selection.eq(view.state.selection)\n    const docChanged = !oldState?.doc.eq(view.state.doc)\n\n    if (!selectionChanged && !docChanged) {\n      return\n    }\n\n    if (this.updateDebounceTimer) {\n      clearTimeout(this.updateDebounceTimer)\n    }\n\n    this.updateDebounceTimer = window.setTimeout(() => {\n      this.updateHandler(view, selectionChanged, docChanged, oldState)\n    }, this.updateDelay)\n  }\n\n  updateHandler = (view: EditorView, selectionChanged: boolean, docChanged: boolean, oldState?: EditorState) => {\n    const { state, composing } = view\n    const { selection } = state\n\n    const isSame = !selectionChanged && !docChanged\n\n    if (composing || isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    // support for CellSelections\n    const { ranges } = selection\n    const from = Math.min(...ranges.map(range => range.$from.pos))\n    const to = Math.max(...ranges.map(range => range.$to.pos))\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      element: this.element,\n      view,\n      state,\n      oldState,\n      from,\n      to,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect\n        || (() => {\n          if (isNodeSelection(state.selection)) {\n            let node = view.nodeDOM(from) as HTMLElement\n\n            if (node) {\n              const nodeViewWrapper = node.dataset.nodeViewWrapper ? node : node.querySelector('[data-node-view-wrapper]')\n\n              if (nodeViewWrapper) {\n                node = nodeViewWrapper.firstChild as HTMLElement\n              }\n\n              if (node) {\n                return node.getBoundingClientRect()\n              }\n            }\n          }\n\n          return posToDOMRect(view, from, to)\n        }),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.view.dom.removeEventListener('dragstart', this.dragstartHandler)\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const BubbleMenuPlugin = (options: BubbleMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new BubbleMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\n\nimport { BubbleMenuPlugin, BubbleMenuPluginProps } from './bubble-menu-plugin.js'\n\nexport type BubbleMenuOptions = Omit<BubbleMenuPluginProps, 'editor' | 'element'> & {\n  /**\n   * The DOM element that contains your menu.\n   * @type {HTMLElement}\n   * @default null\n   */\n  element: HTMLElement | null,\n}\n\n/**\n * This extension allows you to create a bubble menu.\n * @see https://tiptap.dev/api/extensions/bubble-menu\n */\nexport const BubbleMenu = Extension.create<BubbleMenuOptions>({\n  name: 'bubbleMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'bubbleMenu',\n      updateDelay: undefined,\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      BubbleMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        updateDelay: this.options.updateDelay,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 5704, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5711, "column": 0}, "map": {"version":3,"sources":["file:///D:/editor/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].ReactDOM\n"],"names":["module","exports","require","vendored","ReactDOM"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,QAAQ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5719, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-floating-menu/src/floating-menu-plugin.ts","file:///D:/editor/node_modules/%40tiptap/extension-floating-menu/src/floating-menu.ts"],"sourcesContent":["import {\n  Editor, getText, getTextSerializersFromSchema, posToDOMRect,\n} from '@tiptap/core'\nimport { Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport { EditorState, Plugin, PluginKey } from '@tiptap/pm/state'\nimport { EditorView } from '@tiptap/pm/view'\nimport tippy, { Instance, Props } from 'tippy.js'\n\nexport interface FloatingMenuPluginProps {\n  /**\n   * The plugin key for the floating menu.\n   * @default 'floatingMenu'\n   */\n  pluginKey: PluginKey | string\n\n  /**\n   * The editor instance.\n   * @default null\n   */\n  editor: Editor\n\n  /**\n   * The DOM element that contains your menu.\n   * @default null\n   */\n  element: HTMLElement\n\n  /**\n   * The options for the tippy instance.\n   * @default {}\n   * @see https://atomiks.github.io/tippyjs/v6/all-props/\n   */\n  tippyOptions?: Partial<Props>\n\n  /**\n   * A function that determines whether the menu should be shown or not.\n   * If this function returns `false`, the menu will be hidden, otherwise it will be shown.\n   * @default null\n   */\n  shouldShow?:\n    | ((props: {\n        editor: Editor\n        view: EditorView\n        state: EditorState\n        oldState?: EditorState\n      }) => boolean)\n    | null\n}\n\nexport type FloatingMenuViewProps = FloatingMenuPluginProps & {\n  /**\n   * The editor view.\n   */\n  view: EditorView\n}\n\nexport class FloatingMenuView {\n  public editor: Editor\n\n  public element: HTMLElement\n\n  public view: EditorView\n\n  public preventHide = false\n\n  public tippy: Instance | undefined\n\n  public tippyOptions?: Partial<Props>\n\n  private getTextContent(node:ProseMirrorNode) {\n    return getText(node, { textSerializers: getTextSerializersFromSchema(this.editor.schema) })\n  }\n\n  public shouldShow: Exclude<FloatingMenuPluginProps['shouldShow'], null> = ({ view, state }) => {\n    const { selection } = state\n    const { $anchor, empty } = selection\n    const isRootDepth = $anchor.depth === 1\n\n    const isEmptyTextBlock = $anchor.parent.isTextblock && !$anchor.parent.type.spec.code && !$anchor.parent.textContent && $anchor.parent.childCount === 0 && !this.getTextContent($anchor.parent)\n\n    if (\n      !view.hasFocus()\n      || !empty\n      || !isRootDepth\n      || !isEmptyTextBlock\n      || !this.editor.isEditable\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  constructor({\n    editor, element, view, tippyOptions = {}, shouldShow,\n  }: FloatingMenuViewProps) {\n    this.editor = editor\n    this.element = element\n    this.view = view\n\n    if (shouldShow) {\n      this.shouldShow = shouldShow\n    }\n\n    this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.on('focus', this.focusHandler)\n    this.editor.on('blur', this.blurHandler)\n    this.tippyOptions = tippyOptions\n    // Detaches menu content from its current parent\n    this.element.remove()\n    this.element.style.visibility = 'visible'\n  }\n\n  mousedownHandler = () => {\n    this.preventHide = true\n  }\n\n  focusHandler = () => {\n    // we use `setTimeout` to make sure `selection` is already updated\n    setTimeout(() => this.update(this.editor.view))\n  }\n\n  blurHandler = ({ event }: { event: FocusEvent }) => {\n    if (this.preventHide) {\n      this.preventHide = false\n\n      return\n    }\n\n    if (event?.relatedTarget && this.element.parentNode?.contains(event.relatedTarget as Node)) {\n      return\n    }\n\n    if (\n      event?.relatedTarget === this.editor.view.dom\n    ) {\n      return\n    }\n\n    this.hide()\n  }\n\n  tippyBlurHandler = (event: FocusEvent) => {\n    this.blurHandler({ event })\n  }\n\n  createTooltip() {\n    const { element: editorElement } = this.editor.options\n    const editorIsAttached = !!editorElement.parentElement\n\n    if (this.tippy || !editorIsAttached) {\n      return\n    }\n\n    this.tippy = tippy(editorElement, {\n      duration: 0,\n      getReferenceClientRect: null,\n      content: this.element,\n      interactive: true,\n      trigger: 'manual',\n      placement: 'right',\n      hideOnClick: 'toggle',\n      ...this.tippyOptions,\n    })\n\n    // maybe we have to hide tippy on its own blur event as well\n    if (this.tippy.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).addEventListener('blur', this.tippyBlurHandler)\n    }\n  }\n\n  update(view: EditorView, oldState?: EditorState) {\n    const { state } = view\n    const { doc, selection } = state\n    const { from, to } = selection\n    const isSame = oldState && oldState.doc.eq(doc) && oldState.selection.eq(selection)\n\n    if (isSame) {\n      return\n    }\n\n    this.createTooltip()\n\n    const shouldShow = this.shouldShow?.({\n      editor: this.editor,\n      view,\n      state,\n      oldState,\n    })\n\n    if (!shouldShow) {\n      this.hide()\n\n      return\n    }\n\n    this.tippy?.setProps({\n      getReferenceClientRect:\n        this.tippyOptions?.getReferenceClientRect || (() => posToDOMRect(view, from, to)),\n    })\n\n    this.show()\n  }\n\n  show() {\n    this.tippy?.show()\n  }\n\n  hide() {\n    this.tippy?.hide()\n  }\n\n  destroy() {\n    if (this.tippy?.popper.firstChild) {\n      (this.tippy.popper.firstChild as HTMLElement).removeEventListener(\n        'blur',\n        this.tippyBlurHandler,\n      )\n    }\n    this.tippy?.destroy()\n    this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true })\n    this.editor.off('focus', this.focusHandler)\n    this.editor.off('blur', this.blurHandler)\n  }\n}\n\nexport const FloatingMenuPlugin = (options: FloatingMenuPluginProps) => {\n  return new Plugin({\n    key:\n      typeof options.pluginKey === 'string' ? new PluginKey(options.pluginKey) : options.pluginKey,\n    view: view => new FloatingMenuView({ view, ...options }),\n  })\n}\n","import { Extension } from '@tiptap/core'\n\nimport { FloatingMenuPlugin, FloatingMenuPluginProps } from './floating-menu-plugin.js'\n\nexport type FloatingMenuOptions = Omit<FloatingMenuPluginProps, 'editor' | 'element'> & {\n  /**\n   * The DOM element that contains your menu.\n   * @type {HTMLElement}\n   * @default null\n   */\n  element: HTMLElement | null,\n}\n\n/**\n * This extension allows you to create a floating menu.\n * @see https://tiptap.dev/api/extensions/floating-menu\n */\nexport const FloatingMenu = Extension.create<FloatingMenuOptions>({\n  name: 'floatingMenu',\n\n  addOptions() {\n    return {\n      element: null,\n      tippyOptions: {},\n      pluginKey: 'floatingMenu',\n      shouldShow: null,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    if (!this.options.element) {\n      return []\n    }\n\n    return [\n      FloatingMenuPlugin({\n        pluginKey: this.options.pluginKey,\n        editor: this.editor,\n        element: this.options.element,\n        tippyOptions: this.options.tippyOptions,\n        shouldShow: this.options.shouldShow,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0,1],"debugId":null}},
    {"offset": {"line": 5911, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","file:///D:/editor/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js","file:///D:/editor/node_modules/node_modules/use-sync-external-store/shim/index.js","file:///D:/editor/node_modules/%40tiptap/react/src/EditorContent.tsx","file:///D:/editor/node_modules/node_modules/fast-deep-equal/es6/react.js","file:///D:/editor/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","file:///D:/editor/node_modules/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js","file:///D:/editor/node_modules/node_modules/use-sync-external-store/shim/with-selector.js","file:///D:/editor/node_modules/%40tiptap/react/src/useEditorState.ts","file:///D:/editor/node_modules/%40tiptap/react/src/useEditor.ts","file:///D:/editor/node_modules/%40tiptap/react/src/Context.tsx","file:///D:/editor/node_modules/%40tiptap/react/src/BubbleMenu.tsx","file:///D:/editor/node_modules/%40tiptap/react/src/FloatingMenu.tsx","file:///D:/editor/node_modules/%40tiptap/react/src/useReactNodeView.ts","file:///D:/editor/node_modules/%40tiptap/react/src/NodeViewContent.tsx","file:///D:/editor/node_modules/%40tiptap/react/src/NodeViewWrapper.tsx","file:///D:/editor/node_modules/%40tiptap/react/src/ReactRenderer.tsx","file:///D:/editor/node_modules/%40tiptap/react/src/ReactNodeViewRenderer.tsx"],"sourcesContent":["/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import { Editor } from '@tiptap/core'\nimport React, {\n  ForwardedRef, forwardRef, HTMLProps, LegacyRef, MutableRefObject,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\n\nimport { ContentComponent, EditorWithContentComponent } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\n\nconst mergeRefs = <T extends HTMLDivElement>(\n  ...refs: Array<MutableRefObject<T> | LegacyRef<T> | undefined>\n) => {\n  return (node: T) => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        (ref as MutableRefObject<T | null>).current = node\n      }\n    })\n  }\n}\n\n/**\n * This component renders all of the editor's node views.\n */\nconst Portals: React.FC<{ contentComponent: ContentComponent }> = ({\n  contentComponent,\n}) => {\n  // For performance reasons, we render the node view portals on state changes only\n  const renderers = useSyncExternalStore(\n    contentComponent.subscribe,\n    contentComponent.getSnapshot,\n    contentComponent.getServerSnapshot,\n  )\n\n  // This allows us to directly render the portals without any additional wrapper\n  return (\n    <>\n      {Object.values(renderers)}\n    </>\n  )\n}\n\nexport interface EditorContentProps extends HTMLProps<HTMLDivElement> {\n  editor: Editor | null;\n  innerRef?: ForwardedRef<HTMLDivElement | null>;\n}\n\nfunction getInstance(): ContentComponent {\n  const subscribers = new Set<() => void>()\n  let renderers: Record<string, React.ReactPortal> = {}\n\n  return {\n    /**\n     * Subscribe to the editor instance's changes.\n     */\n    subscribe(callback: () => void) {\n      subscribers.add(callback)\n      return () => {\n        subscribers.delete(callback)\n      }\n    },\n    getSnapshot() {\n      return renderers\n    },\n    getServerSnapshot() {\n      return renderers\n    },\n    /**\n     * Adds a new NodeView Renderer to the editor.\n     */\n    setRenderer(id: string, renderer: ReactRenderer) {\n      renderers = {\n        ...renderers,\n        [id]: ReactDOM.createPortal(renderer.reactElement, renderer.element, id),\n      }\n\n      subscribers.forEach(subscriber => subscriber())\n    },\n    /**\n     * Removes a NodeView Renderer from the editor.\n     */\n    removeRenderer(id: string) {\n      const nextRenderers = { ...renderers }\n\n      delete nextRenderers[id]\n      renderers = nextRenderers\n      subscribers.forEach(subscriber => subscriber())\n    },\n  }\n}\n\nexport class PureEditorContent extends React.Component<\n  EditorContentProps,\n  { hasContentComponentInitialized: boolean }\n> {\n  editorContentRef: React.RefObject<any>\n\n  initialized: boolean\n\n  unsubscribeToContentComponent?: () => void\n\n  constructor(props: EditorContentProps) {\n    super(props)\n    this.editorContentRef = React.createRef()\n    this.initialized = false\n\n    this.state = {\n      hasContentComponentInitialized: Boolean((props.editor as EditorWithContentComponent | null)?.contentComponent),\n    }\n  }\n\n  componentDidMount() {\n    this.init()\n  }\n\n  componentDidUpdate() {\n    this.init()\n  }\n\n  init() {\n    const editor = this.props.editor as EditorWithContentComponent | null\n\n    if (editor && !editor.isDestroyed && editor.options.element) {\n      if (editor.contentComponent) {\n        return\n      }\n\n      const element = this.editorContentRef.current\n\n      element.append(...editor.options.element.childNodes)\n\n      editor.setOptions({\n        element,\n      })\n\n      editor.contentComponent = getInstance()\n\n      // Has the content component been initialized?\n      if (!this.state.hasContentComponentInitialized) {\n        // Subscribe to the content component\n        this.unsubscribeToContentComponent = editor.contentComponent.subscribe(() => {\n          this.setState(prevState => {\n            if (!prevState.hasContentComponentInitialized) {\n              return {\n                hasContentComponentInitialized: true,\n              }\n            }\n            return prevState\n          })\n\n          // Unsubscribe to previous content component\n          if (this.unsubscribeToContentComponent) {\n            this.unsubscribeToContentComponent()\n          }\n        })\n      }\n\n      editor.createNodeViews()\n\n      this.initialized = true\n    }\n  }\n\n  componentWillUnmount() {\n    const editor = this.props.editor as EditorWithContentComponent | null\n\n    if (!editor) {\n      return\n    }\n\n    this.initialized = false\n\n    if (!editor.isDestroyed) {\n      editor.view.setProps({\n        nodeViews: {},\n      })\n    }\n\n    if (this.unsubscribeToContentComponent) {\n      this.unsubscribeToContentComponent()\n    }\n\n    editor.contentComponent = null\n\n    if (!editor.options.element.firstChild) {\n      return\n    }\n\n    const newElement = document.createElement('div')\n\n    newElement.append(...editor.options.element.childNodes)\n\n    editor.setOptions({\n      element: newElement,\n    })\n  }\n\n  render() {\n    const { editor, innerRef, ...rest } = this.props\n\n    return (\n      <>\n        <div ref={mergeRefs(innerRef, this.editorContentRef)} {...rest} />\n        {/* @ts-ignore */}\n        {editor?.contentComponent && <Portals contentComponent={editor.contentComponent} />}\n      </>\n    )\n  }\n}\n\n// EditorContent should be re-created whenever the Editor instance changes\nconst EditorContentWithKey = forwardRef<HTMLDivElement, EditorContentProps>(\n  (props: Omit<EditorContentProps, 'innerRef'>, ref) => {\n    const key = React.useMemo(() => {\n      return Math.floor(Math.random() * 0xffffffff).toString()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.editor])\n\n    // Can't use JSX here because it conflicts with the type definition of Vue's JSX, so use createElement\n    return React.createElement(PureEditorContent, {\n      key,\n      innerRef: ref,\n      ...props,\n    })\n  },\n)\n\nexport const EditorContent = React.memo(EditorContentWithKey)\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\nvar shim = require('use-sync-external-store/shim');\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\nvar useSyncExternalStore = shim.useSyncExternalStore;\n\n// for CommonJS interop.\n\nvar useRef = React.useRef,\n    useEffect = React.useEffect,\n    useMemo = React.useMemo,\n    useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n\nfunction useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n  // Use this to track the rendered snapshot.\n  var instRef = useRef(null);\n  var inst;\n\n  if (instRef.current === null) {\n    inst = {\n      hasValue: false,\n      value: null\n    };\n    instRef.current = inst;\n  } else {\n    inst = instRef.current;\n  }\n\n  var _useMemo = useMemo(function () {\n    // Track the memoized state using closure variables that are local to this\n    // memoized instance of a getSnapshot function. Intentionally not using a\n    // useRef hook, because that state would be shared across all concurrent\n    // copies of the hook/component.\n    var hasMemo = false;\n    var memoizedSnapshot;\n    var memoizedSelection;\n\n    var memoizedSelector = function (nextSnapshot) {\n      if (!hasMemo) {\n        // The first time the hook is called, there is no memoized result.\n        hasMemo = true;\n        memoizedSnapshot = nextSnapshot;\n\n        var _nextSelection = selector(nextSnapshot);\n\n        if (isEqual !== undefined) {\n          // Even if the selector has changed, the currently rendered selection\n          // may be equal to the new selection. We should attempt to reuse the\n          // current value if possible, to preserve downstream memoizations.\n          if (inst.hasValue) {\n            var currentSelection = inst.value;\n\n            if (isEqual(currentSelection, _nextSelection)) {\n              memoizedSelection = currentSelection;\n              return currentSelection;\n            }\n          }\n        }\n\n        memoizedSelection = _nextSelection;\n        return _nextSelection;\n      } // We may be able to reuse the previous invocation's result.\n\n\n      // We may be able to reuse the previous invocation's result.\n      var prevSnapshot = memoizedSnapshot;\n      var prevSelection = memoizedSelection;\n\n      if (objectIs(prevSnapshot, nextSnapshot)) {\n        // The snapshot is the same as last time. Reuse the previous selection.\n        return prevSelection;\n      } // The snapshot has changed, so we need to compute a new selection.\n\n\n      // The snapshot has changed, so we need to compute a new selection.\n      var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n\n      // If a custom isEqual function is provided, use that to check if the data\n      // has changed. If it hasn't, return the previous selection. That signals\n      // to React that the selections are conceptually equal, and we can bail\n      // out of rendering.\n      if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n        return prevSelection;\n      }\n\n      memoizedSnapshot = nextSnapshot;\n      memoizedSelection = nextSelection;\n      return nextSelection;\n    }; // Assigning this to a constant so that Flow knows it can't change.\n\n\n    // Assigning this to a constant so that Flow knows it can't change.\n    var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n\n    var getSnapshotWithSelector = function () {\n      return memoizedSelector(getSnapshot());\n    };\n\n    var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function () {\n      return memoizedSelector(maybeGetServerSnapshot());\n    };\n    return [getSnapshotWithSelector, getServerSnapshotWithSelector];\n  }, [getSnapshot, getServerSnapshot, selector, isEqual]),\n      getSelection = _useMemo[0],\n      getServerSelection = _useMemo[1];\n\n  var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n  useEffect(function () {\n    inst.hasValue = true;\n    inst.value = value;\n  }, [value]);\n  useDebugValue(value);\n  return value;\n}\n\nexports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import type { Editor } from '@tiptap/core'\nimport deepEqual from 'fast-deep-equal/es6/react'\nimport {\n  useDebugValue, useEffect, useLayoutEffect, useState,\n} from 'react'\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport type EditorStateSnapshot<TEditor extends Editor | null = Editor | null> = {\n  editor: TEditor;\n  transactionNumber: number;\n};\n\nexport type UseEditorStateOptions<\n  TSelectorResult,\n  TEditor extends Editor | null = Editor | null,\n> = {\n  /**\n   * The editor instance.\n   */\n  editor: TEditor;\n  /**\n   * A selector function to determine the value to compare for re-rendering.\n   */\n  selector: (context: EditorStateSnapshot<TEditor>) => TSelectorResult;\n  /**\n   * A custom equality function to determine if the editor should re-render.\n   * @default `deepEqual` from `fast-deep-equal`\n   */\n  equalityFn?: (a: TSelectorResult, b: TSelectorResult | null) => boolean;\n};\n\n/**\n * To synchronize the editor instance with the component state,\n * we need to create a separate instance that is not affected by the component re-renders.\n */\nclass EditorStateManager<TEditor extends Editor | null = Editor | null> {\n  private transactionNumber = 0\n\n  private lastTransactionNumber = 0\n\n  private lastSnapshot: EditorStateSnapshot<TEditor>\n\n  private editor: TEditor\n\n  private subscribers = new Set<() => void>()\n\n  constructor(initialEditor: TEditor) {\n    this.editor = initialEditor\n    this.lastSnapshot = { editor: initialEditor, transactionNumber: 0 }\n\n    this.getSnapshot = this.getSnapshot.bind(this)\n    this.getServerSnapshot = this.getServerSnapshot.bind(this)\n    this.watch = this.watch.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  /**\n   * Get the current editor instance.\n   */\n  getSnapshot(): EditorStateSnapshot<TEditor> {\n    if (this.transactionNumber === this.lastTransactionNumber) {\n      return this.lastSnapshot\n    }\n    this.lastTransactionNumber = this.transactionNumber\n    this.lastSnapshot = { editor: this.editor, transactionNumber: this.transactionNumber }\n    return this.lastSnapshot\n  }\n\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot(): EditorStateSnapshot<null> {\n    return { editor: null, transactionNumber: 0 }\n  }\n\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(callback: () => void): () => void {\n    this.subscribers.add(callback)\n    return () => {\n      this.subscribers.delete(callback)\n    }\n  }\n\n  /**\n   * Watch the editor instance for changes.\n   */\n  watch(nextEditor: Editor | null): undefined | (() => void) {\n    this.editor = nextEditor as TEditor\n\n    if (this.editor) {\n      /**\n       * This will force a re-render when the editor state changes.\n       * This is to support things like `editor.can().toggleBold()` in components that `useEditor`.\n       * This could be more efficient, but it's a good trade-off for now.\n       */\n      const fn = () => {\n        this.transactionNumber += 1\n        this.subscribers.forEach(callback => callback())\n      }\n\n      const currentEditor = this.editor\n\n      currentEditor.on('transaction', fn)\n      return () => {\n        currentEditor.off('transaction', fn)\n      }\n    }\n\n    return undefined\n  }\n}\n\n/**\n * This hook allows you to watch for changes on the editor instance.\n * It will allow you to select a part of the editor state and re-render the component when it changes.\n * @example\n * ```tsx\n * const editor = useEditor({...options})\n * const { currentSelection } = useEditorState({\n *  editor,\n *  selector: snapshot => ({ currentSelection: snapshot.editor.state.selection }),\n * })\n */\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor>\n): TSelectorResult;\n/**\n * This hook allows you to watch for changes on the editor instance.\n * It will allow you to select a part of the editor state and re-render the component when it changes.\n * @example\n * ```tsx\n * const editor = useEditor({...options})\n * const { currentSelection } = useEditorState({\n *  editor,\n *  selector: snapshot => ({ currentSelection: snapshot.editor.state.selection }),\n * })\n */\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor | null>\n): TSelectorResult | null;\n\n/**\n * This hook allows you to watch for changes on the editor instance.\n * It will allow you to select a part of the editor state and re-render the component when it changes.\n * @example\n * ```tsx\n * const editor = useEditor({...options})\n * const { currentSelection } = useEditorState({\n *  editor,\n *  selector: snapshot => ({ currentSelection: snapshot.editor.state.selection }),\n * })\n */\nexport function useEditorState<TSelectorResult>(\n  options: UseEditorStateOptions<TSelectorResult, Editor> | UseEditorStateOptions<TSelectorResult, Editor | null>,\n): TSelectorResult | null {\n  const [editorStateManager] = useState(() => new EditorStateManager(options.editor))\n\n  // Using the `useSyncExternalStore` hook to sync the editor instance with the component state\n  const selectedState = useSyncExternalStoreWithSelector(\n    editorStateManager.subscribe,\n    editorStateManager.getSnapshot,\n    editorStateManager.getServerSnapshot,\n    options.selector as UseEditorStateOptions<TSelectorResult, Editor | null>['selector'],\n    options.equalityFn ?? deepEqual,\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    return editorStateManager.watch(options.editor)\n  }, [options.editor, editorStateManager])\n\n  useDebugValue(selectedState)\n\n  return selectedState\n}\n","import { type EditorOptions, Editor } from '@tiptap/core'\nimport {\n  DependencyList,\n  MutableRefObject,\n  useDebugValue,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useSyncExternalStore } from 'use-sync-external-store/shim'\n\nimport { useEditorState } from './useEditorState.js'\n\nconst isDev = process.env.NODE_ENV !== 'production'\nconst isSSR = typeof window === 'undefined'\nconst isNext = isSSR || Boolean(typeof window !== 'undefined' && (window as any).next)\n\n/**\n * The options for the `useEditor` hook.\n */\nexport type UseEditorOptions = Partial<EditorOptions> & {\n  /**\n   * Whether to render the editor on the first render.\n   * If client-side rendering, set this to `true`.\n   * If server-side rendering, set this to `false`.\n   * @default true\n   */\n  immediatelyRender?: boolean;\n  /**\n   * Whether to re-render the editor on each transaction.\n   * This is legacy behavior that will be removed in future versions.\n   * @default true\n   */\n  shouldRerenderOnTransaction?: boolean;\n};\n\n/**\n * This class handles the creation, destruction, and re-creation of the editor instance.\n */\nclass EditorInstanceManager {\n  /**\n   * The current editor instance.\n   */\n  private editor: Editor | null = null\n\n  /**\n   * The most recent options to apply to the editor.\n   */\n  private options: MutableRefObject<UseEditorOptions>\n\n  /**\n   * The subscriptions to notify when the editor instance\n   * has been created or destroyed.\n   */\n  private subscriptions = new Set<() => void>()\n\n  /**\n   * A timeout to destroy the editor if it was not mounted within a time frame.\n   */\n  private scheduledDestructionTimeout: ReturnType<typeof setTimeout> | undefined\n\n  /**\n   * Whether the editor has been mounted.\n   */\n  private isComponentMounted = false\n\n  /**\n   * The most recent dependencies array.\n   */\n  private previousDeps: DependencyList | null = null\n\n  /**\n   * The unique instance ID. This is used to identify the editor instance. And will be re-generated for each new instance.\n   */\n  public instanceId = ''\n\n  constructor(options: MutableRefObject<UseEditorOptions>) {\n    this.options = options\n    this.subscriptions = new Set<() => void>()\n    this.setEditor(this.getInitialEditor())\n    this.scheduleDestroy()\n\n    this.getEditor = this.getEditor.bind(this)\n    this.getServerSnapshot = this.getServerSnapshot.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n    this.refreshEditorInstance = this.refreshEditorInstance.bind(this)\n    this.scheduleDestroy = this.scheduleDestroy.bind(this)\n    this.onRender = this.onRender.bind(this)\n    this.createEditor = this.createEditor.bind(this)\n  }\n\n  private setEditor(editor: Editor | null) {\n    this.editor = editor\n    this.instanceId = Math.random().toString(36).slice(2, 9)\n\n    // Notify all subscribers that the editor instance has been created\n    this.subscriptions.forEach(cb => cb())\n  }\n\n  private getInitialEditor() {\n    if (this.options.current.immediatelyRender === undefined) {\n      if (isSSR || isNext) {\n        // TODO in the next major release, we should throw an error here\n        if (isDev) {\n          /**\n           * Throw an error in development, to make sure the developer is aware that tiptap cannot be SSR'd\n           * and that they need to set `immediatelyRender` to `false` to avoid hydration mismatches.\n           */\n          console.warn(\n            'Tiptap Error: SSR has been detected, please set `immediatelyRender` explicitly to `false` to avoid hydration mismatches.',\n          )\n        }\n\n        // Best faith effort in production, run the code in the legacy mode to avoid hydration mismatches and errors in production\n        return null\n      }\n\n      // Default to immediately rendering when client-side rendering\n      return this.createEditor()\n    }\n\n    if (this.options.current.immediatelyRender && isSSR && isDev) {\n      // Warn in development, to make sure the developer is aware that tiptap cannot be SSR'd, set `immediatelyRender` to `false` to avoid hydration mismatches.\n      throw new Error(\n        'Tiptap Error: SSR has been detected, and `immediatelyRender` has been set to `true` this is an unsupported configuration that may result in errors, explicitly set `immediatelyRender` to `false` to avoid hydration mismatches.',\n      )\n    }\n\n    if (this.options.current.immediatelyRender) {\n      return this.createEditor()\n    }\n\n    return null\n  }\n\n  /**\n   * Create a new editor instance. And attach event listeners.\n   */\n  private createEditor(): Editor {\n    const optionsToApply: Partial<EditorOptions> = {\n      ...this.options.current,\n      // Always call the most recent version of the callback function by default\n      onBeforeCreate: (...args) => this.options.current.onBeforeCreate?.(...args),\n      onBlur: (...args) => this.options.current.onBlur?.(...args),\n      onCreate: (...args) => this.options.current.onCreate?.(...args),\n      onDestroy: (...args) => this.options.current.onDestroy?.(...args),\n      onFocus: (...args) => this.options.current.onFocus?.(...args),\n      onSelectionUpdate: (...args) => this.options.current.onSelectionUpdate?.(...args),\n      onTransaction: (...args) => this.options.current.onTransaction?.(...args),\n      onUpdate: (...args) => this.options.current.onUpdate?.(...args),\n      onContentError: (...args) => this.options.current.onContentError?.(...args),\n      onDrop: (...args) => this.options.current.onDrop?.(...args),\n      onPaste: (...args) => this.options.current.onPaste?.(...args),\n    }\n    const editor = new Editor(optionsToApply)\n\n    // no need to keep track of the event listeners, they will be removed when the editor is destroyed\n\n    return editor\n  }\n\n  /**\n   * Get the current editor instance.\n   */\n  getEditor(): Editor | null {\n    return this.editor\n  }\n\n  /**\n   * Always disable the editor on the server-side.\n   */\n  getServerSnapshot(): null {\n    return null\n  }\n\n  /**\n   * Subscribe to the editor instance's changes.\n   */\n  subscribe(onStoreChange: () => void) {\n    this.subscriptions.add(onStoreChange)\n\n    return () => {\n      this.subscriptions.delete(onStoreChange)\n    }\n  }\n\n  static compareOptions(a: UseEditorOptions, b: UseEditorOptions) {\n    return (Object.keys(a) as (keyof UseEditorOptions)[]).every(key => {\n      if (['onCreate', 'onBeforeCreate', 'onDestroy', 'onUpdate', 'onTransaction', 'onFocus', 'onBlur', 'onSelectionUpdate', 'onContentError', 'onDrop', 'onPaste'].includes(key)) {\n        // we don't want to compare callbacks, they are always different and only registered once\n        return true\n      }\n\n      // We often encourage putting extensions inlined in the options object, so we will do a slightly deeper comparison here\n      if (key === 'extensions' && a.extensions && b.extensions) {\n        if (a.extensions.length !== b.extensions.length) {\n          return false\n        }\n        return a.extensions.every((extension, index) => {\n          if (extension !== b.extensions?.[index]) {\n            return false\n          }\n          return true\n        })\n      }\n      if (a[key] !== b[key]) {\n        // if any of the options have changed, we should update the editor options\n        return false\n      }\n      return true\n    })\n  }\n\n  /**\n   * On each render, we will create, update, or destroy the editor instance.\n   * @param deps The dependencies to watch for changes\n   * @returns A cleanup function\n   */\n  onRender(deps: DependencyList) {\n    // The returned callback will run on each render\n    return () => {\n      this.isComponentMounted = true\n      // Cleanup any scheduled destructions, since we are currently rendering\n      clearTimeout(this.scheduledDestructionTimeout)\n\n      if (this.editor && !this.editor.isDestroyed && deps.length === 0) {\n        // if the editor does exist & deps are empty, we don't need to re-initialize the editor generally\n        if (!EditorInstanceManager.compareOptions(this.options.current, this.editor.options)) {\n          // But, the options are different, so we need to update the editor options\n          // Still, this is faster than re-creating the editor\n          this.editor.setOptions({\n            ...this.options.current,\n            editable: this.editor.isEditable,\n          })\n        }\n      } else {\n        // When the editor:\n        // - does not yet exist\n        // - is destroyed\n        // - the deps array changes\n        // We need to destroy the editor instance and re-initialize it\n        this.refreshEditorInstance(deps)\n      }\n\n      return () => {\n        this.isComponentMounted = false\n        this.scheduleDestroy()\n      }\n    }\n  }\n\n  /**\n   * Recreate the editor instance if the dependencies have changed.\n   */\n  private refreshEditorInstance(deps: DependencyList) {\n    if (this.editor && !this.editor.isDestroyed) {\n      // Editor instance already exists\n      if (this.previousDeps === null) {\n        // If lastDeps has not yet been initialized, reuse the current editor instance\n        this.previousDeps = deps\n        return\n      }\n      const depsAreEqual = this.previousDeps.length === deps.length\n        && this.previousDeps.every((dep, index) => dep === deps[index])\n\n      if (depsAreEqual) {\n        // deps exist and are equal, no need to recreate\n        return\n      }\n    }\n\n    if (this.editor && !this.editor.isDestroyed) {\n      // Destroy the editor instance if it exists\n      this.editor.destroy()\n    }\n\n    this.setEditor(this.createEditor())\n\n    // Update the lastDeps to the current deps\n    this.previousDeps = deps\n  }\n\n  /**\n   * Schedule the destruction of the editor instance.\n   * This will only destroy the editor if it was not mounted on the next tick.\n   * This is to avoid destroying the editor instance when it's actually still mounted.\n   */\n  private scheduleDestroy() {\n    const currentInstanceId = this.instanceId\n    const currentEditor = this.editor\n\n    // Wait two ticks to see if the component is still mounted\n    this.scheduledDestructionTimeout = setTimeout(() => {\n      if (this.isComponentMounted && this.instanceId === currentInstanceId) {\n        // If still mounted on the following tick, with the same instanceId, do not destroy the editor\n        if (currentEditor) {\n          // just re-apply options as they might have changed\n          currentEditor.setOptions(this.options.current)\n        }\n        return\n      }\n      if (currentEditor && !currentEditor.isDestroyed) {\n        currentEditor.destroy()\n        if (this.instanceId === currentInstanceId) {\n          this.setEditor(null)\n        }\n      }\n      // This allows the effect to run again between ticks\n      // which may save us from having to re-create the editor\n    }, 1)\n  }\n}\n\n/**\n * This hook allows you to create an editor instance.\n * @param options The editor options\n * @param deps The dependencies to watch for changes\n * @returns The editor instance\n * @example const editor = useEditor({ extensions: [...] })\n */\nexport function useEditor(\n  options: UseEditorOptions & { immediatelyRender: true },\n  deps?: DependencyList\n): Editor;\n\n/**\n * This hook allows you to create an editor instance.\n * @param options The editor options\n * @param deps The dependencies to watch for changes\n * @returns The editor instance\n * @example const editor = useEditor({ extensions: [...] })\n */\nexport function useEditor(options?: UseEditorOptions, deps?: DependencyList): Editor | null;\n\nexport function useEditor(\n  options: UseEditorOptions = {},\n  deps: DependencyList = [],\n): Editor | null {\n  const mostRecentOptions = useRef(options)\n\n  mostRecentOptions.current = options\n\n  const [instanceManager] = useState(() => new EditorInstanceManager(mostRecentOptions))\n\n  const editor = useSyncExternalStore(\n    instanceManager.subscribe,\n    instanceManager.getEditor,\n    instanceManager.getServerSnapshot,\n  )\n\n  useDebugValue(editor)\n\n  // This effect will handle creating/updating the editor instance\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(instanceManager.onRender(deps))\n\n  // The default behavior is to re-render on each transaction\n  // This is legacy behavior that will be removed in future versions\n  useEditorState({\n    editor,\n    selector: ({ transactionNumber }) => {\n      if (options.shouldRerenderOnTransaction === false) {\n        // This will prevent the editor from re-rendering on each transaction\n        return null\n      }\n\n      // This will avoid re-rendering on the first transaction when `immediatelyRender` is set to `true`\n      if (options.immediatelyRender && transactionNumber === 0) {\n        return 0\n      }\n      return transactionNumber + 1\n    },\n  })\n\n  return editor\n}\n","import { Editor } from '@tiptap/core'\nimport React, {\n  createContext, HTMLAttributes, ReactNode, useContext,\n} from 'react'\n\nimport { EditorContent } from './EditorContent.js'\nimport { useEditor, UseEditorOptions } from './useEditor.js'\n\nexport type EditorContextValue = {\n  editor: Editor | null;\n}\n\nexport const EditorContext = createContext<EditorContextValue>({\n  editor: null,\n})\n\nexport const EditorConsumer = EditorContext.Consumer\n\n/**\n * A hook to get the current editor instance.\n */\nexport const useCurrentEditor = () => useContext(EditorContext)\n\nexport type EditorProviderProps = {\n  children?: ReactNode;\n  slotBefore?: ReactNode;\n  slotAfter?: ReactNode;\n  editorContainerProps?: HTMLAttributes<HTMLDivElement>;\n} & UseEditorOptions\n\n/**\n * This is the provider component for the editor.\n * It allows the editor to be accessible across the entire component tree\n * with `useCurrentEditor`.\n */\nexport function EditorProvider({\n  children, slotAfter, slotBefore, editorContainerProps = {}, ...editorOptions\n}: EditorProviderProps) {\n  const editor = useEditor(editorOptions)\n\n  if (!editor) {\n    return null\n  }\n\n  return (\n    <EditorContext.Provider value={{ editor }}>\n      {slotBefore}\n      <EditorConsumer>\n        {({ editor: currentEditor }) => (\n          <EditorContent editor={currentEditor} {...editorContainerProps} />\n        )}\n      </EditorConsumer>\n      {children}\n      {slotAfter}\n    </EditorContext.Provider>\n  )\n}\n","import { BubbleMenuPlugin, BubbleMenuPluginProps } from '@tiptap/extension-bubble-menu'\nimport React, { useEffect, useState } from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport type BubbleMenuProps = Omit<Optional<BubbleMenuPluginProps, 'pluginKey'>, 'element' | 'editor'> & {\n  editor: BubbleMenuPluginProps['editor'] | null;\n  className?: string;\n  children: React.ReactNode;\n  updateDelay?: number;\n};\n\nexport const BubbleMenu = (props: BubbleMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'bubbleMenu', editor, tippyOptions = {}, updateDelay, shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('BubbleMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = BubbleMenuPlugin({\n      updateDelay,\n      editor: menuEditor,\n      element,\n      pluginKey,\n      shouldShow,\n      tippyOptions,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => { menuEditor.unregisterPlugin(pluginKey) }\n  }, [props.editor, currentEditor, element])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { FloatingMenuPlugin, FloatingMenuPluginProps } from '@tiptap/extension-floating-menu'\nimport React, {\n  useEffect, useState,\n} from 'react'\n\nimport { useCurrentEditor } from './Context.js'\n\ntype Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>\n\nexport type FloatingMenuProps = Omit<Optional<FloatingMenuPluginProps, 'pluginKey'>, 'element' | 'editor'> & {\n  editor: FloatingMenuPluginProps['editor'] | null;\n  className?: string,\n  children: React.ReactNode\n}\n\nexport const FloatingMenu = (props: FloatingMenuProps) => {\n  const [element, setElement] = useState<HTMLDivElement | null>(null)\n  const { editor: currentEditor } = useCurrentEditor()\n\n  useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    if (props.editor?.isDestroyed || currentEditor?.isDestroyed) {\n      return\n    }\n\n    const {\n      pluginKey = 'floatingMenu',\n      editor,\n      tippyOptions = {},\n      shouldShow = null,\n    } = props\n\n    const menuEditor = editor || currentEditor\n\n    if (!menuEditor) {\n      console.warn('FloatingMenu component is not rendered inside of an editor component or does not have editor prop.')\n      return\n    }\n\n    const plugin = FloatingMenuPlugin({\n      pluginKey,\n      editor: menuEditor,\n      element,\n      tippyOptions,\n      shouldShow,\n    })\n\n    menuEditor.registerPlugin(plugin)\n    return () => { menuEditor.unregisterPlugin(pluginKey) }\n  }, [\n    props.editor,\n    currentEditor,\n    element,\n  ])\n\n  return (\n    <div ref={setElement} className={props.className} style={{ visibility: 'hidden' }}>\n      {props.children}\n    </div>\n  )\n}\n","import { createContext, useContext } from 'react'\n\nexport interface ReactNodeViewContextProps {\n  onDragStart: (event: DragEvent) => void,\n  nodeViewContentRef: (element: HTMLElement | null) => void,\n}\n\nexport const ReactNodeViewContext = createContext<Partial<ReactNodeViewContextProps>>({\n  onDragStart: undefined,\n})\n\nexport const useReactNodeView = () => useContext(ReactNodeViewContext)\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewContentProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewContent: React.FC<NodeViewContentProps> = props => {\n  const Tag = props.as || 'div'\n  const { nodeViewContentRef } = useReactNodeView()\n\n  return (\n    // @ts-ignore\n    <Tag\n      {...props}\n      ref={nodeViewContentRef}\n      data-node-view-content=\"\"\n      style={{\n        whiteSpace: 'pre-wrap',\n        ...props.style,\n      }}\n    />\n  )\n}\n","import React from 'react'\n\nimport { useReactNodeView } from './useReactNodeView.js'\n\nexport interface NodeViewWrapperProps {\n  [key: string]: any,\n  as?: React.ElementType,\n}\n\nexport const NodeViewWrapper: React.FC<NodeViewWrapperProps> = React.forwardRef((props, ref) => {\n  const { onDragStart } = useReactNodeView()\n  const Tag = props.as || 'div'\n\n  return (\n    // @ts-ignore\n    <Tag\n      {...props}\n      ref={ref}\n      data-node-view-wrapper=\"\"\n      onDragStart={onDragStart}\n      style={{\n        whiteSpace: 'normal',\n        ...props.style,\n      }}\n    />\n  )\n})\n","import type { Editor } from '@tiptap/core'\nimport type {\n  ComponentClass,\n  ForwardRefExoticComponent,\n  FunctionComponent,\n  PropsWithoutRef,\n  ReactNode,\n  RefAttributes,\n} from 'react'\nimport React, { version as reactVersion } from 'react'\nimport { flushSync } from 'react-dom'\n\nimport { EditorWithContentComponent } from './Editor.js'\n\n/**\n * Check if a component is a class component.\n * @param Component\n * @returns {boolean}\n */\nfunction isClassComponent(Component: any) {\n  return !!(\n    typeof Component === 'function'\n    && Component.prototype\n    && Component.prototype.isReactComponent\n  )\n}\n\n/**\n * Check if a component is a forward ref component.\n * @param Component\n * @returns {boolean}\n */\nfunction isForwardRefComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof\n    && (Component.$$typeof.toString() === 'Symbol(react.forward_ref)'\n      || Component.$$typeof.description === 'react.forward_ref')\n  )\n}\n\n/**\n * Check if a component is a memoized component.\n * @param Component\n * @returns {boolean}\n */\nfunction isMemoComponent(Component: any) {\n  return !!(\n    typeof Component === 'object'\n    && Component.$$typeof\n    && (Component.$$typeof.toString() === 'Symbol(react.memo)' || Component.$$typeof.description === 'react.memo')\n  )\n}\n\n/**\n * Check if a component can safely receive a ref prop.\n * This includes class components, forwardRef components, and memoized components\n * that wrap forwardRef or class components.\n * @param Component\n * @returns {boolean}\n */\nfunction canReceiveRef(Component: any) {\n  // Check if it's a class component\n  if (isClassComponent(Component)) {\n    return true\n  }\n\n  // Check if it's a forwardRef component\n  if (isForwardRefComponent(Component)) {\n    return true\n  }\n\n  // Check if it's a memoized component\n  if (isMemoComponent(Component)) {\n    // For memoized components, check the wrapped component\n    const wrappedComponent = Component.type\n\n    if (wrappedComponent) {\n      return isClassComponent(wrappedComponent) || isForwardRefComponent(wrappedComponent)\n    }\n  }\n\n  return false\n}\n\n/**\n * Check if we're running React 19+ by detecting if function components support ref props\n * @returns {boolean}\n */\nfunction isReact19Plus(): boolean {\n  // React 19 is detected by checking React version if available\n  // In practice, we'll use a more conservative approach and assume React 18 behavior\n  // unless we can definitively detect React 19\n  try {\n    // @ts-ignore\n    if (reactVersion) {\n      const majorVersion = parseInt(reactVersion.split('.')[0], 10)\n\n      return majorVersion >= 19\n    }\n  } catch {\n    // Fallback to React 18 behavior if we can't determine version\n  }\n  return false\n}\n\nexport interface ReactRendererOptions {\n  /**\n   * The editor instance.\n   * @type {Editor}\n   */\n  editor: Editor,\n\n  /**\n   * The props for the component.\n   * @type {Record<string, any>}\n   * @default {}\n   */\n  props?: Record<string, any>,\n\n  /**\n   * The tag name of the element.\n   * @type {string}\n   * @default 'div'\n   */\n  as?: string,\n\n  /**\n   * The class name of the element.\n   * @type {string}\n   * @default ''\n   * @example 'foo bar'\n   */\n  className?: string,\n}\n\ntype ComponentType<R, P> =\n  | ComponentClass<P>\n  | FunctionComponent<P>\n  | ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<R>>\n\n/**\n * The ReactRenderer class. It's responsible for rendering React components inside the editor.\n * @example\n * new ReactRenderer(MyComponent, {\n *   editor,\n *   props: {\n *     foo: 'bar',\n *   },\n *   as: 'span',\n * })\n*/\nexport class ReactRenderer<R = unknown, P extends Record<string, any> = object> {\n  id: string\n\n  editor: Editor\n\n  component: any\n\n  element: Element\n\n  props: P\n\n  reactElement: ReactNode\n\n  ref: R | null = null\n\n  /**\n   * Immediately creates element and renders the provided React component.\n   */\n  constructor(component: ComponentType<R, P>, {\n    editor,\n    props = {},\n    as = 'div',\n    className = '',\n  }: ReactRendererOptions) {\n    this.id = Math.floor(Math.random() * 0xFFFFFFFF).toString()\n    this.component = component\n    this.editor = editor as EditorWithContentComponent\n    this.props = props as P\n    this.element = document.createElement(as)\n    this.element.classList.add('react-renderer')\n\n    if (className) {\n      this.element.classList.add(...className.split(' '))\n    }\n\n    if (this.editor.isInitialized) {\n      // On first render, we need to flush the render synchronously\n      // Renders afterwards can be async, but this fixes a cursor positioning issue\n      flushSync(() => {\n        this.render()\n      })\n    } else {\n      this.render()\n    }\n  }\n\n  /**\n   * Render the React component.\n   */\n  render(): void {\n    const Component = this.component\n    const props = this.props\n    const editor = this.editor as EditorWithContentComponent\n\n    // Handle ref forwarding with React 18/19 compatibility\n    const isReact19 = isReact19Plus()\n    const componentCanReceiveRef = canReceiveRef(Component)\n\n    const elementProps = { ...props }\n\n    // Always remove ref if the component cannot receive it (unless React 19+)\n    if (elementProps.ref && !(isReact19 || componentCanReceiveRef)) {\n      delete elementProps.ref\n    }\n\n    // Only assign our own ref if allowed\n    if (!elementProps.ref && (isReact19 || componentCanReceiveRef)) {\n      // @ts-ignore - Setting ref prop for compatible components\n      elementProps.ref = (ref: R) => {\n        this.ref = ref\n      }\n    }\n\n    this.reactElement = <Component {...elementProps} />\n\n    editor?.contentComponent?.setRenderer(this.id, this)\n  }\n\n  /**\n   * Re-renders the React component with new props.\n   */\n  updateProps(props: Record<string, any> = {}): void {\n    this.props = {\n      ...this.props,\n      ...props,\n    }\n\n    this.render()\n  }\n\n  /**\n   * Destroy the React component.\n   */\n  destroy(): void {\n    const editor = this.editor as EditorWithContentComponent\n\n    editor?.contentComponent?.removeRenderer(this.id)\n  }\n\n  /**\n   * Update the attributes of the element that holds the React component.\n   */\n  updateAttributes(attributes: Record<string, string>): void {\n    Object.keys(attributes).forEach(key => {\n      this.element.setAttribute(key, attributes[key])\n    })\n  }\n}\n","import type {\n  DecorationWithType, Editor, NodeViewRenderer, NodeViewRendererOptions,\n} from '@tiptap/core'\nimport { getRenderedAttributes, NodeView } from '@tiptap/core'\nimport type { Node, Node as ProseMirrorNode } from '@tiptap/pm/model'\nimport type { Decoration, DecorationSource, NodeView as ProseMirrorNodeView } from '@tiptap/pm/view'\nimport type { ComponentType, NamedExoticComponent } from 'react'\nimport React, { createElement, createRef, memo } from 'react'\n\nimport { EditorWithContentComponent } from './Editor.js'\nimport { ReactRenderer } from './ReactRenderer.js'\nimport type { ReactNodeViewProps } from './types.js'\nimport type { ReactNodeViewContextProps } from './useReactNodeView.js'\nimport { ReactNodeViewContext } from './useReactNodeView.js'\n\nexport interface ReactNodeViewRendererOptions extends NodeViewRendererOptions {\n  /**\n   * This function is called when the node view is updated.\n   * It allows you to compare the old node with the new node and decide if the component should update.\n   */\n  update:\n    | ((props: {\n        oldNode: ProseMirrorNode;\n        oldDecorations: readonly Decoration[];\n        oldInnerDecorations: DecorationSource;\n        newNode: ProseMirrorNode;\n        newDecorations: readonly Decoration[];\n        innerDecorations: DecorationSource;\n        updateProps: () => void;\n      }) => boolean)\n    | null;\n  /**\n   * The tag name of the element wrapping the React component.\n   */\n  as?: string;\n  /**\n   * The class name of the element wrapping the React component.\n   */\n  className?: string;\n  /**\n   * Attributes that should be applied to the element wrapping the React component.\n   * If this is a function, it will be called each time the node view is updated.\n   * If this is an object, it will be applied once when the node view is mounted.\n   */\n  attrs?:\n    | Record<string, string>\n    | ((props: {\n        node: ProseMirrorNode;\n        HTMLAttributes: Record<string, any>;\n      }) => Record<string, string>);\n}\n\nexport class ReactNodeView<\n  T = HTMLElement,\n  Component extends ComponentType<ReactNodeViewProps<T>> = ComponentType<ReactNodeViewProps<T>>,\n  NodeEditor extends Editor = Editor,\n  Options extends ReactNodeViewRendererOptions = ReactNodeViewRendererOptions,\n> extends NodeView<Component, NodeEditor, Options> {\n  /**\n   * The renderer instance.\n   */\n  renderer!: ReactRenderer<unknown, ReactNodeViewProps<T>>\n\n  /**\n   * The element that holds the rich-text content of the node.\n   */\n  contentDOMElement!: HTMLElement | null\n\n  /**\n   * Setup the React component.\n   * Called on initialization.\n   */\n  mount() {\n    const props = {\n      editor: this.editor,\n      node: this.node,\n      decorations: this.decorations as DecorationWithType[],\n      innerDecorations: this.innerDecorations,\n      view: this.view,\n      selected: false,\n      extension: this.extension,\n      HTMLAttributes: this.HTMLAttributes,\n      getPos: () => this.getPos(),\n      updateAttributes: (attributes = {}) => this.updateAttributes(attributes),\n      deleteNode: () => this.deleteNode(),\n      ref: createRef<T>(),\n    } satisfies ReactNodeViewProps<T>\n\n    if (!(this.component as any).displayName) {\n      const capitalizeFirstChar = (string: string): string => {\n        return string.charAt(0).toUpperCase() + string.substring(1)\n      }\n\n      this.component.displayName = capitalizeFirstChar(this.extension.name)\n    }\n\n    const onDragStart = this.onDragStart.bind(this)\n    const nodeViewContentRef: ReactNodeViewContextProps['nodeViewContentRef'] = element => {\n      if (element && this.contentDOMElement && element.firstChild !== this.contentDOMElement) {\n        element.appendChild(this.contentDOMElement)\n      }\n    }\n    const context = { onDragStart, nodeViewContentRef }\n    const Component = this.component\n    // For performance reasons, we memoize the provider component\n    // And all of the things it requires are declared outside of the component, so it doesn't need to re-render\n    const ReactNodeViewProvider: NamedExoticComponent<ReactNodeViewProps<T>> = memo(componentProps => {\n      return (\n        <ReactNodeViewContext.Provider value={context}>\n          {createElement(Component, componentProps)}\n        </ReactNodeViewContext.Provider>\n      )\n    })\n\n    ReactNodeViewProvider.displayName = 'ReactNodeView'\n\n    if (this.node.isLeaf) {\n      this.contentDOMElement = null\n    } else if (this.options.contentDOMElementTag) {\n      this.contentDOMElement = document.createElement(this.options.contentDOMElementTag)\n    } else {\n      this.contentDOMElement = document.createElement(this.node.isInline ? 'span' : 'div')\n    }\n\n    if (this.contentDOMElement) {\n      this.contentDOMElement.dataset.nodeViewContentReact = ''\n      // For some reason the whiteSpace prop is not inherited properly in Chrome and Safari\n      // With this fix it seems to work fine\n      // See: https://github.com/ueberdosis/tiptap/issues/1197\n      this.contentDOMElement.style.whiteSpace = 'inherit'\n    }\n\n    let as = this.node.isInline ? 'span' : 'div'\n\n    if (this.options.as) {\n      as = this.options.as\n    }\n\n    const { className = '' } = this.options\n\n    this.handleSelectionUpdate = this.handleSelectionUpdate.bind(this)\n\n    this.renderer = new ReactRenderer(ReactNodeViewProvider, {\n      editor: this.editor,\n      props,\n      as,\n      className: `node-${this.node.type.name} ${className}`.trim(),\n    })\n\n    this.editor.on('selectionUpdate', this.handleSelectionUpdate)\n    this.updateElementAttributes()\n  }\n\n  /**\n   * Return the DOM element.\n   * This is the element that will be used to display the node view.\n   */\n  get dom() {\n    if (\n      this.renderer.element.firstElementChild\n      && !this.renderer.element.firstElementChild?.hasAttribute('data-node-view-wrapper')\n    ) {\n      throw Error('Please use the NodeViewWrapper component for your node view.')\n    }\n\n    return this.renderer.element as HTMLElement\n  }\n\n  /**\n   * Return the content DOM element.\n   * This is the element that will be used to display the rich-text content of the node.\n   */\n  get contentDOM() {\n    if (this.node.isLeaf) {\n      return null\n    }\n\n    return this.contentDOMElement\n  }\n\n  /**\n   * On editor selection update, check if the node is selected.\n   * If it is, call `selectNode`, otherwise call `deselectNode`.\n   */\n  handleSelectionUpdate() {\n    const { from, to } = this.editor.state.selection\n    const pos = this.getPos()\n\n    if (typeof pos !== 'number') {\n      return\n    }\n\n    if (from <= pos && to >= pos + this.node.nodeSize) {\n      if (this.renderer.props.selected) {\n        return\n      }\n\n      this.selectNode()\n    } else {\n      if (!this.renderer.props.selected) {\n        return\n      }\n\n      this.deselectNode()\n    }\n  }\n\n  /**\n   * On update, update the React component.\n   * To prevent unnecessary updates, the `update` option can be used.\n   */\n  update(\n    node: Node,\n    decorations: readonly Decoration[],\n    innerDecorations: DecorationSource,\n  ): boolean {\n    const rerenderComponent = (props?: Record<string, any>) => {\n      this.renderer.updateProps(props)\n      if (typeof this.options.attrs === 'function') {\n        this.updateElementAttributes()\n      }\n    }\n\n    if (node.type !== this.node.type) {\n      return false\n    }\n\n    if (typeof this.options.update === 'function') {\n      const oldNode = this.node\n      const oldDecorations = this.decorations\n      const oldInnerDecorations = this.innerDecorations\n\n      this.node = node\n      this.decorations = decorations\n      this.innerDecorations = innerDecorations\n\n      return this.options.update({\n        oldNode,\n        oldDecorations,\n        newNode: node,\n        newDecorations: decorations,\n        oldInnerDecorations,\n        innerDecorations,\n        updateProps: () => rerenderComponent({ node, decorations, innerDecorations }),\n      })\n    }\n\n    if (\n      node === this.node\n      && this.decorations === decorations\n      && this.innerDecorations === innerDecorations\n    ) {\n      return true\n    }\n\n    this.node = node\n    this.decorations = decorations\n    this.innerDecorations = innerDecorations\n\n    rerenderComponent({ node, decorations, innerDecorations })\n\n    return true\n  }\n\n  /**\n   * Select the node.\n   * Add the `selected` prop and the `ProseMirror-selectednode` class.\n   */\n  selectNode() {\n    this.renderer.updateProps({\n      selected: true,\n    })\n    this.renderer.element.classList.add('ProseMirror-selectednode')\n  }\n\n  /**\n   * Deselect the node.\n   * Remove the `selected` prop and the `ProseMirror-selectednode` class.\n   */\n  deselectNode() {\n    this.renderer.updateProps({\n      selected: false,\n    })\n    this.renderer.element.classList.remove('ProseMirror-selectednode')\n  }\n\n  /**\n   * Destroy the React component instance.\n   */\n  destroy() {\n    this.renderer.destroy()\n    this.editor.off('selectionUpdate', this.handleSelectionUpdate)\n    this.contentDOMElement = null\n  }\n\n  /**\n   * Update the attributes of the top-level element that holds the React component.\n   * Applying the attributes defined in the `attrs` option.\n   */\n  updateElementAttributes() {\n    if (this.options.attrs) {\n      let attrsObj: Record<string, string> = {}\n\n      if (typeof this.options.attrs === 'function') {\n        const extensionAttributes = this.editor.extensionManager.attributes\n        const HTMLAttributes = getRenderedAttributes(this.node, extensionAttributes)\n\n        attrsObj = this.options.attrs({ node: this.node, HTMLAttributes })\n      } else {\n        attrsObj = this.options.attrs\n      }\n\n      this.renderer.updateAttributes(attrsObj)\n    }\n  }\n}\n\n/**\n * Create a React node view renderer.\n */\nexport function ReactNodeViewRenderer<T = HTMLElement>(\n  component: ComponentType<ReactNodeViewProps<T>>,\n  options?: Partial<ReactNodeViewRendererOptions>,\n): NodeViewRenderer {\n  return props => {\n    // try to get the parent component\n    // this is important for vue devtools to show the component hierarchy correctly\n    // maybe it’s `undefined` because <editor-content> isn’t rendered yet\n    if (!(props.editor as EditorWithContentComponent).contentComponent) {\n      return {} as unknown as ProseMirrorNodeView\n    }\n\n    return new ReactNodeView<T>(component, props, options)\n  }\n}\n"],"names":["require$$0","React","shimModule","require$$1","useSyncExternalStore","withSelectorModule","useSyncExternalStoreWithSelector","reactVersion"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"debugId":null}},
    {"offset": {"line": 7537, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-blockquote/src/blockquote.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nexport interface BlockquoteOptions {\n  /**\n   * HTML attributes to add to the blockquote element\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    blockQuote: {\n      /**\n       * Set a blockquote node\n       */\n      setBlockquote: () => ReturnType,\n      /**\n       * Toggle a blockquote node\n       */\n      toggleBlockquote: () => ReturnType,\n      /**\n       * Unset a blockquote node\n       */\n      unsetBlockquote: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a blockquote to a `>` as input.\n */\nexport const inputRegex = /^\\s*>\\s$/\n\n/**\n * This extension allows you to create blockquotes.\n * @see https://tiptap.dev/api/nodes/blockquote\n */\nexport const Blockquote = Node.create<BlockquoteOptions>({\n\n  name: 'blockquote',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'block+',\n\n  group: 'block',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      { tag: 'blockquote' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['blockquote', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBlockquote: () => ({ commands }) => {\n        return commands.wrapIn(this.name)\n      },\n      toggleBlockquote: () => ({ commands }) => {\n        return commands.toggleWrap(this.name)\n      },\n      unsetBlockquote: () => ({ commands }) => {\n        return commands.lift(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-b': () => this.editor.commands.toggleBlockquote(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;AA8BA;;CAEG,GACI,MAAM,UAAU,GAAG;AAE1B;;;CAGG,GACU,MAAA,UAAU,qJAAG,OAAI,CAAC,MAAM,CAAoB;IAEvD,IAAI,EAAE,YAAY;IAElB,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,OAAO,EAAE,QAAQ;IAEjB,KAAK,EAAE,OAAO;IAEd,QAAQ,EAAE,IAAI;IAEd,SAAS,GAAA;QACP,OAAO;YACL;gBAAE,GAAG,EAAE,YAAY;YAAA,CAAE;SACtB;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,YAAY;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KACvF;IAED,WAAW,GAAA;QACT,OAAO;YACL,aAAa,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACpC,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;iBAClC;YACD,gBAAgB,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACvC,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBACtC;YACD,eAAe,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACtC,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;iBAChC;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,aAAa,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE;SAC7D;KACF;IAED,aAAa,GAAA;QACX,OAAO;YACL,0KAAA,AAAiB,EAAC;gBAChB,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7609, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-bold/src/bold.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface BoldOptions {\n  /**\n   * HTML attributes to add to the bold element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bold: {\n      /**\n       * Set a bold mark\n       */\n      setBold: () => ReturnType,\n      /**\n       * Toggle a bold mark\n       */\n      toggleBold: () => ReturnType,\n      /**\n       * Unset a bold mark\n       */\n      unsetBold: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches bold text via `**` as input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))$/\n\n/**\n * Matches bold text via `**` while pasting.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*\\*(?!\\s+\\*\\*)((?:[^*]+))\\*\\*(?!\\s+\\*\\*))/g\n\n/**\n * Matches bold text via `__` as input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))$/\n\n/**\n * Matches bold text via `__` while pasting.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(__(?!\\s+__)((?:[^_]+))__(?!\\s+__))/g\n\n/**\n * This extension allows you to mark text as bold.\n * @see https://tiptap.dev/api/marks/bold\n */\nexport const Bold = Mark.create<BoldOptions>({\n  name: 'bold',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'strong',\n      },\n      {\n        tag: 'b',\n        getAttrs: node => (node as HTMLElement).style.fontWeight !== 'normal' && null,\n      },\n      {\n        style: 'font-weight=400',\n        clearMark: mark => mark.type.name === this.name,\n      },\n      {\n        style: 'font-weight',\n        getAttrs: value => /^(bold(er)?|[5-9]\\d{2,})$/.test(value as string) && null,\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['strong', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setBold: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleBold: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetBold: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-b': () => this.editor.commands.toggleBold(),\n      'Mod-B': () => this.editor.commands.toggleBold(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;AAmCA;;CAEG,GACI,MAAM,cAAc,GAAG;AAE9B;;CAEG,GACI,MAAM,cAAc,GAAG;AAE9B;;CAEG,GACI,MAAM,oBAAoB,GAAG;AAEpC;;CAEG,GACI,MAAM,oBAAoB,GAAG;AAEpC;;;CAGG,GACU,MAAA,IAAI,oJAAG,QAAI,CAAC,MAAM,CAAc;IAC3C,IAAI,EAAE,MAAM;IAEZ,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,SAAS,GAAA;QACP,OAAO;YACL;gBACE,GAAG,EAAE,QAAQ;YACd,CAAA;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,QAAQ,GAAE,IAAI,GAAK,IAAoB,CAAC,KAAK,CAAC,UAAU,KAAK,QAAQ,IAAI,IAAI;YAC9E,CAAA;YACD;gBACE,KAAK,EAAE,iBAAiB;gBACxB,SAAS,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;YAChD,CAAA;YACD;gBACE,KAAK,EAAE,aAAa;gBACpB,QAAQ,GAAE,KAAK,GAAI,2BAA2B,CAAC,IAAI,CAAC,KAAe,CAAC,IAAI,IAAI;YAC7E,CAAA;SACF;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,QAAQ;gBAAE,oKAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KACnF;IAED,WAAW,GAAA;QACT,OAAO;YACL,OAAO,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAC9B,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;iBACnC;YACD,UAAU,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACjC,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBACtC;YACD,SAAS,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAChC,OAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;iBACrC;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE;YAChD,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE;SACjD;KACF;IAED,aAAa,GAAA;QACX,OAAO;kKACL,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;aACF,qKAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;IAED,aAAa,GAAA;QACX,OAAO;kKACL,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;kKACF,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7719, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-bullet-list/src/bullet-list.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nconst ListItemName = 'listItem'\nconst TextStyleName = 'textStyle'\n\nexport interface BulletListOptions {\n  /**\n   * The node name for the list items\n   * @default 'listItem'\n   * @example 'paragraph'\n   */\n  itemTypeName: string,\n\n  /**\n   * HTML attributes to add to the bullet list element\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * Keep the marks when splitting the list\n   * @default false\n   * @example true\n   */\n  keepMarks: boolean,\n\n  /**\n   * Keep the attributes when splitting the list\n   * @default false\n   * @example true\n   */\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    bulletList: {\n      /**\n       * Toggle a bullet list\n       */\n      toggleBulletList: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a bullet list to a dash or asterisk.\n */\nexport const inputRegex = /^\\s*([-+*])\\s$/\n\n/**\n * This extension allows you to create bullet lists.\n * This requires the ListItem extension\n * @see https://tiptap.dev/api/nodes/bullet-list\n * @see https://tiptap.dev/api/nodes/list-item.\n */\nexport const BulletList = Node.create<BulletListOptions>({\n  name: 'bulletList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  parseHTML() {\n    return [\n      { tag: 'ul' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['ul', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleBulletList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-8': () => this.editor.commands.toggleBulletList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: () => { return this.editor.getAttributes(TextStyleName) },\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;AAEA,MAAM,YAAY,GAAG,UAAU;AAC/B,MAAM,aAAa,GAAG,WAAW;AA2CjC;;CAEG,GACI,MAAM,UAAU,GAAG;AAE1B;;;;;CAKG,GACU,MAAA,UAAU,qJAAG,OAAI,CAAC,MAAM,CAAoB;IACvD,IAAI,EAAE,YAAY;IAElB,UAAU,GAAA;QACR,OAAO;YACL,YAAY,EAAE,UAAU;YACxB,cAAc,EAAE,CAAA,CAAE;YAClB,SAAS,EAAE,KAAK;YAChB,cAAc,EAAE,KAAK;SACtB;KACF;IAED,KAAK,EAAE,YAAY;IAEnB,OAAO,GAAA;QACL,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAA,CAAA,CAAG;KACvC;IAED,SAAS,GAAA;QACP,OAAO;YACL;gBAAE,GAAG,EAAE,IAAI;YAAA,CAAE;SACd;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,IAAI;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KAC/E;IAED,WAAW,GAAA;QACT,OAAO;YACL,gBAAgB,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAI;oBAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;wBAC/B,OAAO,KAAK,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE;;oBAExK,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;iBACzF;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,aAAa,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,gBAAgB,EAAE;SAC7D;KACF;IAED,aAAa,GAAA;QACX,IAAI,SAAS,yJAAG,oBAAA,AAAiB,EAAC;YAChC,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,IAAI,CAAC,IAAI;QAChB,CAAA,CAAC;QAEF,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;YACzD,SAAS,yJAAG,oBAAA,AAAiB,EAAC;gBAC5B,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;gBACjC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;gBAC3C,aAAa,EAAE,MAAK;oBAAG,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAA;gBAAA,CAAE;gBACxE,MAAM,EAAE,IAAI,CAAC,MAAM;YACpB,CAAA,CAAC;;QAEJ,OAAO;YACL,SAAS;SACV;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7809, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-code/src/code.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface CodeOptions {\n  /**\n   * The HTML attributes applied to the code element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    code: {\n      /**\n       * Set a code mark\n       */\n      setCode: () => ReturnType,\n      /**\n       * Toggle inline code\n       */\n      toggleCode: () => ReturnType,\n      /**\n       * Unset a code mark\n       */\n      unsetCode: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Regular expressions to match inline code blocks enclosed in backticks.\n *  It matches:\n *     - An opening backtick, followed by\n *     - Any text that doesn't include a backtick (captured for marking), followed by\n *     - A closing backtick.\n *  This ensures that any text between backticks is formatted as code,\n *  regardless of the surrounding characters (exception being another backtick).\n */\nexport const inputRegex = /(^|[^`])`([^`]+)`(?!`)/\n\n/**\n * Matches inline code while pasting.\n */\nexport const pasteRegex = /(^|[^`])`([^`]+)`(?!`)/g\n\n/**\n * This extension allows you to mark text as inline code.\n * @see https://tiptap.dev/api/marks/code\n */\nexport const Code = Mark.create<CodeOptions>({\n  name: 'code',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  excludes: '_',\n\n  code: true,\n\n  exitable: true,\n\n  parseHTML() {\n    return [\n      { tag: 'code' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['code', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setCode: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleCode: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetCode: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-e': () => this.editor.commands.toggleCode(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;AAmCA;;;;;;;;CAQG,GACI,MAAM,UAAU,GAAG;AAE1B;;CAEG,GACI,MAAM,UAAU,GAAG;AAE1B;;;CAGG,GACU,MAAA,IAAI,qJAAG,OAAI,CAAC,MAAM,CAAc;IAC3C,IAAI,EAAE,MAAM;IAEZ,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,QAAQ,EAAE,GAAG;IAEb,IAAI,EAAE,IAAI;IAEV,QAAQ,EAAE,IAAI;IAEd,SAAS,GAAA;QACP,OAAO;YACL;gBAAE,GAAG,EAAE,MAAM;YAAA,CAAE;SAChB;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,MAAM;YAAE,wKAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KACjF;IAED,WAAW,GAAA;QACT,OAAO;YACL,OAAO,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAC9B,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;iBACnC;YACD,UAAU,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACjC,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBACtC;YACD,SAAS,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAChC,OAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;iBACrC;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE;SACjD;KACF;IAED,aAAa,GAAA;QACX,OAAO;aACL,qKAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;IAED,aAAa,GAAA;QACX,OAAO;kKACL,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 7899, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-code-block/src/code-block.ts"],"sourcesContent":["import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\nimport {\n  Plugin,\n  PluginKey,\n  Selection,\n  TextSelection,\n} from '@tiptap/pm/state'\n\nexport interface CodeBlockOptions {\n  /**\n   * Adds a prefix to language classes that are applied to code tags.\n   * @default 'language-'\n   */\n  languageClassPrefix: string\n  /**\n   * Define whether the node should be exited on triple enter.\n   * @default true\n   */\n  exitOnTripleEnter: boolean\n  /**\n   * Define whether the node should be exited on arrow down if there is no node after it.\n   * @default true\n   */\n  exitOnArrowDown: boolean\n  /**\n   * The default language.\n   * @default null\n   * @example 'js'\n   */\n  defaultLanguage: string | null | undefined\n  /**\n   * Custom HTML attributes that should be added to the rendered HTML tag.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    codeBlock: {\n      /**\n       * Set a code block\n       * @param attributes Code block attributes\n       * @example editor.commands.setCodeBlock({ language: 'javascript' })\n       */\n      setCodeBlock: (attributes?: { language: string }) => ReturnType\n      /**\n       * Toggle a code block\n       * @param attributes Code block attributes\n       * @example editor.commands.toggleCodeBlock({ language: 'javascript' })\n       */\n      toggleCodeBlock: (attributes?: { language: string }) => ReturnType\n    }\n  }\n}\n\n/**\n * Matches a code block with backticks.\n */\nexport const backtickInputRegex = /^```([a-z]+)?[\\s\\n]$/\n\n/**\n * Matches a code block with tildes.\n */\nexport const tildeInputRegex = /^~~~([a-z]+)?[\\s\\n]$/\n\n/**\n * This extension allows you to create code blocks.\n * @see https://tiptap.dev/api/nodes/code-block\n */\nexport const CodeBlock = Node.create<CodeBlockOptions>({\n  name: 'codeBlock',\n\n  addOptions() {\n    return {\n      languageClassPrefix: 'language-',\n      exitOnTripleEnter: true,\n      exitOnArrowDown: true,\n      defaultLanguage: null,\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'text*',\n\n  marks: '',\n\n  group: 'block',\n\n  code: true,\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      language: {\n        default: this.options.defaultLanguage,\n        parseHTML: element => {\n          const { languageClassPrefix } = this.options\n          const classNames = [...(element.firstElementChild?.classList || [])]\n          const languages = classNames\n            .filter(className => className.startsWith(languageClassPrefix))\n            .map(className => className.replace(languageClassPrefix, ''))\n          const language = languages[0]\n\n          if (!language) {\n            return null\n          }\n\n          return language\n        },\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'pre',\n        preserveWhitespace: 'full',\n      },\n    ]\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    return [\n      'pre',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes),\n      [\n        'code',\n        {\n          class: node.attrs.language\n            ? this.options.languageClassPrefix + node.attrs.language\n            : null,\n        },\n        0,\n      ],\n    ]\n  },\n\n  addCommands() {\n    return {\n      setCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.setNode(this.name, attributes)\n        },\n      toggleCodeBlock:\n        attributes => ({ commands }) => {\n          return commands.toggleNode(this.name, 'paragraph', attributes)\n        },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-c': () => this.editor.commands.toggleCodeBlock(),\n\n      // remove code block when at start of document or code block is empty\n      Backspace: () => {\n        const { empty, $anchor } = this.editor.state.selection\n        const isAtStart = $anchor.pos === 1\n\n        if (!empty || $anchor.parent.type.name !== this.name) {\n          return false\n        }\n\n        if (isAtStart || !$anchor.parent.textContent.length) {\n          return this.editor.commands.clearNodes()\n        }\n\n        return false\n      },\n\n      // exit node on triple enter\n      Enter: ({ editor }) => {\n        if (!this.options.exitOnTripleEnter) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n        const endsWithDoubleNewline = $from.parent.textContent.endsWith('\\n\\n')\n\n        if (!isAtEnd || !endsWithDoubleNewline) {\n          return false\n        }\n\n        return editor\n          .chain()\n          .command(({ tr }) => {\n            tr.delete($from.pos - 2, $from.pos)\n\n            return true\n          })\n          .exitCode()\n          .run()\n      },\n\n      // exit node on arrow down\n      ArrowDown: ({ editor }) => {\n        if (!this.options.exitOnArrowDown) {\n          return false\n        }\n\n        const { state } = editor\n        const { selection, doc } = state\n        const { $from, empty } = selection\n\n        if (!empty || $from.parent.type !== this.type) {\n          return false\n        }\n\n        const isAtEnd = $from.parentOffset === $from.parent.nodeSize - 2\n\n        if (!isAtEnd) {\n          return false\n        }\n\n        const after = $from.after()\n\n        if (after === undefined) {\n          return false\n        }\n\n        const nodeAfter = doc.nodeAt(after)\n\n        if (nodeAfter) {\n          return editor.commands.command(({ tr }) => {\n            tr.setSelection(Selection.near(doc.resolve(after)))\n            return true\n          })\n        }\n\n        return editor.commands.exitCode()\n      },\n    }\n  },\n\n  addInputRules() {\n    return [\n      textblockTypeInputRule({\n        find: backtickInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n      textblockTypeInputRule({\n        find: tildeInputRegex,\n        type: this.type,\n        getAttributes: match => ({\n          language: match[1],\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      // this plugin creates a code block for pasted content from VS Code\n      // we can also detect the copied code language\n      new Plugin({\n        key: new PluginKey('codeBlockVSCodeHandler'),\n        props: {\n          handlePaste: (view, event) => {\n            if (!event.clipboardData) {\n              return false\n            }\n\n            // don’t create a new code block within code blocks\n            if (this.editor.isActive(this.type.name)) {\n              return false\n            }\n\n            const text = event.clipboardData.getData('text/plain')\n            const vscode = event.clipboardData.getData('vscode-editor-data')\n            const vscodeData = vscode ? JSON.parse(vscode) : undefined\n            const language = vscodeData?.mode\n\n            if (!text || !language) {\n              return false\n            }\n\n            const { tr, schema } = view.state\n\n            // prepare a text node\n            // strip carriage return chars from text pasted as code\n            // see: https://github.com/ProseMirror/prosemirror-view/commit/a50a6bcceb4ce52ac8fcc6162488d8875613aacd\n            const textNode = schema.text(text.replace(/\\r\\n?/g, '\\n'))\n\n            // create a code block with the text node\n            // replace selection with the code block\n            tr.replaceSelectionWith(this.type.create({ language }, textNode))\n\n            if (tr.selection.$from.parent.type !== this.type) {\n              // put cursor inside the newly created code block\n              tr.setSelection(TextSelection.near(tr.doc.resolve(Math.max(0, tr.selection.from - 2))))\n            }\n\n            // store meta information\n            // this is useful for other plugins that depends on the paste event\n            // like the paste rule plugin\n            tr.setMeta('paste', true)\n\n            view.dispatch(tr)\n\n            return true\n          },\n        },\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8130, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-document/src/document.ts"],"sourcesContent":["import { Node } from '@tiptap/core'\n\n/**\n * The default document node which represents the top level node of the editor.\n * @see https://tiptap.dev/api/nodes/document\n */\nexport const Document = Node.create({\n  name: 'doc',\n  topNode: true,\n  content: 'block+',\n})\n"],"names":[],"mappings":";;;;;;AAEA;;;CAGG,GACU,MAAA,QAAQ,qJAAG,OAAI,CAAC,MAAM,CAAC;IAClC,IAAI,EAAE,KAAK;IACX,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,QAAQ;AAClB,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8152, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-dropcursor/src/dropcursor.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { dropCursor } from '@tiptap/pm/dropcursor'\n\nexport interface DropcursorOptions {\n  /**\n   * The color of the drop cursor\n   * @default 'currentColor'\n   * @example 'red'\n   */\n  color: string | undefined,\n\n  /**\n   * The width of the drop cursor\n   * @default 1\n   * @example 2\n  */\n  width: number | undefined,\n\n  /**\n   * The class of the drop cursor\n   * @default undefined\n   * @example 'drop-cursor'\n  */\n  class: string | undefined,\n}\n\n/**\n * This extension allows you to add a drop cursor to your editor.\n * A drop cursor is a line that appears when you drag and drop content\n * inbetween nodes.\n * @see https://tiptap.dev/api/extensions/dropcursor\n */\nexport const Dropcursor = Extension.create<DropcursorOptions>({\n  name: 'dropCursor',\n\n  addOptions() {\n    return {\n      color: 'currentColor',\n      width: 1,\n      class: undefined,\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      dropCursor(this.options),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;;;AA0BA;;;;;CAKG,GACU,MAAA,UAAU,qJAAG,YAAS,CAAC,MAAM,CAAoB;IAC5D,IAAI,EAAE,YAAY;IAElB,UAAU,GAAA;QACR,OAAO;YACL,KAAK,EAAE,cAAc;YACrB,KAAK,EAAE,CAAC;YACR,KAAK,EAAE,SAAS;SACjB;KACF;IAED,qBAAqB,GAAA;QACnB,OAAO;YACL,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;SACzB;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8192, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-gapcursor/src/gapcursor.ts"],"sourcesContent":["import {\n  callOrReturn,\n  Extension,\n  getExtensionField,\n  ParentConfig,\n} from '@tiptap/core'\nimport { gapCursor } from '@tiptap/pm/gapcursor'\n\ndeclare module '@tiptap/core' {\n  interface NodeConfig<Options, Storage> {\n    /**\n     * A function to determine whether the gap cursor is allowed at the current position. Must return `true` or `false`.\n     * @default null\n     */\n    allowGapCursor?:\n      | boolean\n      | null\n      | ((this: {\n        name: string,\n        options: Options,\n        storage: Storage,\n        parent: ParentConfig<NodeConfig<Options>>['allowGapCursor'],\n      }) => boolean | null),\n  }\n}\n\n/**\n * This extension allows you to add a gap cursor to your editor.\n * A gap cursor is a cursor that appears when you click on a place\n * where no content is present, for example inbetween nodes.\n * @see https://tiptap.dev/api/extensions/gapcursor\n */\nexport const Gapcursor = Extension.create({\n  name: 'gapCursor',\n\n  addProseMirrorPlugins() {\n    return [\n      gapCursor(),\n    ]\n  },\n\n  extendNodeSchema(extension) {\n    const context = {\n      name: extension.name,\n      options: extension.options,\n      storage: extension.storage,\n    }\n\n    return {\n      allowGapCursor: callOrReturn(getExtensionField(extension, 'allowGapCursor', context)) ?? null,\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;;;AA0BA;;;;;CAKG,GACU,MAAA,SAAS,qJAAG,YAAS,CAAC,MAAM,CAAC;IACxC,IAAI,EAAE,WAAW;IAEjB,qBAAqB,GAAA;QACnB,OAAO;YACL,SAAS,EAAE;SACZ;KACF;IAED,gBAAgB,EAAC,SAAS,EAAA;;QACxB,MAAM,OAAO,GAAG;YACd,IAAI,EAAE,SAAS,CAAC,IAAI;YACpB,OAAO,EAAE,SAAS,CAAC,OAAO;YAC1B,OAAO,EAAE,SAAS,CAAC,OAAO;SAC3B;QAED,OAAO;YACL,cAAc,EAAE,CAAA,EAAA,yJAAA,eAAA,AAAY,EAAC,0KAAA,AAAiB,EAAC,SAAS,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC,MAAA,QAAA,OAAA,KAAA,IAAA,KAAI,IAAI;SAC9F;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8236, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-hard-break/src/hard-break.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface HardBreakOptions {\n  /**\n   * Controls if marks should be kept after being split by a hard break.\n   * @default true\n   * @example false\n   */\n  keepMarks: boolean,\n\n  /**\n   * HTML attributes to add to the hard break element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    hardBreak: {\n      /**\n       * Add a hard break\n       * @example editor.commands.setHardBreak()\n       */\n      setHardBreak: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to insert hard breaks.\n * @see https://www.tiptap.dev/api/nodes/hard-break\n */\nexport const HardBreak = Node.create<HardBreakOptions>({\n  name: 'hardBreak',\n\n  addOptions() {\n    return {\n      keepMarks: true,\n      HTMLAttributes: {},\n    }\n  },\n\n  inline: true,\n\n  group: 'inline',\n\n  selectable: false,\n\n  linebreakReplacement: true,\n\n  parseHTML() {\n    return [\n      { tag: 'br' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['br', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  renderText() {\n    return '\\n'\n  },\n\n  addCommands() {\n    return {\n      setHardBreak: () => ({\n        commands,\n        chain,\n        state,\n        editor,\n      }) => {\n        return commands.first([\n          () => commands.exitCode(),\n          () => commands.command(() => {\n            const { selection, storedMarks } = state\n\n            if (selection.$from.parent.type.spec.isolating) {\n              return false\n            }\n\n            const { keepMarks } = this.options\n            const { splittableMarks } = editor.extensionManager\n            const marks = storedMarks\n              || (selection.$to.parentOffset && selection.$from.marks())\n\n            return chain()\n              .insertContent({ type: this.name })\n              .command(({ tr, dispatch }) => {\n                if (dispatch && marks && keepMarks) {\n                  const filteredMarks = marks\n                    .filter(mark => splittableMarks.includes(mark.type.name))\n\n                  tr.ensureMarks(filteredMarks)\n                }\n\n                return true\n              })\n              .run()\n          }),\n        ])\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Enter': () => this.editor.commands.setHardBreak(),\n      'Shift-Enter': () => this.editor.commands.setHardBreak(),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;AA8BA;;;CAGG,GACU,MAAA,SAAS,qJAAG,OAAI,CAAC,MAAM,CAAmB;IACrD,IAAI,EAAE,WAAW;IAEjB,UAAU,GAAA;QACR,OAAO;YACL,SAAS,EAAE,IAAI;YACf,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,MAAM,EAAE,IAAI;IAEZ,KAAK,EAAE,QAAQ;IAEf,UAAU,EAAE,KAAK;IAEjB,oBAAoB,EAAE,IAAI;IAE1B,SAAS,GAAA;QACP,OAAO;YACL;gBAAE,GAAG,EAAE,IAAI;YAAA,CAAE;SACd;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,IAAI;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;SAAC;KAC5E;IAED,UAAU,GAAA;QACR,OAAO,IAAI;KACZ;IAED,WAAW,GAAA;QACT,OAAO;YACL,YAAY,EAAE,IAAM,CAAC,EACnB,QAAQ,EACR,KAAK,EACL,KAAK,EACL,MAAM,EACP,KAAI;oBACH,OAAO,QAAQ,CAAC,KAAK,CAAC;wBACpB,IAAM,QAAQ,CAAC,QAAQ,EAAE;wBACzB,IAAM,QAAQ,CAAC,OAAO,CAAC,MAAK;gCAC1B,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,KAAK;gCAExC,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oCAC9C,OAAO,KAAK;;gCAGd,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO;gCAClC,MAAM,EAAE,eAAe,EAAE,GAAG,MAAM,CAAC,gBAAgB;gCACnD,MAAM,KAAK,GAAG,eACR,SAAS,CAAC,GAAG,CAAC,YAAY,IAAI,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;gCAE5D,OAAO,KAAK,GACT,aAAa,CAAC;oCAAE,IAAI,EAAE,IAAI,CAAC,IAAI;gCAAA,CAAE,EACjC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,KAAI;oCAC5B,IAAI,QAAQ,IAAI,KAAK,IAAI,SAAS,EAAE;wCAClC,MAAM,aAAa,GAAG,MACnB,MAAM,EAAC,IAAI,GAAI,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wCAE3D,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC;;oCAG/B,OAAO,IAAI;gCACb,CAAC,EACA,GAAG,EAAE;4BACV,CAAC,CAAC;qBACH,CAAC;iBACH;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,WAAW,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;YACtD,aAAa,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;SACzD;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8315, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-heading/src/heading.ts"],"sourcesContent":["import { mergeAttributes, Node, textblockTypeInputRule } from '@tiptap/core'\n\n/**\n * The heading level options.\n */\nexport type Level = 1 | 2 | 3 | 4 | 5 | 6\n\nexport interface HeadingOptions {\n  /**\n   * The available heading levels.\n   * @default [1, 2, 3, 4, 5, 6]\n   * @example [1, 2, 3]\n   */\n  levels: Level[],\n\n  /**\n   * The HTML attributes for a heading node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    heading: {\n      /**\n       * Set a heading node\n       * @param attributes The heading attributes\n       * @example editor.commands.setHeading({ level: 1 })\n       */\n      setHeading: (attributes: { level: Level }) => ReturnType,\n      /**\n       * Toggle a heading node\n       * @param attributes The heading attributes\n       * @example editor.commands.toggleHeading({ level: 1 })\n       */\n      toggleHeading: (attributes: { level: Level }) => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create headings.\n * @see https://www.tiptap.dev/api/nodes/heading\n */\nexport const Heading = Node.create<HeadingOptions>({\n  name: 'heading',\n\n  addOptions() {\n    return {\n      levels: [1, 2, 3, 4, 5, 6],\n      HTMLAttributes: {},\n    }\n  },\n\n  content: 'inline*',\n\n  group: 'block',\n\n  defining: true,\n\n  addAttributes() {\n    return {\n      level: {\n        default: 1,\n        rendered: false,\n      },\n    }\n  },\n\n  parseHTML() {\n    return this.options.levels\n      .map((level: Level) => ({\n        tag: `h${level}`,\n        attrs: { level },\n      }))\n  },\n\n  renderHTML({ node, HTMLAttributes }) {\n    const hasLevel = this.options.levels.includes(node.attrs.level)\n    const level = hasLevel\n      ? node.attrs.level\n      : this.options.levels[0]\n\n    return [`h${level}`, mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.setNode(this.name, attributes)\n      },\n      toggleHeading: attributes => ({ commands }) => {\n        if (!this.options.levels.includes(attributes.level)) {\n          return false\n        }\n\n        return commands.toggleNode(this.name, 'paragraph', attributes)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return this.options.levels.reduce((items, level) => ({\n      ...items,\n      ...{\n        [`Mod-Alt-${level}`]: () => this.editor.commands.toggleHeading({ level }),\n      },\n    }), {})\n  },\n\n  addInputRules() {\n    return this.options.levels.map(level => {\n      return textblockTypeInputRule({\n        find: new RegExp(`^(#{${Math.min(...this.options.levels)},${level}})\\\\s$`),\n        type: this.type,\n        getAttributes: {\n          level,\n        },\n      })\n    })\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8413, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-history/src/history.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { history, redo, undo } from '@tiptap/pm/history'\n\nexport interface HistoryOptions {\n  /**\n   * The amount of history events that are collected before the oldest events are discarded.\n   * @default 100\n   * @example 50\n   */\n  depth: number,\n\n  /**\n   * The delay (in milliseconds) between changes after which a new group should be started.\n   * @default 500\n   * @example 1000\n   */\n  newGroupDelay: number,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    history: {\n      /**\n       * Undo recent changes\n       * @example editor.commands.undo()\n       */\n      undo: () => ReturnType,\n      /**\n       * Reapply reverted changes\n       * @example editor.commands.redo()\n       */\n      redo: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to undo and redo recent changes.\n * @see https://www.tiptap.dev/api/extensions/history\n *\n * **Important**: If the `@tiptap/extension-collaboration` package is used, make sure to remove\n * the `history` extension, as it is not compatible with the `collaboration` extension.\n *\n * `@tiptap/extension-collaboration` uses its own history implementation.\n */\nexport const History = Extension.create<HistoryOptions>({\n  name: 'history',\n\n  addOptions() {\n    return {\n      depth: 100,\n      newGroupDelay: 500,\n    }\n  },\n\n  addCommands() {\n    return {\n      undo: () => ({ state, dispatch }) => {\n        return undo(state, dispatch)\n      },\n      redo: () => ({ state, dispatch }) => {\n        return redo(state, dispatch)\n      },\n    }\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      history(this.options),\n    ]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-z': () => this.editor.commands.undo(),\n      'Shift-Mod-z': () => this.editor.commands.redo(),\n      'Mod-y': () => this.editor.commands.redo(),\n\n      // Russian keyboard layouts\n      'Mod-я': () => this.editor.commands.undo(),\n      'Shift-Mod-я': () => this.editor.commands.redo(),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;;;AAoCA;;;;;;;;CAQG,GACU,MAAA,OAAO,qJAAG,YAAS,CAAC,MAAM,CAAiB;IACtD,IAAI,EAAE,SAAS;IAEf,UAAU,GAAA;QACR,OAAO;YACL,KAAK,EAAE,GAAG;YACV,aAAa,EAAE,GAAG;SACnB;KACF;IAED,WAAW,GAAA;QACT,OAAO;YACL,IAAI,EAAE,IAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAI;oBAClC,OAAO,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;iBAC7B;YACD,IAAI,EAAE,IAAM,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAI;oBAClC,OAAO,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC;iBAC7B;SACF;KACF;IAED,qBAAqB,GAAA;QACnB,OAAO;YACL,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;SACtB;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;YAC1C,aAAa,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;YAChD,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;;YAG1C,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;YAC1C,aAAa,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;SACjD;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8475, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-horizontal-rule/src/horizontal-rule.ts"],"sourcesContent":["import {\n  canInsertNode, isNodeSelection, mergeAttributes, Node, nodeInputRule,\n} from '@tiptap/core'\nimport { NodeSelection, TextSelection } from '@tiptap/pm/state'\n\nexport interface HorizontalRuleOptions {\n  /**\n   * The HTML attributes for a horizontal rule node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    horizontalRule: {\n      /**\n       * Add a horizontal rule\n       * @example editor.commands.setHorizontalRule()\n       */\n      setHorizontalRule: () => ReturnType\n    }\n  }\n}\n\n/**\n * This extension allows you to insert horizontal rules.\n * @see https://www.tiptap.dev/api/nodes/horizontal-rule\n */\nexport const HorizontalRule = Node.create<HorizontalRuleOptions>({\n  name: 'horizontalRule',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  parseHTML() {\n    return [{ tag: 'hr' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['hr', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)]\n  },\n\n  addCommands() {\n    return {\n      setHorizontalRule:\n        () => ({ chain, state }) => {\n          // Check if we can insert the node at the current selection\n          if (!canInsertNode(state, state.schema.nodes[this.name])) {\n            return false\n          }\n\n          const { selection } = state\n          const { $from: $originFrom, $to: $originTo } = selection\n\n          const currentChain = chain()\n\n          if ($originFrom.parentOffset === 0) {\n            currentChain.insertContentAt(\n              {\n                from: Math.max($originFrom.pos - 1, 0),\n                to: $originTo.pos,\n              },\n              {\n                type: this.name,\n              },\n            )\n          } else if (isNodeSelection(selection)) {\n            currentChain.insertContentAt($originTo.pos, {\n              type: this.name,\n            })\n          } else {\n            currentChain.insertContent({ type: this.name })\n          }\n\n          return (\n            currentChain\n              // set cursor after horizontal rule\n              .command(({ tr, dispatch }) => {\n                if (dispatch) {\n                  const { $to } = tr.selection\n                  const posAfter = $to.end()\n\n                  if ($to.nodeAfter) {\n                    if ($to.nodeAfter.isTextblock) {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos + 1))\n                    } else if ($to.nodeAfter.isBlock) {\n                      tr.setSelection(NodeSelection.create(tr.doc, $to.pos))\n                    } else {\n                      tr.setSelection(TextSelection.create(tr.doc, $to.pos))\n                    }\n                  } else {\n                    // add node after horizontal rule if it’s the end of the document\n                    const node = $to.parent.type.contentMatch.defaultType?.create()\n\n                    if (node) {\n                      tr.insert(posAfter, node)\n                      tr.setSelection(TextSelection.create(tr.doc, posAfter + 1))\n                    }\n                  }\n\n                  tr.scrollIntoView()\n                }\n\n                return true\n              })\n              .run()\n          )\n        },\n    }\n  },\n\n  addInputRules() {\n    return [\n      nodeInputRule({\n        find: /^(?:---|—-|___\\s|\\*\\*\\*\\s)$/,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8583, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-italic/src/italic.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface ItalicOptions {\n  /**\n   * HTML attributes to add to the italic element.\n   * @default {}\n   * @example { class: 'foo' }\n  */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    italic: {\n      /**\n       * Set an italic mark\n       * @example editor.commands.setItalic()\n       */\n      setItalic: () => ReturnType,\n      /**\n       * Toggle an italic mark\n       * @example editor.commands.toggleItalic()\n       */\n      toggleItalic: () => ReturnType,\n      /**\n       * Unset an italic mark\n       * @example editor.commands.unsetItalic()\n       */\n      unsetItalic: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an italic to a *italic* on input.\n */\nexport const starInputRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))$/\n\n/**\n * Matches an italic to a *italic* on paste.\n */\nexport const starPasteRegex = /(?:^|\\s)(\\*(?!\\s+\\*)((?:[^*]+))\\*(?!\\s+\\*))/g\n\n/**\n * Matches an italic to a _italic_ on input.\n */\nexport const underscoreInputRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))$/\n\n/**\n * Matches an italic to a _italic_ on paste.\n */\nexport const underscorePasteRegex = /(?:^|\\s)(_(?!\\s+_)((?:[^_]+))_(?!\\s+_))/g\n\n/**\n * This extension allows you to create italic text.\n * @see https://www.tiptap.dev/api/marks/italic\n */\nexport const Italic = Mark.create<ItalicOptions>({\n  name: 'italic',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'em',\n      },\n      {\n        tag: 'i',\n        getAttrs: node => (node as HTMLElement).style.fontStyle !== 'normal' && null,\n      },\n      {\n        style: 'font-style=normal',\n        clearMark: mark => mark.type.name === this.name,\n      },\n      {\n        style: 'font-style=italic',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['em', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setItalic: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleItalic: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetItalic: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-i': () => this.editor.commands.toggleItalic(),\n      'Mod-I': () => this.editor.commands.toggleItalic(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: starInputRegex,\n        type: this.type,\n      }),\n      markInputRule({\n        find: underscoreInputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: starPasteRegex,\n        type: this.type,\n      }),\n      markPasteRule({\n        find: underscorePasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;;;AAsCA;;CAEG,GACI,MAAM,cAAc,GAAG;AAE9B;;CAEG,GACI,MAAM,cAAc,GAAG;AAE9B;;CAEG,GACI,MAAM,oBAAoB,GAAG;AAEpC;;CAEG,GACI,MAAM,oBAAoB,GAAG;AAEpC;;;CAGG,GACU,MAAA,MAAM,oJAAG,QAAI,CAAC,MAAM,CAAgB;IAC/C,IAAI,EAAE,QAAQ;IAEd,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,SAAS,GAAA;QACP,OAAO;YACL;gBACE,GAAG,EAAE,IAAI;YACV,CAAA;YACD;gBACE,GAAG,EAAE,GAAG;gBACR,QAAQ,GAAE,IAAI,GAAK,IAAoB,CAAC,KAAK,CAAC,SAAS,KAAK,QAAQ,IAAI,IAAI;YAC7E,CAAA;YACD;gBACE,KAAK,EAAE,mBAAmB;gBAC1B,SAAS,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI;YAChD,CAAA;YACD;gBACE,KAAK,EAAE,mBAAmB;YAC3B,CAAA;SACF;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,IAAI;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KAC/E;IAED,WAAW,GAAA;QACT,OAAO;YACL,SAAS,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAChC,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;iBACnC;YACD,YAAY,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACnC,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBACtC;YACD,WAAW,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAClC,OAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;iBACrC;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;YAClD,OAAO,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;SACnD;KACF;IAED,aAAa,GAAA;QACX,OAAO;kKACL,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;aACF,qKAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;IAED,aAAa,GAAA;QACX,OAAO;kKACL,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;kKACF,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8692, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-list-item/src/list-item.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ListItemOptions {\n  /**\n   * The HTML attributes for a list item node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * The node type for bulletList nodes\n   * @default 'bulletList'\n   * @example 'myCustomBulletList'\n   */\n  bulletListTypeName: string\n\n  /**\n   * The node type for orderedList nodes\n   * @default 'orderedList'\n   * @example 'myCustomOrderedList'\n   */\n  orderedListTypeName: string\n}\n\n/**\n * This extension allows you to create list items.\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const ListItem = Node.create<ListItemOptions>({\n  name: 'listItem',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      bulletListTypeName: 'bulletList',\n      orderedListTypeName: 'orderedList',\n    }\n  },\n\n  content: 'paragraph block*',\n\n  defining: true,\n\n  parseHTML() {\n    return [\n      {\n        tag: 'li',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['li', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      Enter: () => this.editor.commands.splitListItem(this.name),\n      Tab: () => this.editor.commands.sinkListItem(this.name),\n      'Shift-Tab': () => this.editor.commands.liftListItem(this.name),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;AAyBA;;;CAGG,GACU,MAAA,QAAQ,qJAAG,OAAI,CAAC,MAAM,CAAkB;IACnD,IAAI,EAAE,UAAU;IAEhB,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;YAClB,kBAAkB,EAAE,YAAY;YAChC,mBAAmB,EAAE,aAAa;SACnC;KACF;IAED,OAAO,EAAE,kBAAkB;IAE3B,QAAQ,EAAE,IAAI;IAEd,SAAS,GAAA;QACP,OAAO;YACL;gBACE,GAAG,EAAE,IAAI;YACV,CAAA;SACF;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,IAAI;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KAC/E;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,KAAK,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;YAC1D,GAAG,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACvD,WAAW,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;SAChE;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8742, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-ordered-list/src/ordered-list.ts"],"sourcesContent":["import { mergeAttributes, Node, wrappingInputRule } from '@tiptap/core'\n\nconst ListItemName = 'listItem'\nconst TextStyleName = 'textStyle'\n\nexport interface OrderedListOptions {\n  /**\n   * The node type name for list items.\n   * @default 'listItem'\n   * @example 'myListItem'\n   */\n  itemTypeName: string,\n\n  /**\n   * The HTML attributes for an ordered list node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n\n  /**\n   * Keep the marks when splitting a list item.\n   * @default false\n   * @example true\n   */\n  keepMarks: boolean,\n\n  /**\n   * Keep the attributes when splitting a list item.\n   * @default false\n   * @example true\n   */\n  keepAttributes: boolean,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    orderedList: {\n      /**\n       * Toggle an ordered list\n       * @example editor.commands.toggleOrderedList()\n       */\n      toggleOrderedList: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches an ordered list to a 1. on input (or any number followed by a dot).\n */\nexport const inputRegex = /^(\\d+)\\.\\s$/\n\n/**\n * This extension allows you to create ordered lists.\n * This requires the ListItem extension\n * @see https://www.tiptap.dev/api/nodes/ordered-list\n * @see https://www.tiptap.dev/api/nodes/list-item\n */\nexport const OrderedList = Node.create<OrderedListOptions>({\n  name: 'orderedList',\n\n  addOptions() {\n    return {\n      itemTypeName: 'listItem',\n      HTMLAttributes: {},\n      keepMarks: false,\n      keepAttributes: false,\n    }\n  },\n\n  group: 'block list',\n\n  content() {\n    return `${this.options.itemTypeName}+`\n  },\n\n  addAttributes() {\n    return {\n      start: {\n        default: 1,\n        parseHTML: element => {\n          return element.hasAttribute('start')\n            ? parseInt(element.getAttribute('start') || '', 10)\n            : 1\n        },\n      },\n      type: {\n        default: null,\n        parseHTML: element => element.getAttribute('type'),\n      },\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'ol',\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    const { start, ...attributesWithoutStart } = HTMLAttributes\n\n    return start === 1\n      ? ['ol', mergeAttributes(this.options.HTMLAttributes, attributesWithoutStart), 0]\n      : ['ol', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      toggleOrderedList: () => ({ commands, chain }) => {\n        if (this.options.keepAttributes) {\n          return chain().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(ListItemName, this.editor.getAttributes(TextStyleName)).run()\n        }\n        return commands.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-7': () => this.editor.commands.toggleOrderedList(),\n    }\n  },\n\n  addInputRules() {\n    let inputRule = wrappingInputRule({\n      find: inputRegex,\n      type: this.type,\n      getAttributes: match => ({ start: +match[1] }),\n      joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n    })\n\n    if (this.options.keepMarks || this.options.keepAttributes) {\n      inputRule = wrappingInputRule({\n        find: inputRegex,\n        type: this.type,\n        keepMarks: this.options.keepMarks,\n        keepAttributes: this.options.keepAttributes,\n        getAttributes: match => ({ start: +match[1], ...this.editor.getAttributes(TextStyleName) }),\n        joinPredicate: (match, node) => node.childCount + node.attrs.start === +match[1],\n        editor: this.editor,\n      })\n    }\n    return [\n      inputRule,\n    ]\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8857, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-paragraph/src/paragraph.ts"],"sourcesContent":["import { mergeAttributes, Node } from '@tiptap/core'\n\nexport interface ParagraphOptions {\n  /**\n   * The HTML attributes for a paragraph node.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    paragraph: {\n      /**\n       * Toggle a paragraph\n       * @example editor.commands.toggleParagraph()\n       */\n      setParagraph: () => ReturnType,\n    }\n  }\n}\n\n/**\n * This extension allows you to create paragraphs.\n * @see https://www.tiptap.dev/api/nodes/paragraph\n */\nexport const Paragraph = Node.create<ParagraphOptions>({\n  name: 'paragraph',\n\n  priority: 1000,\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  group: 'block',\n\n  content: 'inline*',\n\n  parseHTML() {\n    return [\n      { tag: 'p' },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['p', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setParagraph: () => ({ commands }) => {\n        return commands.setNode(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-0': () => this.editor.commands.setParagraph(),\n    }\n  },\n})\n"],"names":[],"mappings":";;;;;;AAuBA;;;CAGG,GACU,MAAA,SAAS,qJAAG,OAAI,CAAC,MAAM,CAAmB;IACrD,IAAI,EAAE,WAAW;IAEjB,QAAQ,EAAE,IAAI;IAEd,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,KAAK,EAAE,OAAO;IAEd,OAAO,EAAE,SAAS;IAElB,SAAS,GAAA;QACP,OAAO;YACL;gBAAE,GAAG,EAAE,GAAG;YAAA,CAAE;SACb;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,GAAG;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KAC9E;IAED,WAAW,GAAA;QACT,OAAO;YACL,YAAY,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACnC,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;iBACnC;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,WAAW,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;SACvD;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 8911, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-strike/src/strike.ts"],"sourcesContent":["import {\n  Mark,\n  markInputRule,\n  markPasteRule,\n  mergeAttributes,\n} from '@tiptap/core'\n\nexport interface StrikeOptions {\n  /**\n   * HTML attributes to add to the strike element.\n   * @default {}\n   * @example { class: 'foo' }\n   */\n  HTMLAttributes: Record<string, any>,\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    strike: {\n      /**\n       * Set a strike mark\n       * @example editor.commands.setStrike()\n       */\n      setStrike: () => ReturnType,\n      /**\n       * Toggle a strike mark\n       * @example editor.commands.toggleStrike()\n       */\n      toggleStrike: () => ReturnType,\n      /**\n       * Unset a strike mark\n       * @example editor.commands.unsetStrike()\n       */\n      unsetStrike: () => ReturnType,\n    }\n  }\n}\n\n/**\n * Matches a strike to a ~~strike~~ on input.\n */\nexport const inputRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))$/\n\n/**\n * Matches a strike to a ~~strike~~ on paste.\n */\nexport const pasteRegex = /(?:^|\\s)(~~(?!\\s+~~)((?:[^~]+))~~(?!\\s+~~))/g\n\n/**\n * This extension allows you to create strike text.\n * @see https://www.tiptap.dev/api/marks/strike\n */\nexport const Strike = Mark.create<StrikeOptions>({\n  name: 'strike',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    }\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 's',\n      },\n      {\n        tag: 'del',\n      },\n      {\n        tag: 'strike',\n      },\n      {\n        style: 'text-decoration',\n        consuming: false,\n        getAttrs: style => ((style as string).includes('line-through') ? {} : false),\n      },\n    ]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['s', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setStrike: () => ({ commands }) => {\n        return commands.setMark(this.name)\n      },\n      toggleStrike: () => ({ commands }) => {\n        return commands.toggleMark(this.name)\n      },\n      unsetStrike: () => ({ commands }) => {\n        return commands.unsetMark(this.name)\n      },\n    }\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Shift-s': () => this.editor.commands.toggleStrike(),\n    }\n  },\n\n  addInputRules() {\n    return [\n      markInputRule({\n        find: inputRegex,\n        type: this.type,\n      }),\n    ]\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: pasteRegex,\n        type: this.type,\n      }),\n    ]\n  },\n})\n"],"names":[],"mappings":";;;;;;;;AAsCA;;CAEG,GACI,MAAM,UAAU,GAAG;AAE1B;;CAEG,GACI,MAAM,UAAU,GAAG;AAE1B;;;CAGG,GACU,MAAA,MAAM,qJAAG,OAAI,CAAC,MAAM,CAAgB;IAC/C,IAAI,EAAE,QAAQ;IAEd,UAAU,GAAA;QACR,OAAO;YACL,cAAc,EAAE,CAAA,CAAE;SACnB;KACF;IAED,SAAS,GAAA;QACP,OAAO;YACL;gBACE,GAAG,EAAE,GAAG;YACT,CAAA;YACD;gBACE,GAAG,EAAE,KAAK;YACX,CAAA;YACD;gBACE,GAAG,EAAE,QAAQ;YACd,CAAA;YACD;gBACE,KAAK,EAAE,iBAAiB;gBACxB,SAAS,EAAE,KAAK;gBAChB,QAAQ,GAAE,KAAK,GAAM,KAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAA,CAAE,GAAG,KAAK,CAAC;YAC7E,CAAA;SACF;KACF;IAED,UAAU,EAAC,EAAE,cAAc,EAAE,EAAA;QAC3B,OAAO;YAAC,GAAG;kKAAE,kBAAA,AAAe,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,cAAc,CAAC;YAAE,CAAC;SAAC;KAC9E;IAED,WAAW,GAAA;QACT,OAAO;YACL,SAAS,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAChC,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;iBACnC;YACD,YAAY,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBACnC,OAAO,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;iBACtC;YACD,WAAW,EAAE,IAAM,CAAC,EAAE,QAAQ,EAAE,KAAI;oBAClC,OAAO,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;iBACrC;SACF;KACF;IAED,oBAAoB,GAAA;QAClB,OAAO;YACL,aAAa,EAAE,IAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,EAAE;SACzD;KACF;IAED,aAAa,GAAA;QACX,OAAO;aACL,qKAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;IAED,aAAa,GAAA;QACX,OAAO;kKACL,gBAAA,AAAa,EAAC;gBACZ,IAAI,EAAE,UAAU;gBAChB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC;SACH;KACF;AACF,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9003, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/extension-text/src/text.ts"],"sourcesContent":["import { Node } from '@tiptap/core'\n\n/**\n * This extension allows you to create text nodes.\n * @see https://www.tiptap.dev/api/nodes/text\n */\nexport const Text = Node.create({\n  name: 'text',\n  group: 'inline',\n})\n"],"names":[],"mappings":";;;;;;AAEA;;;CAGG,GACU,MAAA,IAAI,qJAAG,OAAI,CAAC,MAAM,CAAC;IAC9B,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,QAAQ;AAChB,CAAA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 9024, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file:///D:/editor/node_modules/%40tiptap/starter-kit/src/starter-kit.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { Blockquote, BlockquoteOptions } from '@tiptap/extension-blockquote'\nimport { Bold, BoldOptions } from '@tiptap/extension-bold'\nimport { BulletList, BulletListOptions } from '@tiptap/extension-bullet-list'\nimport { Code, CodeOptions } from '@tiptap/extension-code'\nimport { CodeBlock, CodeBlockOptions } from '@tiptap/extension-code-block'\nimport { Document } from '@tiptap/extension-document'\nimport { Dropcursor, DropcursorOptions } from '@tiptap/extension-dropcursor'\nimport { Gapcursor } from '@tiptap/extension-gapcursor'\nimport { HardBreak, HardBreakOptions } from '@tiptap/extension-hard-break'\nimport { Heading, HeadingOptions } from '@tiptap/extension-heading'\nimport { History, HistoryOptions } from '@tiptap/extension-history'\nimport { HorizontalRule, HorizontalRuleOptions } from '@tiptap/extension-horizontal-rule'\nimport { Italic, ItalicOptions } from '@tiptap/extension-italic'\nimport { ListItem, ListItemOptions } from '@tiptap/extension-list-item'\nimport { OrderedList, OrderedListOptions } from '@tiptap/extension-ordered-list'\nimport { Paragraph, ParagraphOptions } from '@tiptap/extension-paragraph'\nimport { Strike, StrikeOptions } from '@tiptap/extension-strike'\nimport { Text } from '@tiptap/extension-text'\n\nexport interface StarterKitOptions {\n  /**\n   * If set to false, the blockquote extension will not be registered\n   * @example blockquote: false\n   */\n  blockquote: Partial<BlockquoteOptions> | false,\n\n  /**\n   * If set to false, the bold extension will not be registered\n   * @example bold: false\n   */\n  bold: Partial<BoldOptions> | false,\n\n  /**\n   * If set to false, the bulletList extension will not be registered\n   * @example bulletList: false\n   */\n  bulletList: Partial<BulletListOptions> | false,\n\n  /**\n   * If set to false, the code extension will not be registered\n   * @example code: false\n   */\n  code: Partial<CodeOptions> | false,\n\n  /**\n   * If set to false, the codeBlock extension will not be registered\n   * @example codeBlock: false\n   */\n  codeBlock: Partial<CodeBlockOptions> | false,\n\n  /**\n   * If set to false, the document extension will not be registered\n   * @example document: false\n   */\n  document: false,\n\n  /**\n   * If set to false, the dropcursor extension will not be registered\n   * @example dropcursor: false\n   */\n  dropcursor: Partial<DropcursorOptions> | false,\n\n  /**\n   * If set to false, the gapcursor extension will not be registered\n   * @example gapcursor: false\n   */\n  gapcursor: false,\n\n  /**\n   * If set to false, the hardBreak extension will not be registered\n   * @example hardBreak: false\n   */\n  hardBreak: Partial<HardBreakOptions> | false,\n\n  /**\n   * If set to false, the heading extension will not be registered\n   * @example heading: false\n   */\n  heading: Partial<HeadingOptions> | false,\n\n  /**\n   * If set to false, the history extension will not be registered\n   * @example history: false\n   */\n  history: Partial<HistoryOptions> | false,\n\n  /**\n   * If set to false, the horizontalRule extension will not be registered\n   * @example horizontalRule: false\n   */\n  horizontalRule: Partial<HorizontalRuleOptions> | false,\n\n  /**\n   * If set to false, the italic extension will not be registered\n   * @example italic: false\n   */\n  italic: Partial<ItalicOptions> | false,\n\n  /**\n   * If set to false, the listItem extension will not be registered\n   * @example listItem: false\n   */\n  listItem: Partial<ListItemOptions> | false,\n\n  /**\n   * If set to false, the orderedList extension will not be registered\n   * @example orderedList: false\n   */\n  orderedList: Partial<OrderedListOptions> | false,\n\n  /**\n   * If set to false, the paragraph extension will not be registered\n   * @example paragraph: false\n   */\n  paragraph: Partial<ParagraphOptions> | false,\n\n  /**\n   * If set to false, the strike extension will not be registered\n   * @example strike: false\n   */\n  strike: Partial<StrikeOptions> | false,\n\n  /**\n   * If set to false, the text extension will not be registered\n   * @example text: false\n   */\n  text: false,\n}\n\n/**\n * The starter kit is a collection of essential editor extensions.\n *\n * It’s a good starting point for building your own editor.\n */\nexport const StarterKit = Extension.create<StarterKitOptions>({\n  name: 'starterKit',\n\n  addExtensions() {\n    const extensions = []\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options.bold))\n    }\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options.blockquote))\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options.bulletList))\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options.code))\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options.codeBlock))\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options.document))\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options.dropcursor))\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options.gapcursor))\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options.hardBreak))\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options.heading))\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options.history))\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options.horizontalRule))\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options.italic))\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options.listItem))\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options.orderedList))\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options.paragraph))\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options.strike))\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options.text))\n    }\n\n    return extensions\n  },\n})\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}}]
}